{"version":3,"file":"static/js/4160.f2367375.chunk.js","mappings":"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","sources":["components/ui/button.tsx","components/ui/checkbox.tsx","components/ui/input.tsx","components/ui/label.tsx","components/ui/separator.tsx","lib/utils.ts","login/i18n.ts","components/ui/dropdown-menu.tsx","components/ui/alert.tsx","components/ui/card.tsx","login/Template.tsx","login/pages/LoginResetPassword.tsx","login/pages/LoginUsername.tsx","login/pages/LoginPassword.tsx","login/pages/WebauthnRegister.tsx","login/pages/WebauthnAuthenticate.tsx","login/pages/SelectAuthenticator.tsx","login/KcApp.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\nimport {cn} from \"lib/utils\";\n\n\n\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import {createUseI18n} from \"keycloakify/login\";\n\nexport const {useI18n} = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    //@ts-ignore\n    en: {\n        loginAs: \"Log in as\",\n        notYou: \"Not You?\"\n    },\n    zh_CN: {\n        loginAs: \"登录为\",\n        notYou: \"不是你？\",\n        \"doLogIn\": \"登录\",\n        \"doRegister\": \"注册\",\n        \"doCancel\": \"取消\",\n        \"doSubmit\": \"提交\",\n        \"doBack\": \"返回\",\n        \"doYes\": \"是\",\n        \"doNo\": \"否\",\n        \"doContinue\": \"继续\",\n        \"doIgnore\": \"忽略\",\n        \"doAccept\": \"接受\",\n        \"doDecline\": \"拒绝\",\n        \"doForgotPassword\": \"忘记密码?\",\n        \"doClickHere\": \"点击这里\",\n        \"doImpersonate\": \"模拟\",\n        \"doTryAgain\": \"重试\",\n        \"doTryAnotherWay\": \"尝试其他方法\",\n        \"doConfirmDelete\": \"确认删除\",\n        \"errorDeletingAccount\": \"删除账户时遇到错误\",\n        \"deletingAccountForbidden\": \"您没有权限删除您的账户，请联系管理员。\",\n        \"kerberosNotConfigured\": \"Kerberos 没有配置\",\n        \"kerberosNotConfiguredTitle\": \"Kerberos 没有配置\",\n        \"bypassKerberosDetail\": \"您没有通过 Kerberos 登录 或者您的浏览器没有设置 Kerberos 登录. 请点击继续通过其他途径登录。\",\n        \"kerberosNotSetUp\": \"Kerberos 没有配置，您无法登录。\",\n        \"registerTitle\": \"注册\",\n        \"loginAccountTitle\": \"登录到您的账户\",\n        \"loginTitle\": \"登录到 {0}\",\n        \"loginTitleHtml\": \"{0}\",\n        \"impersonateTitle\": \"{0} 模拟用户\",\n        \"impersonateTitleHtml\": \"<strong>{0}</strong>模拟用户\",\n        \"realmChoice\": \"域\",\n        \"unknownUser\": \"未知用户\",\n        \"loginTotpTitle\": \"配置验证器\",\n        \"loginProfileTitle\": \"更新账户信息\",\n        \"loginIdpReviewProfileTitle\": \"更新账户信息\",\n        \"loginTimeout\": \"您的登录已超时，请重新开始登录。\",\n        \"reauthenticate\": \"请重新授权以继续\",\n        \"oauthGrantTitle\": \"授权给 {0}\",\n        \"oauthGrantTitleHtml\": \"{0}\",\n        \"oauthGrantInformation\": \"通过了解 {0} 将如何处理您的数据，确保您信任 {0} 。\",\n        \"oauthGrantReview\": \"您可以审阅\",\n        \"oauthGrantTos\": \"服务条款。\",\n        \"oauthGrantPolicy\": \"隐私政策。\",\n        \"errorTitle\": \"很抱歉...\",\n        \"errorTitleHtml\": \"我们<strong>很抱歉</strong> ...\",\n        \"emailVerifyTitle\": \"验证电子邮箱地址\",\n        \"emailForgotTitle\": \"忘记密码了吗?\",\n        \"updateEmailTitle\": \"更新点在邮箱\",\n        \"emailUpdateConfirmationSentTitle\": \"已发送确认邮件。\",\n        \"emailUpdateConfirmationSent\": \"已向 {0} 发送了一封确认邮件. 请按照前面的指示来更新电子邮箱。\",\n        \"emailUpdatedTitle\": \"电子邮箱已更新。\",\n        \"emailUpdated\": \"您的账户的电子邮箱已经成功更新为 {0}.\",\n        \"updatePasswordTitle\": \"更新密码\",\n        \"codeSuccessTitle\": \"成功代码\",\n        \"codeErrorTitle\": \"错误代码\\: {0}\",\n        \"displayUnsupported\": \"不支持请求的显示类型\",\n        \"browserRequired\": \"需要浏览器来登录\",\n        \"browserContinue\": \"需要浏览器来完成登录\",\n        \"browserContinuePrompt\": \"打开浏览器以继续？ [y/n]:\",\n        \"browserContinueAnswer\": \"y\",\n        \"usb\": \"USB\",\n        \"nfc\": \"NFC\",\n        \"bluetooth\": \"蓝牙\",\n        \"internal\": \"内部\",\n        \"unknown\": \"未知\",\n        \"termsTitle\": \"条款\",\n        \"termsText\": \"<p>需要确定的条款</p>\",\n        \"termsPlainText\": \"需要确定的条款。\",\n        \"termsAcceptanceRequired\": \"您必须同意我们的的服务条款。\",\n        \"acceptTerms\": \"我同意服务条款\",\n        \"recaptchaFailed\": \"无效的验证码\",\n        \"recaptchaNotConfigured\": \"需要验证码，但是没有配置\",\n        \"consentDenied\": \"许可被拒绝。\",\n        \"noAccount\": \"新用户?\",\n        \"username\": \"用户名\",\n        \"usernameOrEmail\": \"用户名 或 电子邮箱地址\",\n        \"firstName\": \"名\",\n        \"givenName\": \"姓\",\n        \"fullName\": \"全名\",\n        \"lastName\": \"姓\",\n        \"familyName\": \"姓\",\n        \"email\": \"Email\",\n        \"password\": \"密码\",\n        \"passwordConfirm\": \"确认密码\",\n        \"passwordNew\": \"新密码\",\n        \"passwordNewConfirm\": \"确认新密码\",\n        \"hidePassword\": \"隐藏密码\",\n        \"showPassword\": \"显示密码\",\n        \"rememberMe\": \"记住我\",\n        \"authenticatorCode\": \"一次性验证码\",\n        \"address\": \"地址\",\n        \"street\": \"街道\",\n        \"locality\": \"市\",\n        \"region\": \"省，自治区，直辖市\",\n        \"postal_code\": \"邮政编码\",\n        \"country\": \"国家\",\n        \"emailVerified\": \"已验证电子邮件\",\n        \"website\": \"网址\",\n        \"phoneNumber\": \"电话号码\",\n        \"phoneNumberVerified\": \"已验证电话号码\",\n        \"gender\": \"性别\",\n        \"birthday\": \"生日\",\n        \"zoneinfo\": \"时区\",\n        \"gssDelegationCredential\": \"GSS Delegation Credential\",\n        \"logoutOtherSessions\": \"从其他设备中登出\",\n        \"profileScopeConsentText\": \"用户资料\",\n        \"emailScopeConsentText\": \"电子邮箱地址\",\n        \"addressScopeConsentText\": \"地址\",\n        \"phoneScopeConsentText\": \"电话号码\",\n        \"offlineAccessScopeConsentText\": \"离线访问\",\n        \"samlRoleListScopeConsentText\": \"我的角色\",\n        \"rolesScopeConsentText\": \"用户角色\",\n        \"restartLoginTooltip\": \"重新开始登录\",\n        \"loginTotpIntro\": \"您需要设置一个一次性密码生成器来访问您的账户\",\n        \"loginTotpStep1\": \"在您的移动设备中安装以下任意一个应用：\",\n        \"loginTotpStep2\": \"打开该应用来扫描条码\",\n        \"loginTotpStep3\": \"输入该应用提供的一次性代码并点击提交来完成配置。\",\n        \"loginTotpStep3DeviceName\": \"请提供一个设备名称以方便管理您的OTP设备\",\n        \"loginTotpManualStep2\": \"打开应用并输入密钥：\",\n        \"loginTotpManualStep3\": \"如果应用程序允许设置，请使用以下配置值：\",\n        \"loginTotpUnableToScan\": \"无法扫描？\",\n        \"loginTotpScanBarcode\": \"扫描条码？\",\n        \"loginCredential\": \"凭证\",\n        \"loginOtpOneTime\": \"一次性代码\",\n        \"loginTotpType\": \"类型\",\n        \"loginTotpAlgorithm\": \"算法\",\n        \"loginTotpDigits\": \"位数\",\n        \"loginTotpInterval\": \"间隔\",\n        \"loginTotpCounter\": \"计数\",\n        \"loginTotpDeviceName\": \"设备名称\",\n        \"loginTotp.totp\": \"基于时间\",\n        \"loginTotp.hotp\": \"给予计数器\",\n        \"totpAppFreeOTPName\": \"FreeOTP\",\n        \"totpAppGoogleName\": \"Google Authenticator\",\n        \"totpAppMicrosoftAuthenticatorName\": \"Microsoft Authenticator\",\n        \"loginChooseAuthenticator\": \"选择登录方式\",\n        \"oauthGrantRequest\": \"您是否授予这些访问权限?\",\n        \"inResource\": \"in\",\n        \"oauth2DeviceVerificationTitle\": \"设备登录\",\n        \"verifyOAuth2DeviceUserCode\": \"输入设备提供的代码，然后单击提交\",\n        \"oauth2DeviceInvalidUserCodeMessage\": \"错误代码，请重试。\",\n        \"oauth2DeviceExpiredUserCodeMessage\": \"代码已过期。请返回您的设备并尝试重新连接。\",\n        \"oauth2DeviceVerificationCompleteHeader\": \"设备登录成功\",\n        \"oauth2DeviceVerificationCompleteMessage\": \"您可以关闭此浏览器窗口并返回您的设备。\",\n        \"oauth2DeviceVerificationFailedHeader\": \"设备登录失败。\",\n        \"oauth2DeviceVerificationFailedMessage\": \"您可以关闭此浏览器窗口，然后返回到您的设备并尝试重新连接。\",\n        \"oauth2DeviceConsentDeniedMessage\": \"连接设备的同意被拒绝。\",\n        \"oauth2DeviceAuthorizationGrantDisabledMessage\": \"不允许此客户端启动 OAuth 2.0 设备授权授予。该流程已对此客户端禁用。\",\n        \"emailVerifyInstruction1\": \"一封包含验证邮箱具体步骤的邮件已经发送到您的邮箱。\",\n        \"emailVerifyInstruction2\": \"邮箱没有收到验证码?\",\n        \"emailVerifyInstruction3\": \"重新发送电子邮件\",\n        \"emailLinkIdpTitle\": \"链接 {0}\",\n        \"emailLinkIdp1\": \"一封包含链接账户 {0} 和账户 {1} 到账户 {2} 的邮件已经发送到您的邮箱。\",\n        \"emailLinkIdp2\": \"邮箱没有收到验证码邮件?\",\n        \"emailLinkIdp3\": \"重新发送电子邮件\",\n        \"emailLinkIdp4\": \"如果您已经在不同的浏览器中验证了电子邮件\",\n        \"emailLinkIdp5\": \"来继续.\",\n        \"backToLogin\": \"&laquo; 回到登录\",\n        \"emailInstruction\": \"输入您的用户名或邮箱，我们会发送一封带有设置新密码步骤的邮件到您的邮箱。\",\n        \"emailInstructionUsername\": \"输入您的用户名，我们将向您发送如何创建新密码的说明。\",\n        \"copyCodeInstruction\": \"请复制这段验证码并粘贴到您的应用：\",\n        \"pageExpiredTitle\": \"页面已过期\",\n        \"pageExpiredMsg1\": \"来重启登录流程\",\n        \"pageExpiredMsg2\": \"来继续登录流程\",\n        \"personalInfo\": \"个人信息\\:\",\n        \"role_admin\": \"管理员\",\n        \"role_realm-admin\": \"域管理员\",\n        \"role_create-realm\": \"创建域\",\n        \"role_create-client\": \"创建客户端\",\n        \"role_view-realm\": \"查看域\",\n        \"role_view-users\": \"查看用户\",\n        \"role_view-applications\": \"查看应用\",\n        \"role_view-clients\": \"查看客户端\",\n        \"role_view-events\": \"查看时间\",\n        \"role_view-identity-providers\": \"查看身份提供者\",\n        \"role_manage-realm\": \"管理域\",\n        \"role_manage-users\": \"管理用户\",\n        \"role_manage-applications\": \"管理应用\",\n        \"role_manage-identity-providers\": \"管理身份提供者\",\n        \"role_manage-clients\": \"管理客户\",\n        \"role_manage-events\": \"管理事件\",\n        \"role_view-profile\": \"查看用户信息\",\n        \"role_manage-account\": \"管理账户\",\n        \"role_manage-account-links\": \"管理账户链接\",\n        \"role_read-token\": \"读取令牌\",\n        \"role_offline-access\": \"离线访问\",\n        \"client_account\": \"账户\",\n        \"client_account-console\": \"账户控制台\",\n        \"client_security-admin-console\": \"安全管理控制台\",\n        \"client_admin-cli\": \"管理命令行工具\",\n        \"client_realm-management\": \"域管理\",\n        \"client_broker\": \"经纪人\",\n        \"requiredFields\": \"必填字段\",\n        \"invalidUserMessage\": \"无效的用户名或密码。\",\n        \"invalidUsernameMessage\": \"无效的用户名。\",\n        \"invalidUsernameOrEmailMessage\": \"无效的用户名或电子邮箱。\",\n        \"invalidPasswordMessage\": \"无效的密码.\",\n        \"invalidEmailMessage\": \"无效的电子邮件地址\",\n        \"accountDisabledMessage\": \"账户已被禁用，请联系您的管理员。\",\n        \"accountTemporarilyDisabledMessage\": \"账户被临时禁用，请联系管理员或稍后再试。\",\n        \"expiredCodeMessage\": \"登录超时，请重新登录。\",\n        \"expiredActionMessage\": \"操作已过期。请登录后继续。\",\n        \"expiredActionTokenNoSessionMessage\": \"操作已过期。\",\n        \"expiredActionTokenSessionExistsMessage\": \"操作已过期。请重新开始。\",\n        \"sessionLimitExceeded\": \"已有过多会话。\",\n        \"missingFirstNameMessage\": \"请输入名。\",\n        \"missingLastNameMessage\": \"请输入姓。\",\n        \"missingEmailMessage\": \"请输入电子邮箱.\",\n        \"missingUsernameMessage\": \"请输入用户名。\",\n        \"missingPasswordMessage\": \"请输入密码。\",\n        \"missingTotpMessage\": \"请输入验证码\",\n        \"missingTotpDeviceNameMessage\": \"请指定设备名称。\",\n        \"notMatchPasswordMessage\": \"密码不匹配。\",\n        \"error-invalid-value\": \"无效值。\",\n        \"error-invalid-blank\": \"请输入值。\",\n        \"error-empty\": \"请输入值。\",\n        \"error-invalid-length\": \"长度必须在 {1} 和 {2} 之间。\",\n        \"error-invalid-length-too-short\": \"最小长度为 {1}。\",\n        \"error-invalid-length-too-long\": \" 最大长度为 {2}。\",\n        \"error-invalid-email\": \"无效电子邮件地址。\",\n        \"error-invalid-number\": \"无效号码。\",\n        \"error-number-out-of-range\": \"号码必须介于 {1} 和 {2} 之间。\",\n        \"error-number-out-of-range-too-small\": \" 数字的最小值必须是 {1}。\",\n        \"error-number-out-of-range-too-big\": \" 数值的最大值必须为 {2}。\",\n        \"error-pattern-no-match\": \"无效值。\",\n        \"error-invalid-uri\": \"无效 URL。\",\n        \"error-invalid-uri-scheme\": \"无效 URL 方案。\",\n        \"error-invalid-uri-fragment\": \"无效 URL 片段。\",\n        \"error-user-attribute-required\": \"请指定此字段。\",\n        \"error-invalid-date\": \"无效日期。\",\n        \"error-user-attribute-read-only\": \"此字段只读。\",\n        \"error-username-invalid-character\": \"值包含无效字符。\",\n        \"error-person-name-invalid-character\": \"值包含无效字符。\",\n        \"error-reset-otp-missing-id\": \"请选择 OTP 配置。\",\n        \"invalidPasswordExistingMessage\": \"无效的旧密码\",\n        \"invalidPasswordBlacklistedMessage\": \"无效密码：该密码已经被拉黑。\",\n        \"invalidPasswordConfirmMessage\": \"确认密码不相同\",\n        \"invalidTotpMessage\": \"无效的验证码\",\n        \"usernameExistsMessage\": \"用户名已被占用\",\n        \"emailExistsMessage\": \"电子邮件已存在。\",\n        \"federatedIdentityExistsMessage\": \"用户 {0} {1} 已存在. 请登录账户管理界面链接账户.\",\n        \"federatedIdentityUnavailableMessage\": \"使用身份提供者 {1} 进行身份验证的用户 {0} 不存在。请联系管理员。\",\n        \"federatedIdentityUnmatchedEssentialClaimMessage\": \"身份提供者签发的 ID 令牌与配置的基本要求不匹配。请联系管理员。\",\n        \"confirmLinkIdpTitle\": \"账户已存在\",\n        \"federatedIdentityConfirmLinkMessage\": \"用户{0} {1} 已存在. 怎么继续?\",\n        \"federatedIdentityConfirmReauthenticateMessage\": \"以 {0} 登录来将 {1} 连接到您的账户\",\n        \"nestedFirstBrokerFlowMessage\": \"{0} 用户 {1} 与任何已知用户都没有关联。\",\n        \"confirmLinkIdpReviewProfile\": \"审查您的信息\",\n        \"confirmLinkIdpContinue\": \"添加到已知账户\",\n        \"configureTotpMessage\": \"您需要设置移动验证码来激活您的账户。\",\n        \"configureBackupCodesMessage\": \"您需要设置备份代码来激活您的账户。\",\n        \"updateProfileMessage\": \"您需要更新您的用户资料来激活您的账户。\",\n        \"updatePasswordMessage\": \"您需要更新您的密码来激活您的账户。\",\n        \"updateEmailMessage\": \"您需要更新您的电子邮箱地址来激活您的账户。\",\n        \"resetPasswordMessage\": \"您需要修改您的密码。\",\n        \"verifyEmailMessage\": \"您需要验证您的电子邮箱来激活您的账户\",\n        \"linkIdpMessage\": \"您需要验证您的电子邮箱来连接到账户{0}.\",\n        \"emailSentMessage\": \"您很快会收到一封关于接下来操作的邮件。\",\n        \"emailSendErrorMessage\": \"无法发送邮件，请稍后再试\",\n        \"accountUpdatedMessage\": \"您的账户已经更新。\",\n        \"accountPasswordUpdatedMessage\": \"您的密码已经被更新。\",\n        \"delegationCompleteHeader\": \"登录成功\",\n        \"delegationCompleteMessage\": \"您可以关闭浏览器窗口，返回控制台应用程序。\",\n        \"delegationFailedHeader\": \"登录失败\",\n        \"delegationFailedMessage\": \"您可以关闭此浏览器窗口，返回控制台应用程序并尝试重新登录。\",\n        \"noAccessMessage\": \"无权限\",\n        \"invalidPasswordMinLengthMessage\": \"无效的密码：最短长度 {0}.\",\n        \"invalidPasswordMaxLengthMessage\": \"无效的密码：最大长度 {0}.\",\n        \"invalidPasswordMinDigitsMessage\": \"无效的密码： 至少包含{0} 个数字\",\n        \"invalidPasswordMinLowerCaseCharsMessage\": \"无效的密码：至少包含 {0} 小写字母.\",\n        \"invalidPasswordMinUpperCaseCharsMessage\": \"无效的密码：至少包含 {0} 大写字母.\",\n        \"invalidPasswordMinSpecialCharsMessage\": \"无效的密码：至少包含 {0} 特殊字符.\",\n        \"invalidPasswordNotUsernameMessage\": \"无效的密码： 不能与用户名相同.\",\n        \"invalidPasswordNotEmailMessage\": \"无效的密码：不能与电子邮箱地址相同。\",\n        \"invalidPasswordRegexPatternMessage\": \"无效的密码： 无法与正则表达式匹配.\",\n        \"invalidPasswordHistoryMessage\": \"无效的密码： 不能与前 {0} 个旧密码相同.\",\n        \"invalidPasswordGenericMessage\": \"无效的密码：新密码不符合密码规则。\",\n        \"failedToProcessResponseMessage\": \"无法处理回复\",\n        \"httpsRequiredMessage\": \"需要HTTPS\",\n        \"realmNotEnabledMessage\": \"域未启用\",\n        \"invalidRequestMessage\": \"非法的请求\",\n        \"successLogout\": \"您已被登出\",\n        \"failedLogout\": \"无法登出\",\n        \"unknownLoginRequesterMessage\": \"未知的登录请求发起方\",\n        \"loginRequesterNotEnabledMessage\": \"登录请求发起方未启用\",\n        \"bearerOnlyMessage\": \"Bearer-only 的应用不允许通过浏览器登录\",\n        \"standardFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用标准流程。\",\n        \"implicitFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用隐式流程。\",\n        \"invalidRedirectUriMessage\": \"无效的跳转链接\",\n        \"unsupportedNameIdFormatMessage\": \"不支持的 NameIDFormat\",\n        \"invalidRequesterMessage\": \"无效的发起者\",\n        \"registrationNotAllowedMessage\": \"不允许注册\",\n        \"resetCredentialNotAllowedMessage\": \"不允许重置凭证\",\n        \"permissionNotApprovedMessage\": \"许可没有批准\",\n        \"noRelayStateInResponseMessage\": \"身份提供者没有返回中继状态信息\",\n        \"insufficientPermissionMessage\": \"权限不足以链接新的身份\",\n        \"couldNotProceedWithAuthenticationRequestMessage\": \"无法与身份提供者处理认证请求\",\n        \"couldNotObtainTokenMessage\": \"未从身份提供者获得令牌\",\n        \"unexpectedErrorRetrievingTokenMessage\": \"从身份提供者获得令牌时遇到未知错误\",\n        \"unexpectedErrorHandlingResponseMessage\": \"从身份提供者获得回复时遇到未知错误\",\n        \"identityProviderAuthenticationFailedMessage\": \"认证失败，无法通过身份提供者认证\",\n        \"couldNotSendAuthenticationRequestMessage\": \"无法向身份提供方发送认证请求\",\n        \"unexpectedErrorHandlingRequestMessage\": \"在处理发向认证提供方的请求时，出现未知错误。\",\n        \"invalidAccessCodeMessage\": \"无效的访问代码\",\n        \"sessionNotActiveMessage\": \"会话不在活动状态\",\n        \"invalidCodeMessage\": \"发生错误，请通过应用程序重新登录。\",\n        \"cookieNotFoundMessage\": \"未找到 cookie。请确保浏览器已启用 cookie。\",\n        \"insufficientLevelOfAuthentication\": \"未满足所请求的身份验证级别。\",\n        \"identityProviderUnexpectedErrorMessage\": \"与身份提供程序进行身份验证时出现意外错误\",\n        \"identityProviderMissingStateMessage\": \"身份提供程序的响应中缺少状态参数。\",\n        \"identityProviderMissingCodeOrErrorMessage\": \"身份提供程序的响应中缺少代码或错误参数。\",\n        \"identityProviderInvalidResponseMessage\": \"身份提供程序的无效响应。\",\n        \"identityProviderInvalidSignatureMessage\": \"身份提供程序响应中的无效签名。\",\n        \"identityProviderNotFoundMessage\": \"找不到具有标识符的身份提供程序。\",\n        \"identityProviderLinkSuccess\": \"您已成功验证电子邮件。请回到原来的浏览器继续登录。\",\n        \"staleCodeMessage\": \"此页面已失效，请返回应用程序并重新登录\",\n        \"realmSupportsNoCredentialsMessage\": \"域不支持任何凭证类型。\",\n        \"credentialSetupRequired\": \"无法登录，需要设置凭证。\",\n        \"identityProviderNotUniqueMessage\": \"该域支持多个身份提供程序。无法确定应使用哪个身份提供程序进行身份验证。\",\n        \"emailVerifiedMessage\": \"您的电子邮件地址已通过验证。\",\n        \"emailVerifiedAlreadyMessage\": \"您的电子邮件地址已被验证通过。\",\n        \"staleEmailVerificationLink\": \"您点击的链接是旧的过期链接，已经不再有效。 也许您已经验证了您的电子邮件。\",\n        \"identityProviderAlreadyLinkedMessage\": \"{0} 返回的联合身份已链接到另一个用户。\",\n        \"confirmAccountLinking\": \"确认将身份提供者 {1} 的账户 {0} 与您的账户链接。\",\n        \"confirmEmailAddressVerification\": \"确认电子邮件地址 {0} 的有效性。\",\n        \"confirmExecutionOfActions\": \"执行以下操作\",\n        \"locale_ar\": \"عربي\",\n        \"locale_ca\": \"Català\",\n        \"locale_cs\": \"Čeština\",\n        \"locale_da\": \"Dansk\",\n        \"locale_de\": \"Deutsch\",\n        \"locale_en\": \"English\",\n        \"locale_es\": \"Español\",\n        \"locale_fi\": \"Suomi\",\n        \"locale_fr\": \"Français\",\n        \"locale_hu\": \"Magyar\",\n        \"locale_it\": \"Italiano\",\n        \"locale_ja\": \"日本語\",\n        \"locale_lt\": \"Lietuvių\",\n        \"locale_lv\": \"Latviešu\",\n        \"locale_nl\": \"Nederlands\",\n        \"locale_no\": \"Norsk\",\n        \"locale_pl\": \"Polski\",\n        \"locale_pt_BR\": \"Português (Brasil)\",\n        \"locale_ru\": \"Русский\",\n        \"locale_sk\": \"Slovenčina\",\n        \"locale_sv\": \"Svenska\",\n        \"locale_th\": \"ไทย\",\n        \"locale_tr\": \"Türkçe\",\n        \"locale_zh-CN\": \"中文简体\",\n        \"backToApplication\": \"&laquo; 回到应用\",\n        \"missingParameterMessage\": \"缺少参数 \\: {0}\",\n        \"clientNotFoundMessage\": \"客户端未找到\",\n        \"clientDisabledMessage\": \"客户端已禁用\",\n        \"invalidParameterMessage\": \"无效的参数 \\: {0}\",\n        \"alreadyLoggedIn\": \"您已经登录。\",\n        \"differentUserAuthenticated\": \"您已经以不同用户 ''{0}'' 的身份在此会话中进行了身份验证。请先注销。\",\n        \"brokerLinkingSessionExpired\": \"已请求与经纪人帐户链接，但当前会话不再有效。\",\n        \"proceedWithAction\": \"&raquo; 点击此处继续\",\n        \"acrNotFulfilled\": \"未满足身份验证要求\",\n        \"requiredAction.CONFIGURE_TOTP\": \"配置OTP\",\n        \"requiredAction.TERMS_AND_CONDITIONS\": \"条款和条件\",\n        \"requiredAction.UPDATE_PASSWORD\": \"更新密码\",\n        \"requiredAction.UPDATE_PROFILE\": \"更新个人资料\",\n        \"requiredAction.VERIFY_EMAIL\": \"验证电子邮箱\",\n        \"requiredAction.CONFIGURE_RECOVERY_AUTHN_CODES\": \"生成恢复代码\",\n        \"requiredAction.webauthn-register-passwordless\": \"Webauthn注册免密码\",\n        \"invalidTokenRequiredActions\": \"链接中包含的必需操作无效\",\n        \"doX509Login\": \"您将被登录为\\：\",\n        \"clientCertificate\": \"X509客户端证书\\：\",\n        \"noCertificate\": \"[No Certificate]\",\n        \"pageNotFound\": \"页面未找到\",\n        \"internalServerError\": \"发生内部服务器错误\",\n        \"console-username\": \"用户名：\",\n        \"console-password\": \"密码：\",\n        \"console-otp\": \"一次性密码：\",\n        \"console-new-password\": \"新密码：\",\n        \"console-confirm-password\": \"确认密码：\",\n        \"console-update-password\": \"需要更新您的密码。\",\n        \"console-verify-email\": \"您需要验证您的电子邮件地址。我们已向 {0} 发送了一封包含验证码的电子邮件。请将此代码输入下面的输入框中。\",\n        \"console-email-code\": \"电子邮件验证码：\",\n        \"console-accept-terms\": \"接受条款？[y/n]：\",\n        \"console-accept\": \"y\",\n        \"openshift.scope.user_info\": \"用户信息\",\n        \"openshift.scope.user_check-access\": \"用户访问信息\",\n        \"openshift.scope.user_full\": \"完全访问\",\n        \"openshift.scope.list-projects\": \"列出项目\",\n        \"saml.post-form.title\": \"身份验证重定向\",\n        \"saml.post-form.message\": \"重定向中，请稍候。\",\n        \"saml.post-form.js-disabled\": \"JavaScript已被禁用。我们强烈建议启用它。点击下面的按钮继续。\",\n        \"saml.artifactResolutionServiceInvalidResponse\": \"无法解析构造。\",\n        \"otp-display-name\": \"验证器应用程序\",\n        \"otp-help-text\": \"从验证器应用输入验证码。\",\n        \"otp-reset-description\": \"应删除哪个OTP配置？\",\n        \"password-display-name\": \"密码\",\n        \"password-help-text\": \"通过输入密码登录。\",\n        \"auth-username-form-display-name\": \"用户名\",\n        \"auth-username-form-help-text\": \"输入用户名已开始登录\",\n        \"auth-username-password-form-display-name\": \"用户名和密码\",\n        \"auth-username-password-form-help-text\": \"输入用户名和密码以登录。\",\n        \"auth-recovery-authn-code-form-display-name\": \"恢复代码\",\n        \"auth-recovery-authn-code-form-help-text\": \"输入先前生成的恢复代码。\",\n        \"auth-recovery-code-info-message\": \"输入指定的恢复代码。\",\n        \"auth-recovery-code-prompt\": \"恢复代码 #{0}\",\n        \"auth-recovery-code-header\": \"使用恢复代码登录\",\n        \"recovery-codes-error-invalid\": \"无效的代码\",\n        \"recovery-code-config-header\": \"恢复代码\",\n        \"recovery-code-config-warning-title\": \"离开此页面后，这些恢复代码将不再显示\",\n        \"recovery-code-config-warning-message\": \"确保打印、下载或将它们复制到密码管理器，并将其保存在安全的地方。取消此设置将从您的帐户中删除这些恢复代码。\",\n        \"recovery-codes-print\": \"打印\",\n        \"recovery-codes-download\": \"下载\",\n        \"recovery-codes-copy\": \"复制\",\n        \"recovery-codes-copied\": \"已复制\",\n        \"recovery-codes-confirmation-message\": \"我已将这些代码保存在安全的地方\",\n        \"recovery-codes-action-complete\": \"完成设置\",\n        \"recovery-codes-action-cancel\": \"取消设置\",\n        \"recovery-codes-download-file-header\": \"将这些恢复代码保存在安全的地方。\",\n        \"recovery-codes-download-file-description\": \"恢复代码是一次性验证码，如果您无法访问您的验证器，可以使用它们登录到您的帐户。\",\n        \"recovery-codes-download-file-date\": \"这些代码生成于\",\n        \"recovery-codes-label-default\": \"恢复代码\",\n        \"webauthn-display-name\": \"安全密钥\",\n        \"webauthn-help-text\": \"使用您的安全密钥登录。\",\n        \"webauthn-passwordless-display-name\": \"安全密钥\",\n        \"webauthn-passwordless-help-text\": \"使用您的安全密钥进行无密码登录。\",\n        \"webauthn-login-title\": \"安全密钥登录\",\n        \"webauthn-registration-title\": \"安全密钥注册\",\n        \"webauthn-available-authenticators\": \"可用的安全密钥\",\n        \"webauthn-unsupported-browser-text\": \"此浏览器不支持 WebAuthn。请尝试其他浏览器或联系管理员。\",\n        \"webauthn-doAuthenticate\": \"使用安全密钥登录\",\n        \"webauthn-createdAt-label\": \"创建于\",\n        \"webauthn-error-title\": \"安全密钥错误\",\n        \"webauthn-error-registration\": \"注册您的安全密钥失败。<br/> {0}\",\n        \"webauthn-error-api-get\": \"通过安全密钥进行身份验证失败。<br/> {0}\",\n        \"webauthn-error-different-user\": \"首次经过身份验证的用户不是通过安全密钥经过身份验证的用户。\",\n        \"webauthn-error-auth-verification\": \"安全密钥身份验证结果无效。<br/> {0}\",\n        \"webauthn-error-register-verification\": \"安全密钥注册结果无效。<br/> {0}\",\n        \"webauthn-error-user-not-found\": \"通过安全密钥进行身份验证的用户未知。\",\n        \"identity-provider-redirector\": \"连接到另一个身份提供者\",\n        \"identity-provider-login-label\": \"或使用以下方式登录\",\n        \"idp-email-verification-display-name\": \"电子邮件验证\",\n        \"idp-email-verification-help-text\": \"通过验证您的电子邮件来链接您的帐户。\",\n        \"idp-username-password-form-display-name\": \"用户名和密码\",\n        \"idp-username-password-form-help-text\": \"通过登录来链接您的帐户。\",\n        \"finalDeletionConfirmation\": \"如果将您的帐户删除，将无法恢复。如果要保留您的帐户，请点击取消。\",\n        \"irreversibleAction\": \"此操作不可逆转\",\n        \"deleteAccountConfirm\": \"删除帐户确认\",\n        \"deletingImplies\": \"删除您的帐户意味着：\",\n        \"errasingData\": \"删除您的所有数据\",\n        \"loggingOutImmediately\": \"立即将您注销\",\n        \"accountUnusable\": \"此帐户将无法再次使用应用程序\",\n        \"userDeletedSuccessfully\": \"用户删除成功\",\n        \"access-denied\": \"访问被拒绝\",\n        \"access-denied-when-idp-auth\": \"使用 {0} 进行身份验证时被拒绝访问\",\n        \"frontchannel-logout.title\": \"正在注销\",\n        \"frontchannel-logout.message\": \"您正在从以下应用程序注销\",\n        \"logoutConfirmTitle\": \"注销\",\n        \"logoutConfirmHeader\": \"您确定要注销吗？\",\n        \"doLogout\": \"注销\",\n        \"readOnlyUsernameMessage\": \"由于用户名是只读的，您无法更新用户名。\"\n\n\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import * as React from \"react\"\n\nimport { cn } from \"lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport {useState} from \"react\";\nimport {assert} from \"keycloakify/tools/assert\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {usePrepareTemplate} from \"keycloakify/lib/usePrepareTemplate\";\nimport {type TemplateProps} from \"keycloakify/login/TemplateProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"./kcContext\";\nimport type {I18n} from \"./i18n\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger\n} from \"components/ui/dropdown-menu\";\nimport {buttonVariants} from \"components/ui/button\";\nimport {cn} from \"lib/utils\";\nimport {Alert, AlertDescription, AlertTitle} from \"../components/ui/alert\";\nimport {CaretLeftIcon, ExclamationTriangleIcon} from \"@radix-ui/react-icons\";\nimport {Card, CardContent, CardTitle} from \"../components/ui/card\";\nimport {Boxes} from \"../components/ui/background-boxes\";\nimport {Meteors} from \"../components/ui/meteors\";\nimport {WavyBackground} from \"../components/ui/wavy-background\";\nimport {BackgroundBeams} from \"../components/ui/background-beams\";\nimport {Tooltip, TooltipContent, TooltipProvider, TooltipTrigger} from \"../components/ui/tooltip\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag} = i18n;\n\n    const {realm, locale, auth, url, message, isAppInitiatedAction} = kcContext;\n\n    const {isReady} = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            // `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n            // `${url.resourcesPath}/css/login.css`\n        ],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": getClassName(\"kcBodyClass\")\n    });\n\n    useState(() => {\n        document.title = i18n.msgStr(\"loginTitle\", kcContext.realm.displayName);\n    });\n\n    if (!isReady) {\n        return null;\n    }\n    console.log(kcContext)\n    console.log(JSON.stringify(kcContext))\n    return (\n        <div>\n            <div\n                className=\"h-screen relative w-full overflow-hidden flex flex-col items-center justify-center\">\n                {/*<BackgroundBeams/>*/}\n                {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                    <DropdownMenu>\n                        <DropdownMenuTrigger className={cn(\n                            \"z-10\",\n                            buttonVariants({variant: \"ghost\"}),\n                            \"absolute right-4 top-4 md:right-8 md:top-8\"\n                        )}> {labelBySupportedLanguageTag[currentLanguageTag]}</DropdownMenuTrigger>\n                        <DropdownMenuContent>\n                            {locale.supported.map(({languageTag}) => (\n                                <DropdownMenuItem\n                                    onClick={() => changeLocale(languageTag)}>  {labelBySupportedLanguageTag[languageTag]}</DropdownMenuItem>\n                            ))}\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n                )}\n                <div className=\"absolute right-4 top-4 md:left-8 md:top-8 flex items-center z-20\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"mr-2 h-6 w-6\"\n                    >\n                        <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\"/>\n                    </svg>\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}\n                </div>\n                <div\n                    className=\"container relative h-screen flex items-center justify-center md:grid lg:max-w-none lg:px-0\">\n                    <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 items-center\">\n                        <Card id=\"kc-content\" className={\"z-20 px-8 min-w-80\"}>\n                            <CardContent id=\"kc-content-wrapper\"\n                                         className={\"flex flex-col p-0 min-w-[450px] items-center\"}>\n                                {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                                <div className={'flex justify-center'}>\n                                    <h1 className={\"text-2xl font-semibold tracking-tight text-center mt-6 mb-3\"}\n                                        id=\"kc-page-title\">{headerNode}</h1>\n\n                                </div>\n\n                                {auth !== undefined && auth.showUsername && (\n                                    <div className={\"mt-3 mb-3 text-slate-500 w-[350px]\"}>{msg('loginAs')} <span\n                                        className={\"font-bold text-slate-950\"}>{auth?.attemptedUsername}</span>\n                                        {auth.showResetCredentials && (\n                                            <a id=\"reset-login\" href={url.loginRestartFlowUrl}\n                                               className={\"text-sm items-center relative w-auto h-0 inline-block hover:underline ml-1\"}>\n                                                (Not You?)\n                                            </a>\n                                        )}\n                                    </div>\n                                )}\n                                {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                                    <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                        {message.type === \"success\" &&\n                                            <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                        {message.type === \"warning\" &&\n                                            <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                        {message.type === \"error\" &&\n                                            <Alert variant=\"destructive\" className={\"mb-2\"}>\n                                                <ExclamationTriangleIcon className=\"h-4 w-4\"/>\n                                                <AlertTitle>{msg('errorTitle')}</AlertTitle>\n                                                <AlertDescription>\n                                                    {message.summary}\n                                                </AlertDescription>\n                                            </Alert>\n                                        }\n                                        {message.type === \"info\" &&\n                                            <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                    </div>\n                                )}\n                                {children}\n                                {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n                                    <form\n                                        id=\"kc-select-try-another-way-form\"\n                                        action={url.loginAction}\n                                        method=\"post\"\n                                        className={clsx(displayWide && getClassName(\"kcContentWrapperClass\"))}\n                                    >\n                                        <div\n                                            className={clsx(\n                                                displayWide && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                                            )}\n                                        >\n                                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                                <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\"/>\n                                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                <a\n                                                    href=\"#\"\n                                                    id=\"try-another-way\"\n                                                    onClick={() => {\n                                                        document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                        return false;\n                                                    }}\n                                                >\n                                                    {msg(\"doTryAnotherWay\")}\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </form>\n                                )}\n                                {displayInfo && (\n                                    <>\n                                        {infoNode}\n                                    </>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n        ;\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\n\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\n\nexport default function LoginResetPassword(props: PageProps<Extract<KcContext, {\n    pageId: \"login-reset-password.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, realm, auth} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayMessage={false}\n            headerNode={msg(\"emailForgotTitle\")}\n            infoNode={msg(\"emailInstruction\")}\n        >\n            <div className=\"lg:p-8 lg:pb-4 flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {/*<div id=\"kc-form\" className={clsx(realm.password && social.providers !== undefined && getClassName(\"kcContentWrapperClass\"))}>*/}\n                    {/*    <div*/}\n                    <form id=\"kc-reset-password-form\" className={\"grid gap-3 items-center\"} action={url.loginAction}\n                          method=\"post\">\n                        <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n                            <Label htmlFor=\"autoCompleteHelper\"> {!realm.loginWithEmailAllowed\n                                ? msg(\"username\")\n                                : !realm.registrationEmailAsUsername\n                                    ? msg(\"usernameOrEmail\")\n                                    : msg(\"email\")}</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                autoFocus\n                                defaultValue={auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined}\n                            />\n                        </div>\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                            <Button\n                                className={\"w-full\"}\n                                type=\"submit\">\n                                {msgStr(\"doSubmit\")}\n                            </Button>\n                        </div>\n\n                    </form>\n\n\n                    <div className={\"text-sm mt-3 hover:underline text-slate-500\"}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"components/ui/input\";\nimport {Button, buttonVariants} from \"../../components/ui/button\";\nimport {Checkbox} from \"../../components/ui/checkbox\";\nimport {cn} from \"../../lib/utils\";\nimport {Label} from \"../../components/ui/label\";\nimport {Separator} from \"../../components/ui/separator\";\nimport {GitHubLogoIcon} from '@radix-ui/react-icons'\nimport {\n    IconBrandBitbucket,\n    IconBrandFacebookFilled, IconBrandGithub, IconBrandGitlab,\n    IconBrandGoogle, IconBrandInstagram, IconBrandLinkedin, IconBrandOpenSource, IconBrandPaypal,\n    IconBrandStackoverflow,\n    IconBrandTwitter,\n    IconBrandWindows\n} from \"@tabler/icons-react\";\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\nconst prividerIdIconMap = {\n    \"microsoft\": <IconBrandWindows/>,\n    \"google\": <IconBrandGoogle/>,\n    \"facebook\": <IconBrandFacebookFilled/>,\n    \"twitter\": <IconBrandTwitter/>,\n    \"stackoverflow\": <IconBrandStackoverflow/>,\n    \"gitlab\": <IconBrandGitlab/>,\n    \"paypal\": <IconBrandPaypal/>,\n    \"instagram\": <IconBrandInstagram/>,\n    \"linkedin\": <IconBrandLinkedin/>,\n    \"github\": <IconBrandGithub/>,\n    \"bitbucket\": <IconBrandBitbucket/>,\n    \"openshift\": <IconBrandOpenSource/>\n}\n\nexport default function LoginUsername(props: PageProps<Extract<KcContext, { pageId: \"login-username.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {social, realm, url, usernameHidden, login, auth, registrationDisabled} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        //NOTE: Even if we login with email Keycloak expect username and password in\n        //the POST request.\n        formElement.querySelector(\"input[name='email']\")?.setAttribute(\"name\", \"username\");\n\n        formElement.submit();\n    });\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayInfo={social.displayInfo}\n            displayWide={realm.password && social.providers !== undefined}\n            headerNode={msg(\"doLogIn\")}\n            infoNode={\n                realm.password &&\n                realm.registrationAllowed &&\n                !registrationDisabled && (\n                    <div id=\"kc-registration\" className={\"justify-center w-full items-center text-center mb-3\"}>\n                        <Separator className={\"mb-1 w-full\"}/>\n                        <span className={\"text-slate-500 text-sm\"}>\n                            {msg(\"noAccount\")} {' '}\n                            <a tabIndex={6} href={url.registrationUrl} className={\"text-slate-950\"}>\n                                {msg(\"doRegister\")}\n                            </a>\n                        </span>\n                    </div>\n                )\n            }\n        >\n            <div className=\"flex gap-4 mb-3\">\n                <div className={`mx-auto flex w-full flex-col justify-center`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {realm.password && (\n                        <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"\n                              className={\"flex flex-col gap-3 items-center w-full min-w-[350px]\"}>\n                            <div className={\"w-full flex flex-col items-center justify-center\"}>\n                                {!usernameHidden &&\n                                    (() => {\n                                        const label = !realm.loginWithEmailAllowed\n                                            ? \"username\"\n                                            : realm.registrationEmailAsUsername\n                                                ? \"email\"\n                                                : \"usernameOrEmail\";\n\n                                        const autoCompleteHelper: typeof label = label === \"usernameOrEmail\" ? \"username\" : label;\n\n                                        return (\n                                            <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n                                                <Label htmlFor={autoCompleteHelper}\n                                                       className={getClassName(\"kcLabelClass\")}>\n                                                    {msg(label)}\n                                                </Label>\n                                                <Input\n                                                    tabIndex={1}\n                                                    id={autoCompleteHelper}\n                                                    className={getClassName(\"kcInputClass\")}\n                                                    //NOTE: This is used by Google Chrome auto fill so we use it to tell\n                                                    //the browser how to pre fill the form but before submit we put it back\n                                                    //to username because it is what keycloak expects.\n                                                    name={autoCompleteHelper}\n                                                    defaultValue={login.username ?? \"\"}\n                                                    type=\"text\"\n                                                    autoFocus={true}\n                                                    autoComplete=\"off\"\n                                                />\n                                            </div>\n                                        );\n                                    })()}\n                            </div>\n                            <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                                <div id=\"kc-form-options\">\n                                    {realm.rememberMe && !usernameHidden && (\n                                        <div className=\"flex items-center space-x-2\">\n                                            <Checkbox\n                                                tabIndex={3}\n                                                id=\"rememberMe\"\n                                                name=\"rememberMe\"\n                                                defaultChecked={login.rememberMe === \"on\"}\n                                            />\n                                            <label\n                                                htmlFor=\"rememberMe\"\n                                                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                                            >\n                                                {msg(\"rememberMe\")}\n                                            </label>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                            <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                                <Button\n                                    tabIndex={4}\n                                    name=\"login\"\n                                    id=\"kc-login\"\n                                    type=\"submit\"\n                                    className={\"min-w-[200px]\"}\n                                    disabled={isLoginButtonDisabled}\n                                >\n                                    {msgStr(\"doLogIn\")}\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </div>\n                {realm.password && social.providers !== undefined && (\n                    <div\n                        id=\"kc-social-providers\"\n                        className={'flex gap-4 w-auto'}\n                    >\n                        <Separator orientation=\"vertical\"/>\n                        <div\n                            className={\"grid flex-col flex-wrap grid-cols-2 gap-2 w-[320px]\"}\n                        >\n                            {social.providers.map(p => (\n                                <Button onClick={() => window.open(p.loginUrl)} id={`zocial-${p.alias}`}\n                                        key={p.providerId}\n                                        className={`${buttonVariants({variant: \"secondary\"})} w-[160px] flex justify-start gap-2`}>\n                                    {/*@ts-ignore*/}\n                                    {prividerIdIconMap[p.providerId]}\n                                    <span>{p.displayName}</span>\n                                </Button>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n\n        </Template>\n    );\n}\n","import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { FormEventHandler } from \"react\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\n\nexport default function LoginPassword(props: PageProps<Extract<KcContext, { \"pageId\": \"login-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { realm, url, login } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        formElement.submit();\n    });\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"doLogIn\")}>\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}>\n                    <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"  className={\"grid gap-3 items-center\"}>\n                        <div className={getClassName(\"kcFormGroupClass\")}>\n                            <Label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"password\")}\n                            </Label>\n                            <Input\n                                tabIndex={2}\n                                id=\"password\"\n                                className={getClassName(\"kcInputClass\")}\n                                name=\"password\"\n                                type=\"password\"\n                                autoFocus={true}\n                                autoComplete=\"on\"\n                                defaultValue={login.password ?? \"\"}\n                            />\n                        </div>\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                            <Button\n                                tabIndex={4}\n                                className={\"w-full\"}\n                                name=\"login\"\n                                id=\"kc-login\"\n                                type=\"submit\"\n                                disabled={isLoginButtonDisabled}\n                            >\n                                {msgStr(\"doLogIn\")}\n                            </Button>\n                        </div>\n                    </form>\n                    {realm.resetPasswordAllowed && (\n                        <span className={\"text-sm mt-3 text-slate-500 mb-3\"}>\n                                            <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                                {msg(\"doForgotPassword\")}\n                                            </a>\n                                        </span>\n                    )}\n                </div>\n            </div>\n        </Template>\n    );\n}","import { useEffect, useRef, useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { base64url } from \"rfc4648\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport { assert } from \"tsafe/assert\";\nimport { is } from \"tsafe/is\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport default function WebauthnRegister(props: PageProps<Extract<KcContext, { pageId: \"webauthn-register.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const {\n        url,\n        attestationConveyancePrefrence,\n        authenticatorAttachment,\n        challenge,\n        createTimeout,\n        excludeCredentialsId,\n        requireResidentKey,\n        userid,\n        username,\n        signatureAlgorithms,\n        userVerificationRequirement,\n        rpEntityName,\n        rpId,\n        isSetRetry,\n        isAppInitiatedAction\n    } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [clientDataJSON, setClientDataJSON] = useState(\"\");\n    const [attestationObject, setAttestationObject] = useState(\"\");\n    const [publicKeyCredentialId, setPublicKeyCredentialId] = useState(\"\");\n    const [authenticatorLabel, setAuthenticatorLabel] = useState(\"\");\n    const [transports, setTransports] = useState<string[] | string>(\"\");\n    const [error, setError] = useState(\"\");\n\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [isReadyToSubmit, setIsReadyToSubmit] = useState(false);\n\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n\n    const registerSecurityKey = useConstCallback(async () => {\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(\"WebAuthn is not supported in this browser.\");\n            if (formElementRef.current) {\n                formElementRef.current.submit();\n            }\n            return;\n        }\n\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = getPubKeyCredParams(signatureAlgorithms);\n        let rp: { name: string; id?: string } = { name: rpEntityName, id: rpId };\n        let publicKey: PublicKeyCredentialCreationOptions = {\n            challenge: base64url.parse(challenge, { loose: true }),\n            rp: rp,\n            user: {\n                id: base64url.parse(userid, { loose: true }),\n                name: username,\n                displayName: username\n            },\n            pubKeyCredParams: pubKeyCredParams as PublicKeyCredentialParameters[],\n            attestation:\n                attestationConveyancePrefrence !== \"not specified\" ? (attestationConveyancePrefrence as AttestationConveyancePreference) : undefined\n        };\n        let authenticatorSelection = {};\n        let isAuthenticatorSelectionSet = false;\n\n        if (authenticatorAttachment !== \"not specified\") {\n            authenticatorSelection = { authenticatorAttachment: authenticatorAttachment };\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (requireResidentKey !== \"not specified\") {\n            if (requireResidentKey === \"Yes\") {\n                authenticatorSelection = { ...authenticatorSelection, requireResidentKey: true };\n            } else {\n                authenticatorSelection = { ...authenticatorSelection, requireResidentKey: false };\n            }\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (userVerificationRequirement !== \"not specified\") {\n            authenticatorSelection = { ...authenticatorSelection, userVerification: userVerificationRequirement };\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (isAuthenticatorSelectionSet) {\n            publicKey = { ...publicKey, authenticatorSelection: authenticatorSelection };\n        }\n\n        if (createTimeout !== 0) {\n            publicKey = { ...publicKey, timeout: createTimeout * 1000 };\n        }\n        let excludeCredentials = getExcludeCredentials(excludeCredentialsId);\n        if (excludeCredentials && excludeCredentials.length !== 0) {\n            publicKey = { ...publicKey, excludeCredentials: excludeCredentials };\n        }\n        try {\n            const result = await navigator.credentials.create({ publicKey });\n\n            if (!result || result.type !== \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n\n            const response: AuthenticatorAttestationResponse = result.response as unknown as AuthenticatorAttestationResponse;\n\n            const clientDataJSON = response.clientDataJSON;\n            const attestationObject = response.attestationObject;\n\n            assert(\n                typeGuard<AuthenticatorAttestationResponse>(response, response.attestationObject instanceof ArrayBuffer),\n                \"response not an AuthenticatorAttestationResponse\"\n            );\n\n            setClientDataJSON(base64url.stringify(new Uint8Array(clientDataJSON), { \"pad\": false }));\n            setAttestationObject(base64url.stringify(new Uint8Array(attestationObject), { pad: false }));\n            setPublicKeyCredentialId(base64url.stringify(new Uint8Array(result.rawId), { pad: false }));\n\n            //@ts-ignore\n            if (typeof response.getTransports === \"function\") {\n                //@ts-ignore\n                let transports = response.getTransports();\n                if (transports) {\n                    setTransports(getTransportsAsString(transports));\n                }\n            } else {\n                console.log(\"Your browser is not able to recognize supported transport media for the authenticator.\");\n            }\n\n            let initialLabel = \"WebAuthn Authenticator (Default Label)\";\n            let labelResult = window.prompt(\"Please enter a label for your WebAuthn authenticator\", initialLabel);\n            if (labelResult !== null && labelResult !== \"\") {\n                setAuthenticatorLabel(labelResult);\n            }\n        } catch (err) {\n            setError(String(err));\n            setIsReadyToSubmit(true);\n        }\n        setIsReadyToSubmit(true);\n    });\n\n    const getPubKeyCredParams = (sigAlgList: number[]): PublicKeyCredentialParameters[] => {\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = [];\n        if (signatureAlgorithms.length === 0) {\n            let alg: COSEAlgorithmIdentifier = -7;\n            let type: PublicKeyCredentialType = \"public-key\";\n            let object: PublicKeyCredentialParameters = { type, alg };\n            pubKeyCredParams.push(object);\n            return pubKeyCredParams;\n        }\n        for (let sigAlg of sigAlgList) {\n            pubKeyCredParams.push({ type: \"public-key\", alg: sigAlg });\n        }\n        return pubKeyCredParams;\n    };\n\n    const getExcludeCredentials = (excludeCredentialIds: string) => {\n        let excludeCredentials: PublicKeyCredentialDescriptor[] = [];\n        if (!excludeCredentialIds) {\n            return excludeCredentials;\n        }\n        let excludeCredentialIdsList = excludeCredentialIds.split(\",\");\n        for (let excludeCredentialId of excludeCredentialIdsList) {\n            excludeCredentials.push({ type: \"public-key\", id: base64url.parse(excludeCredentialId, { loose: true }) });\n        }\n    };\n\n    const getTransportsAsString = (transportsList: string | string[]): string => {\n        if (transportsList === \"\" || transportsList.constructor !== Array) return \"\";\n\n        let transportsString = \"\";\n\n        for (let i = 0; i < transportsList.length; i++) {\n            transportsString += transportsList[i] + \",\";\n        }\n\n        return transportsString.slice(0, -1);\n    };\n\n    useEffect(() => {\n        if (isReadyToSubmit) {\n            submitForm();\n            setIsReadyToSubmit(false); // Reset the flag after submission\n        }\n    }, [isReadyToSubmit]);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            headerNode={\n                <>\n                    <span className={getClassName(\"kcWebAuthnDefaultIcon\")} style={{ marginRight: \"5px\" }}></span>\n                    {msg(\"webauthn-registration-title\")}\n                </>\n            }\n        >\n            <div id=\"kc-form-webauthn\" className={getClassName(\"kcFormClass\")}>\n                <form\n                    id=\"kc-webauthn-settings-form\"\n                    action={url.loginAction}\n                    ref={formElementRef}\n                    method=\"post\"\n                    className={getClassName(\"kcFormClass\")}\n                >\n                    <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\" value={clientDataJSON} />\n                    <input type=\"hidden\" id=\"attestationObject\" name=\"attestationObject\" value={attestationObject} />\n                    <input type=\"hidden\" id=\"publicKeyCredentialId\" name=\"publicKeyCredentialId\" value={publicKeyCredentialId} />\n                    <input type=\"hidden\" id=\"authenticatorLabel\" name=\"authenticatorLabel\" value={authenticatorLabel} />\n                    <input type=\"hidden\" id=\"transports\" name=\"transports\" value={transports} />\n                    <input type=\"hidden\" id=\"error\" name=\"error\" value={error} />\n                </form>\n                <input\n                    type=\"button\"\n                    onClick={registerSecurityKey}\n                    value={msgStr(\"doRegister\")}\n                    id=\"registerWebAuthn\"\n                    className={clsx(\n                        getClassName(\"kcButtonClass\"),\n                        getClassName(\"kcButtonPrimaryClass\"),\n                        getClassName(\"kcButtonBlockClass\"),\n                        getClassName(\"kcButtonLargeClass\")\n                    )}\n                />\n                {!isSetRetry && isAppInitiatedAction && (\n                    <form action={url.loginAction} className={getClassName(\"kcFormClass\")}>\n                        <button\n                            type=\"submit\"\n                            className={`${getClassName(\"kcButtonClass\")} ${getClassName(\"kcButtonDefaultClass\")} ${getClassName(\n                                \"kcButtonBlockClass\"\n                            )} ${getClassName(\"kcButtonLargeClass\")}`}\n                            id=\"cancelWebAuthnAIA\"\n                            name=\"cancel-aia\"\n                            value=\"true\"\n                        >\n                            {msg(\"doCancel\")}\n                        </button>\n                    </form>\n                )}\n            </div>\n        </Template>\n    );\n}\n","import {useEffect, useRef, useState} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport type {MessageKey} from \"keycloakify/login/i18n/i18n\";\nimport {base64url} from \"rfc4648\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {assert} from \"tsafe/assert\";\nimport {is} from \"tsafe/is\";\nimport {typeGuard} from \"tsafe/typeGuard\";\nimport {Button} from \"../../components/ui/button\";\n\nexport default function WebauthnAuthenticate(props: PageProps<Extract<KcContext, {\n    pageId: \"webauthn-authenticate.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {url} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n    const {authenticators, challenge, shouldDisplayAuthenticators, userVerification, rpId} = kcContext;\n    const createTimeout = Number(kcContext.createTimeout);\n    const isUserIdentified = kcContext.isUserIdentified == \"true\";\n\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [error, setError] = useState(\"\");\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n    const [webauthnResult, setWebauthnResult] = useState({} as any)\n    useEffect(() => {\n        if (error != null && webauthnResult.authenticatorData) {\n            console.log(webauthnResult)\n            submitForm()\n        }\n    }, [webauthnResult])\n    const webAuthnAuthenticate = useConstCallback(async () => {\n        debugger\n        // const allowCredentials = authenticators.authenticators.map(\n        //     authenticator =>\n        //         ({\n        //             id: base64url.parse(authenticator.credentialId, {loose: true}),\n        //             type: \"public-key\"\n        //         } as PublicKeyCredentialDescriptor)\n        // );\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(msgStr(\"webauthn-unsupported-browser-text\"));\n            submitForm();\n            return;\n        }\n\n\n        const publicKey: PublicKeyCredentialRequestOptions = {\n            rpId,\n            challenge: base64url.parse(challenge, {loose: true})\n        };\n\n        if (createTimeout !== 0) {\n            publicKey.timeout = createTimeout * 1000;\n        }\n\n        if (userVerification !== \"not specified\") {\n            publicKey.userVerification = userVerification;\n        }\n\n        try {\n            const result = await navigator.credentials.get({publicKey});\n            if (!result || result.type != \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n            if (!(\"authenticatorData\" in result.response)) {\n                return;\n            }\n            const response = result.response;\n\n            const clientDataJSON = response.clientDataJSON;\n\n\n            assert(\n                //@ts-ignore\n                typeGuard<AuthenticatorAssertionResponse>(response, \"signature\" in response && response.authenticatorData instanceof ArrayBuffer),\n                \"response not an AuthenticatorAssertionResponse\"\n            );\n\n            const authenticatorData = response.authenticatorData;\n            const signature = response.signature;\n            setWebauthnResult({\n                clientDataJSON: base64url.stringify(new Uint8Array(clientDataJSON), {\"pad\": false}),\n                authenticatorData: base64url.stringify(new Uint8Array(authenticatorData), {\"pad\": false}),\n                signature: base64url.stringify(new Uint8Array(signature), {\"pad\": false}),\n                credentialId: result.id,\n                userHandle: base64url.stringify(new Uint8Array(response.userHandle!), {\"pad\": false})\n            })\n        } catch (err) {\n            setError(String(err));\n        }\n    });\n\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"webauthn-login-title\")} >\n            <div className=\"flex gap-4 mb-3\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form id=\"webauth\" action={url.loginAction} ref={formElementRef} method=\"post\">\n                        <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\"\n                               value={webauthnResult.clientDataJSON}/>\n                        <input type=\"hidden\" id=\"authenticatorData\" name=\"authenticatorData\"\n                               value={webauthnResult.authenticatorData}/>\n                        <input type=\"hidden\" id=\"signature\" name=\"signature\" value={webauthnResult.signature}/>\n                        <input type=\"hidden\" id=\"credentialId\" name=\"credentialId\" value={webauthnResult.credentialId}/>\n                        <input type=\"hidden\" id=\"userHandle\" name=\"userHandle\" value={webauthnResult.userHandle}/>\n                        <input type=\"hidden\" id=\"error\" name=\"error\" value={webauthnResult.error}/>\n                    </form>\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        {authenticators &&\n                            (() => (\n                                <form id=\"authn_select\" className={getClassName(\"kcFormClass\")}>\n                                    {authenticators.authenticators.map(authenticator => (\n                                        <input type=\"hidden\" name=\"authn_use_chk\" value={authenticator.credentialId}\n                                               key={authenticator.credentialId}/>\n                                    ))}\n                                </form>\n                            ))()}\n                        {authenticators &&\n                            shouldDisplayAuthenticators &&\n                            (() => (\n                                <>\n                                    {authenticators.authenticators.length > 1 && (\n                                        <p className={getClassName(\"kcSelectAuthListItemTitle\")}>{msg(\"webauthn-available-authenticators\")}</p>\n                                    )}\n                                    <div className={getClassName(\"kcFormClass\")}>\n                                        {authenticators.authenticators.map(authenticator => (\n                                            <div id=\"kc-webauthn-authenticator\"\n                                                 className={getClassName(\"kcSelectAuthListItemClass\")}>\n                                                <div className={getClassName(\"kcSelectAuthListItemIconClass\")}>\n                                                    <i\n                                                        className={clsx(\n                                                            (() => {\n                                                                const className = getClassName(authenticator.transports.iconClass as any);\n                                                                return className.includes(\" \")\n                                                                    ? className\n                                                                    : [className, getClassName(\"kcWebAuthnDefaultIcon\")];\n                                                            })(),\n                                                            getClassName(\"kcSelectAuthListItemIconPropertyClass\")\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemBodyClass\")}>\n                                                    <div\n                                                        id=\"kc-webauthn-authenticator-label\"\n                                                        className={getClassName(\"kcSelectAuthListItemHeadingClass\")}\n                                                    >\n                                                        {authenticator.label}\n                                                    </div>\n\n                                                    {authenticator.transports && authenticator.transports.displayNameProperties.length && (\n                                                        <div\n                                                            id=\"kc-webauthn-authenticator-transport\"\n                                                            className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}\n                                                        >\n                                                            {authenticator.transports.displayNameProperties.map(\n                                                                (transport: MessageKey, index: number) => (\n                                                                    <>\n                                                                        <span>{msg(transport)}</span>\n                                                                        {index < authenticator.transports.displayNameProperties.length - 1 && (\n                                                                            <span>{\", \"}</span>\n                                                                        )}\n                                                                    </>\n                                                                )\n                                                            )}\n                                                        </div>\n                                                    )}\n\n                                                    <div\n                                                        className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}>\n                                                    <span\n                                                        id=\"kc-webauthn-authenticator-created-label\">{msg(\"webauthn-createdAt-label\")}</span>\n                                                        <span\n                                                            id=\"kc-webauthn-authenticator-created\">{authenticator.createdAt}</span>\n                                                    </div>\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemFillClass\")}/>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </>\n                            ))()}\n                        <div id=\"kc-form-buttons\" className={\"mb-3\"}>\n                            <Button\n                                id=\"authenticateWebAuthnButton\"\n                                type=\"button\"\n                                onClick={webAuthnAuthenticate}\n                                autoFocus={true}\n                                className={\"w-full\"}\n                            >\n                                {msgStr(\"webauthn-doAuthenticate\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"keycloakify/login/kcContext\";\nimport type {I18n} from \"keycloakify/login/i18n\";\nimport {MouseEvent, useRef} from \"react\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport {Card, CardContent, CardTitle} from \"../../components/ui/card\";\nimport {IconPassword, IconKey, IconNumbers, IconLock, IconUser} from '@tabler/icons-react'\n\n\nconst IconMap = {\n    \"kcAuthenticatorPasswordClass\": <IconPassword/>,\n    \"kcAuthenticatorOTPClass\": <IconNumbers/>,\n    kcAuthenticatorWebAuthnClass: <IconKey/>,\n    kcAuthenticatorWebAuthnPasswordlessClass: <IconKey/>,\n    \"kcAuthenticatorDefaultClass\": <IconUser/>\n\n}\nexport default function SelectAuthenticator(props: PageProps<Extract<KcContext, {\n    pageId: \"select-authenticator.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n    const {url, auth} = kcContext;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n    const {msg} = i18n;\n\n    const selectCredentialsForm = useRef<HTMLFormElement>(null);\n    const authExecIdInput = useRef<HTMLInputElement>(null);\n\n    const submitForm = useConstCallback(() => {\n        selectCredentialsForm.current?.submit();\n    });\n\n    const onSelectedAuthenticator = useConstCallback((event: MouseEvent<HTMLDivElement>) => {\n        const divElement = event.currentTarget;\n        const authExecId = divElement.dataset.authExecId;\n\n        if (!authExecIdInput.current || !authExecId) {\n            return;\n        }\n\n        authExecIdInput.current.value = authExecId;\n        submitForm();\n    });\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"loginChooseAuthenticator\")}>\n            <div className=\"flex gap-4 mb-3\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[450px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form\n                        id=\"kc-select-credential-form\"\n                        className={getClassName(\"kcFormClass\")}\n                        ref={selectCredentialsForm}\n                        action={url.loginAction}\n                        method=\"post\"\n                    >\n                        <div className={\"flex flex-col gap-2\"}>\n                            {auth.authenticationSelections.map((authenticationSelection, index) => (\n                                <Card key={index} className={'p-3 hover:bg-slate-100 cursor-pointer transition-colors'}\n                                      onClick={onSelectedAuthenticator}\n                                      data-auth-exec-id={authenticationSelection.authExecId}>\n                                    <CardTitle className={\"flex items-center gap-2\"}>\n                                        <>\n                                            {/*@ts-ignore*/}\n                                            {IconMap[authenticationSelection.iconCssClass]}{msg(authenticationSelection.displayName)}\n                                        </>\n                                    </CardTitle>\n                                    <CardContent className={\"p-0\"}>\n                                        {msg(authenticationSelection.helpText)}\n                                    </CardContent>\n                                </Card>\n                            ))}\n                            <input type=\"hidden\" id=\"authexec-hidden-input\" name=\"authenticationExecution\"\n                                   ref={authExecIdInput}/>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}","\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport Template from \"./Template\";\nimport LoginResetPassword from \"./pages/LoginResetPassword\";\nimport LoginUsername from \"./pages/LoginUsername\";\nimport LoginPassword from \"./pages/LoginPassword\";\nimport WebauthnRegister from \"./pages/WebauthnRegister\";\nimport WebauthnAuthenticate from \"./pages/WebauthnAuthenticate\";\nimport SelectAuthenticator from \"./pages/SelectAuthenticator\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-username.ftl\": return <LoginUsername {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-password.ftl\": return <LoginPassword {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-reset-password.ftl\": return <LoginResetPassword {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // Removes those pages in you project. They are included to show you how to implement keycloak pages\n                    // that are not yes implemented by Keycloakify. \n                    // See: https://docs.keycloakify.dev/limitations#some-pages-still-have-the-default-theme.-why\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    // This is just an example to show you what is possible. You likely don't want to keep this as is. \n                    case 'webauthn-authenticate.ftl': return  <WebauthnAuthenticate {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case 'select-authenticator.ftl': return <SelectAuthenticator {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case 'webauthn-register.ftl': return  <WebauthnRegister {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"info.ftl\": return (\n                        <Info\n                            {...{ kcContext, i18n, classes }}\n                            Template={lazy(() => import(\"keycloakify/login/Template\"))}\n                            doUseDefaultCss={true}\n                        />\n                    );\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n"],"names":["buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","_ref","ref","className","asChild","props","Comp","Slot","_jsx","cn","displayName","Checkbox","CheckboxPrimitive","children","CheckIcon","Input","type","labelVariants","Label","LabelPrimitive","Separator","orientation","decorative","SeparatorPrimitive","_len","arguments","length","inputs","Array","_key","twMerge","clsx","useI18n","createUseI18n","en","loginAs","notYou","zh_CN","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","inset","_jsxs","ChevronRightIcon","_ref2","DropdownMenuContent","_ref3","sideOffset","DropdownMenuItem","_ref4","_ref5","checked","_ref6","DotFilledIcon","_ref7","_ref8","alertVariants","Alert","role","AlertTitle","AlertDescription","Card","CardTitle","CardContent","Template","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","isReady","usePrepareTemplate","useState","document","title","msgStr","console","log","JSON","stringify","internationalizationEnabled","assert","undefined","supported","map","languageTag","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayNameHtml","id","showUsername","attemptedUsername","showResetCredentials","href","loginRestartFlowUrl","concat","ExclamationTriangleIcon","summary","showTryAnotherWayLink","action","loginAction","method","name","value","forms","submit","_Fragment","my_custom_param","URL","window","location","searchParams","get","LoginResetPassword","htmlFor","loginWithEmailAllowed","registrationEmailAsUsername","autoFocus","defaultValue","loginUrl","prividerIdIconMap","IconBrandWindows","IconBrandGoogle","IconBrandFacebookFilled","IconBrandTwitter","IconBrandStackoverflow","IconBrandGitlab","IconBrandPaypal","IconBrandInstagram","IconBrandLinkedin","IconBrandGithub","IconBrandBitbucket","IconBrandOpenSource","LoginUsername","social","usernameHidden","login","registrationDisabled","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","_formElement$querySel","preventDefault","formElement","target","querySelector","setAttribute","password","providers","registrationAllowed","tabIndex","registrationUrl","_login$username","label","autoCompleteHelper","username","autoComplete","rememberMe","defaultChecked","disabled","p","open","alias","providerId","LoginPassword","_login$password","resetPasswordAllowed","loginResetCredentialsUrl","WebauthnRegister","attestationConveyancePrefrence","authenticatorAttachment","challenge","createTimeout","excludeCredentialsId","requireResidentKey","userid","signatureAlgorithms","userVerificationRequirement","rpEntityName","rpId","isSetRetry","clientDataJSON","setClientDataJSON","attestationObject","setAttestationObject","publicKeyCredentialId","setPublicKeyCredentialId","authenticatorLabel","setAuthenticatorLabel","transports","setTransports","error","setError","formElementRef","useRef","isReadyToSubmit","setIsReadyToSubmit","submitForm","async","current","Promise","resolve","setTimeout","registerSecurityKey","PublicKeyCredential","pubKeyCredParams","getPubKeyCredParams","rp","publicKey","base64url","loose","user","attestation","authenticatorSelection","isAuthenticatorSelectionSet","userVerification","timeout","excludeCredentials","getExcludeCredentials","result","navigator","credentials","create","is","response","typeGuard","ArrayBuffer","Uint8Array","pad","rawId","getTransports","getTransportsAsString","initialLabel","labelResult","prompt","err","String","sigAlgList","object","alg","push","sigAlg","excludeCredentialIds","excludeCredentialIdsList","split","excludeCredentialId","transportsList","constructor","transportsString","i","slice","useEffect","style","marginRight","WebauthnAuthenticate","authenticators","shouldDisplayAuthenticators","Number","isUserIdentified","webauthnResult","setWebauthnResult","authenticatorData","webAuthnAuthenticate","signature","credentialId","userHandle","authenticator","iconClass","includes","displayNameProperties","transport","index","createdAt","IconMap","IconPassword","IconNumbers","kcAuthenticatorWebAuthnClass","IconKey","kcAuthenticatorWebAuthnPasswordlessClass","IconUser","SelectAuthenticator","selectCredentialsForm","authExecIdInput","_selectCredentialsFor","onSelectedAuthenticator","event","authExecId","currentTarget","dataset","authenticationSelections","authenticationSelection","iconCssClass","helpText","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","KcApp","Suspense","pageId","Fallback"],"sourceRoot":""}