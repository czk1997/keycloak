{"version":3,"file":"static/js/21.d46e4545.chunk.js","mappings":"6KAOe,SAASA,EAAKC,GACzB,MAAM,UAACC,EAAS,KAAEC,EAAI,gBAAEC,EAAe,SAAEC,EAAQ,QAAEC,GAAWL,GAExD,OAACM,EAAM,IAAEC,GAAOL,GAEtBM,EAAAA,EAAAA,QAC0BC,IAAtBR,EAAUS,QACV,8GAGJ,MAAM,cAACC,EAAa,QAAED,EAAO,gBAAEE,EAAe,SAAEC,EAAQ,gBAAEC,EAAe,UAAEC,EAAS,OAAEC,GAAUf,EAEhG,OACIgB,EAAAA,EAAAA,KAACb,EAAQ,CACAH,YAAWC,OAAMC,kBAAiBE,UACvCa,gBAAgB,EAChBC,gBAA8BV,IAAlBE,GAA8BM,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAC,SAAGV,KAAoBM,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAC,SAAGX,EAAQY,UAAYD,UAExFE,EAAAA,EAAAA,MAAA,OAAKC,GAAG,kBAAkBC,UAAW,6CAA6CJ,SAAA,EAC9EE,EAAAA,EAAAA,MAACG,EAAAA,GAAK,CAACD,UAAU,YAAWJ,SAAA,EACxBJ,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAAAN,SACNV,KAELY,EAAAA,EAAAA,MAACK,EAAAA,EAAgB,CAAAP,SAAA,CAAEX,EAAQY,aACFb,IAApBG,IACGK,EAAAA,EAAAA,KAAA,KAAAI,SAAIT,EAAgBiB,KAAIC,GAAkBxB,EAAO,kBAADyB,OAAmBD,MAA4BE,KAAK,aAI9GnB,QAAgCJ,IAApBK,OAEIL,IAAdM,GACAE,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CAACC,QAASA,IAAMC,OAAOC,SAASC,KAAOtB,EAAUM,SAAEd,EAAI,4BAE3CE,IAAnBO,EAAOsB,UACHrB,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACHC,QAASA,IAAMC,OAAOC,SAASC,KAAQrB,EAAOsB,QAAmBjB,SAAEd,EAAI,wBAN/EU,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CAACC,QAASA,IAAMC,OAAOC,SAASC,KAAOvB,EAAgBO,SAAEd,EAAI,2BAYxF,C","sources":["login/pages/Info.tsx"],"sourcesContent":["import {assert} from \"keycloakify/tools/assert\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Button} from \"../../components/ui/button\";\nimport {Alert, AlertDescription, AlertTitle} from \"../../components/ui/alert\";\n\nexport default function Info(props: PageProps<Extract<KcContext, { pageId: \"info.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {msgStr, msg} = i18n;\n\n    assert(\n        kcContext.message !== undefined,\n        \"No message in kcContext.message, there will always be a message in production context, add it in your mock\"\n    );\n\n    const {messageHeader, message, requiredActions, skipLink, pageRedirectUri, actionUri, client} = kcContext;\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayMessage={false}\n            headerNode={messageHeader !== undefined ? <>{messageHeader}</> : <>{message.summary}</>}\n        >\n            <div id=\"kc-info-message\" className={\"w-[450px] flex gap-2 items-center flex-col\"}>\n                <Alert className=\"shadow-md\">\n                    <AlertTitle>\n                        {messageHeader}\n                    </AlertTitle>\n                    <AlertDescription>{message.summary}\n                        {requiredActions !== undefined && (\n                            <b>{requiredActions.map(requiredAction => msgStr(`requiredAction.${requiredAction}` as const)).join(\",\")}</b>\n                        )}\n                    </AlertDescription>\n                </Alert>\n                {!skipLink && pageRedirectUri !== undefined ? (\n                    <Button onClick={() => window.location.href = pageRedirectUri}>{msg(\"backToApplication\")}</Button>\n                ) : actionUri !== undefined ? (\n                    <Button onClick={() => window.location.href = actionUri}>{msg(\"proceedWithAction\")}</Button>\n                ) : (\n                    client.baseUrl !== undefined && (\n                        <Button\n                            onClick={() => window.location.href = (client.baseUrl as string)}>{msg(\"backToApplication\")}</Button>\n                    )\n                )}\n            </div>\n        </Template>\n    );\n}"],"names":["Info","props","kcContext","i18n","doUseDefaultCss","Template","classes","msgStr","msg","assert","undefined","message","messageHeader","requiredActions","skipLink","pageRedirectUri","actionUri","client","_jsx","displayMessage","headerNode","_Fragment","children","summary","_jsxs","id","className","Alert","AlertTitle","AlertDescription","map","requiredAction","concat","join","Button","onClick","window","location","href","baseUrl"],"sourceRoot":""}