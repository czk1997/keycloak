{"version":3,"file":"static/js/1248.2286e261.chunk.js","mappings":"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","sources":["login/i18n.ts","PUBLIC_URL.ts","login/Template.tsx","login/KcApp.tsx","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/usePrepareTemplate.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/HTMLElement.prototype.prepend.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/keycloakify/src/tools/headInsert.ts","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["import { createUseI18n } from \"keycloakify/login\";\n\nexport const { useI18n } = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    en: {\n        alphanumericalCharsOnly: \"Only alphanumerical characters\",\n        gender: \"Gender\",\n        // Here we overwrite the default english value for the message \"doForgotPassword\"\n        // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n        doForgotPassword: \"I forgot my password\",\n        invalidUserMessage: \"Invalid username or password. (this message was overwrite in the theme)\"\n    },\n    fr: {\n        /* spell-checker: disable */\n        alphanumericalCharsOnly: \"Caractère alphanumérique uniquement\",\n        gender: \"Genre\",\n        doForgotPassword: \"J'ai oublié mon mot de passe\",\n        invalidUserMessage: \"Nom d'utilisateur ou mot de passe invalide. (ce message a été écrasé dans le thème)\"\n        /* spell-checker: enable */\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","\nimport { kcContext as kcLoginThemeContext } from \"login/kcContext\";\nimport { kcContext as kcAccountThemeContext } from \"login/kcContext\";\n\n/**\n * If you need to use process.env.PUBLIC_URL, use this variable instead.  \n * If you can, import your assets using the import statement.\n * \n * See: https://docs.keycloakify.dev/importing-assets#importing-custom-assets-that-arent-fonts\n */\nexport const PUBLIC_URL = (()=>{\n\n    const kcContext = (()=>{\n\n        if( kcLoginThemeContext !== undefined ){\n            return kcLoginThemeContext;\n        }\n        \n        if( kcAccountThemeContext !== undefined ){\n            return kcLoginThemeContext\n        }\n\n        return undefined;\n\n    })();\n\n    return (kcContext === undefined || process.env.NODE_ENV === \"development\")\n        ? process.env.PUBLIC_URL\n        : `${kcContext.url.resourcesPath}/build`;\n\n})();","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport { useState } from \"react\";\nimport { assert } from \"keycloakify/tools/assert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { usePrepareTemplate } from \"keycloakify/lib/usePrepareTemplate\";\nimport { type TemplateProps } from \"keycloakify/login/TemplateProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"./kcContext\";\nimport type { I18n } from \"./i18n\";\nimport keycloakifyLogoPngUrl from \"./assets/keycloakify-logo.png\";\nimport { PUBLIC_URL } from \"../PUBLIC_URL\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\n\n    const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext;\n\n    const { isReady } = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            // `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n            // `${url.resourcesPath}/css/login.css`\n        ],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": getClassName(\"kcBodyClass\")\n    });\n\n    useState(()=> { document.title = i18n.msgStr(\"loginTitle\", kcContext.realm.displayName); });\n\n    if (!isReady) {\n        return null;\n    }\n\n    return (\n        <div className={getClassName(\"kcLoginClass\")}>\n            <div id=\"kc-header\" className={getClassName(\"kcHeaderClass\")}>\n                <div \n                    id=\"kc-header-wrapper\" \n                    className={getClassName(\"kcHeaderWrapperClass\")}\n                    style={{ \"fontFamily\": '\"Work Sans\"' }}\n                >\n                    {/* \n                        This is just to show you how it can be done but this is not the best option for importing assets.\n                        See: https://docs.keycloakify.dev/importing-assets#importing-custom-assets\n                    */}\n                    <img src={`${PUBLIC_URL}/keycloakify-logo.png`} alt=\"Keycloakify logo\" width={50} />\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}!!!\n                    {/* This is the preferred way to use assets */}\n                    <img src={keycloakifyLogoPngUrl} alt=\"Keycloakify logo\" width={50} />\n                </div>\n            </div>\n\n            <div className={clsx(getClassName(\"kcFormCardClass\"), displayWide && getClassName(\"kcFormCardAccountClass\"))}>\n                <header className={getClassName(\"kcFormHeaderClass\")}>\n                    {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                        <div id=\"kc-locale\">\n                            <div id=\"kc-locale-wrapper\" className={getClassName(\"kcLocaleWrapperClass\")}>\n                                <div className=\"kc-dropdown\" id=\"kc-locale-dropdown\">\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                    <a href=\"#\" id=\"kc-current-locale-link\">\n                                        {labelBySupportedLanguageTag[currentLanguageTag]}\n                                    </a>\n                                    <ul>\n                                        {locale.supported.map(({ languageTag }) => (\n                                            <li key={languageTag} className=\"kc-dropdown-item\">\n                                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                <a href=\"#\" onClick={() => changeLocale(languageTag)}>\n                                                    {labelBySupportedLanguageTag[languageTag]}\n                                                </a>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n                        displayRequiredFields ? (\n                            <div className={getClassName(\"kcContentWrapperClass\")}>\n                                <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                    <span className=\"subtitle\">\n                                        <span className=\"required\">*</span>\n                                        {msg(\"requiredFields\")}\n                                    </span>\n                                </div>\n                                <div className=\"col-md-10\">\n                                    <h1 id=\"kc-page-title\">{headerNode}</h1>\n                                </div>\n                            </div>\n                        ) : (\n                            <h1 id=\"kc-page-title\">{headerNode}</h1>\n                        )\n                    ) : displayRequiredFields ? (\n                        <div className={getClassName(\"kcContentWrapperClass\")}>\n                            <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                <span className=\"subtitle\">\n                                    <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                                </span>\n                            </div>\n                            <div className=\"col-md-10\">\n                                {showUsernameNode}\n                                <div className={getClassName(\"kcFormGroupClass\")}>\n                                    <div id=\"kc-username\">\n                                        <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                        <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                            <div className=\"kc-login-tooltip\">\n                                                <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                                <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                            </div>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <>\n                            {showUsernameNode}\n                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                <div id=\"kc-username\">\n                                    <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                    <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                        <div className=\"kc-login-tooltip\">\n                                            <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                            <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                        </div>\n                                    </a>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </header>\n                <div id=\"kc-content\">\n                    <div id=\"kc-content-wrapper\">\n                        {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                        {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                            <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                {message.type === \"success\" && <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                {message.type === \"warning\" && <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                {message.type === \"error\" && <span className={getClassName(\"kcFeedbackErrorIcon\")}></span>}\n                                {message.type === \"info\" && <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                <span\n                                    className=\"kc-feedback-text\"\n                                    dangerouslySetInnerHTML={{\n                                        \"__html\": message.summary\n                                    }}\n                                />\n                            </div>\n                        )}\n                        {children}\n                        {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n                            <form\n                                id=\"kc-select-try-another-way-form\"\n                                action={url.loginAction}\n                                method=\"post\"\n                                className={clsx(displayWide && getClassName(\"kcContentWrapperClass\"))}\n                            >\n                                <div\n                                    className={clsx(\n                                        displayWide && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                                    )}\n                                >\n                                    <div className={getClassName(\"kcFormGroupClass\")}>\n                                        <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\" />\n                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                        <a\n                                            href=\"#\"\n                                            id=\"try-another-way\"\n                                            onClick={() => {\n                                                document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                return false;\n                                            }}\n                                        >\n                                            {msg(\"doTryAnotherWay\")}\n                                        </a>\n                                    </div>\n                                </div>\n                            </form>\n                        )}\n                        {displayInfo && (\n                            <div id=\"kc-info\" className={getClassName(\"kcSignUpClass\")}>\n                                <div id=\"kc-info-wrapper\" className={getClassName(\"kcInfoAreaWrapperClass\")}>\n                                    {infoNode}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport Template from \"./Template\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // Removes those pages in you project. They are included to show you how to implement keycloak pages\n                    // that are not yes implemented by Keycloakify. \n                    // See: https://docs.keycloakify.dev/limitations#some-pages-still-have-the-default-theme.-why\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    // This is just an example to show you what is possible. You likely don't want to keep this as is. \n                    case \"info.ftl\": return (\n                        <Info\n                            {...{ kcContext, i18n, classes }}\n                            Template={lazy(() => import(\"keycloakify/login/Template\"))}\n                            doUseDefaultCss={true}\n                        />\n                    );\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { useReducer, useEffect } from \"react\";\nimport { headInsert } from \"keycloakify/tools/headInsert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\n\nexport function usePrepareTemplate(params: {\n    doFetchDefaultThemeResources: boolean;\n    styles?: string[];\n    scripts?: string[];\n    htmlClassName: string | undefined;\n    bodyClassName: string | undefined;\n}) {\n    const { doFetchDefaultThemeResources, styles = [], scripts = [], htmlClassName, bodyClassName } = params;\n\n    const [isReady, setReady] = useReducer(() => true, !doFetchDefaultThemeResources);\n\n    useEffect(() => {\n        if (!doFetchDefaultThemeResources) {\n            return;\n        }\n\n        let isUnmounted = false;\n\n        const removeArray: (() => void)[] = [];\n\n        (async () => {\n            for (const style of [...styles].reverse()) {\n                const { prLoaded, remove } = headInsert({\n                    \"type\": \"css\",\n                    \"position\": \"prepend\",\n                    \"href\": style\n                });\n\n                removeArray.push(remove);\n\n                // TODO: Find a way to do that in parallel (without breaking the order)\n                await prLoaded;\n\n                if (isUnmounted) {\n                    return;\n                }\n            }\n\n            setReady();\n        })();\n\n        scripts.forEach(src => {\n            const { remove } = headInsert({\n                \"type\": \"javascript\",\n                src\n            });\n\n            removeArray.push(remove);\n        });\n\n        return () => {\n            isUnmounted = true;\n            removeArray.forEach(remove => remove());\n        };\n    }, []);\n\n    useSetClassName({\n        \"target\": \"html\",\n        \"className\": htmlClassName\n    });\n\n    useSetClassName({\n        \"target\": \"body\",\n        \"className\": bodyClassName\n    });\n\n    return { isReady };\n}\n\nfunction useSetClassName(params: { target: \"html\" | \"body\"; className: string | undefined }) {\n    const { target, className } = params;\n\n    useEffect(() => {\n        if (className === undefined) {\n            return;\n        }\n\n        const htmlClassList = document.getElementsByTagName(target)[0].classList;\n\n        const tokens = clsx(className).split(\" \");\n\n        htmlClassList.add(...tokens);\n\n        return () => {\n            htmlClassList.remove(...tokens);\n        };\n    }, [className]);\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsWrapperClass\": undefined,\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","if (!HTMLElement.prototype.prepend) {\n    HTMLElement.prototype.prepend = function (childNode) {\n        if (typeof childNode === \"string\") {\n            throw new Error(\"Error with HTMLElement.prototype.appendFirst polyfill\");\n        }\n\n        this.insertBefore(childNode, this.firstChild);\n    };\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import \"./HTMLElement.prototype.prepend\";\nimport { Deferred } from \"evt/tools/Deferred\";\n\nexport function headInsert(\n    params:\n        | {\n              type: \"css\";\n              href: string;\n              position: \"append\" | \"prepend\";\n          }\n        | {\n              type: \"javascript\";\n              src: string;\n          }\n): { remove: () => void; prLoaded: Promise<void> } {\n    const htmlElement = document.createElement(\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return \"link\";\n                case \"javascript\":\n                    return \"script\";\n            }\n        })()\n    );\n\n    const dLoaded = new Deferred<void>();\n\n    htmlElement.addEventListener(\"load\", () => dLoaded.resolve());\n\n    Object.assign(\n        htmlElement,\n        (() => {\n            switch (params.type) {\n                case \"css\":\n                    return {\n                        \"href\": params.href,\n                        \"type\": \"text/css\",\n                        \"rel\": \"stylesheet\",\n                        \"media\": \"screen,print\"\n                    };\n                case \"javascript\":\n                    return {\n                        \"src\": params.src,\n                        \"type\": \"text/javascript\"\n                    };\n            }\n        })()\n    );\n\n    document.getElementsByTagName(\"head\")[0][\n        (() => {\n            switch (params.type) {\n                case \"javascript\":\n                    return \"appendChild\";\n                case \"css\":\n                    return (() => {\n                        switch (params.position) {\n                            case \"append\":\n                                return \"appendChild\";\n                            case \"prepend\":\n                                return \"prepend\";\n                        }\n                    })();\n            }\n        })()\n    ](htmlElement);\n\n    return {\n        \"prLoaded\": dLoaded.pr,\n        \"remove\": () => htmlElement.remove()\n    };\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["useI18n","createUseI18n","en","alphanumericalCharsOnly","gender","doForgotPassword","invalidUserMessage","fr","PUBLIC_URL","kcContext","undefined","kcLoginThemeContext","kcAccountThemeContext","process","concat","url","resourcesPath","Template","props","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","infoNode","i18n","doUseDefaultCss","classes","children","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","message","isAppInitiatedAction","isReady","usePrepareTemplate","useState","document","title","msgStr","displayName","_jsxs","className","_jsx","id","style","src","alt","width","displayNameHtml","keycloakifyLogoPngUrl","clsx","internationalizationEnabled","assert","supported","length","href","map","_ref","languageTag","onClick","showUsername","showResetCredentials","attemptedUsername","loginRestartFlowUrl","_Fragment","type","dangerouslySetInnerHTML","summary","showTryAnotherWayLink","action","loginAction","method","name","value","forms","submit","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","KcApp","Suspense","pageId","Fallback","createUseClassName","params","defaultClasses","useConstCallback","classKey","doFetchDefaultThemeResources","styles","scripts","htmlClassName","bodyClassName","setReady","useReducer","useEffect","isUnmounted","removeArray","reverse","prLoaded","remove","headInsert","push","forEach","useSetClassName","target","htmlClassList","getElementsByTagName","classList","tokens","split","add","HTMLElement","prototype","prepend","childNode","Error","this","insertBefore","firstChild","len","arguments","i","cls","arg","toAdd","Array","isArray","typeGuard","k","htmlElement","createElement","dLoaded","Deferred","addEventListener","resolve","Object","assign","position","pr","_value","isMatched"],"sourceRoot":""}