{"version":3,"file":"static/js/3170.a6e78669.chunk.js","mappings":"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","sources":["components/ui/button.tsx","components/ui/checkbox.tsx","components/ui/input.tsx","components/ui/label.tsx","components/ui/separator.tsx","lib/utils.ts","login/i18n.ts","components/ui/dropdown-menu.tsx","components/ui/alert.tsx","components/ui/card.tsx","login/Template.tsx","login/pages/LoginResetPassword.tsx","login/pages/LoginUsername.tsx","login/pages/LoginPassword.tsx","login/pages/WebauthnRegister.tsx","login/pages/WebauthnAuthenticate.tsx","login/KcApp.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\nimport {cn} from \"lib/utils\";\n\n\n\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import { createUseI18n } from \"keycloakify/login\";\n\nexport const { useI18n } = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    en: {\n        loginAs: \"Log in as\",\n        notYou:\"Not You?\"\n    },\n    zh_CN: {\n        loginAs: \"登录为\",\n        notYou:\"不是你？\"\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import * as React from \"react\"\n\nimport { cn } from \"lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport {useState} from \"react\";\nimport {assert} from \"keycloakify/tools/assert\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {usePrepareTemplate} from \"keycloakify/lib/usePrepareTemplate\";\nimport {type TemplateProps} from \"keycloakify/login/TemplateProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"./kcContext\";\nimport type {I18n} from \"./i18n\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger\n} from \"components/ui/dropdown-menu\";\nimport {buttonVariants} from \"components/ui/button\";\nimport {cn} from \"lib/utils\";\nimport {Alert, AlertDescription, AlertTitle} from \"../components/ui/alert\";\nimport {CaretLeftIcon, ExclamationTriangleIcon} from \"@radix-ui/react-icons\";\nimport {Card, CardContent, CardTitle} from \"../components/ui/card\";\nimport {Boxes} from \"../components/ui/background-boxes\";\nimport {Meteors} from \"../components/ui/meteors\";\nimport {WavyBackground} from \"../components/ui/wavy-background\";\nimport {BackgroundBeams} from \"../components/ui/background-beams\";\nimport {Tooltip, TooltipContent, TooltipProvider, TooltipTrigger} from \"../components/ui/tooltip\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag} = i18n;\n\n    const {realm, locale, auth, url, message, isAppInitiatedAction} = kcContext;\n\n    const {isReady} = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            // `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n            // `${url.resourcesPath}/css/login.css`\n        ],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": getClassName(\"kcBodyClass\")\n    });\n\n    useState(() => {\n        document.title = i18n.msgStr(\"loginTitle\", kcContext.realm.displayName);\n    });\n\n    if (!isReady) {\n        return null;\n    }\n    console.log(kcContext)\n    console.log(JSON.stringify(kcContext))\n    return (\n        <div>\n            <div\n                className=\"h-screen relative w-full overflow-hidden flex flex-col items-center justify-center\">\n                {/*<BackgroundBeams/>*/}\n                {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                    <DropdownMenu>\n                        <DropdownMenuTrigger className={cn(\n                            \"z-10\",\n                            buttonVariants({variant: \"ghost\"}),\n                            \"absolute right-4 top-4 md:right-8 md:top-8\"\n                        )}> {labelBySupportedLanguageTag[currentLanguageTag]}</DropdownMenuTrigger>\n                        <DropdownMenuContent>\n                            {locale.supported.map(({languageTag}) => (\n                                <DropdownMenuItem\n                                    onClick={() => changeLocale(languageTag)}>  {labelBySupportedLanguageTag[languageTag]}</DropdownMenuItem>\n                            ))}\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n                )}\n                <div className=\"absolute right-4 top-4 md:left-8 md:top-8 flex items-center z-20\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"mr-2 h-6 w-6\"\n                    >\n                        <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\"/>\n                    </svg>\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}\n                </div>\n                <div\n                    className=\"container relative h-screen flex items-center justify-center md:grid lg:max-w-none lg:px-0\">\n                    <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 items-center\">\n                        <Card id=\"kc-content\" className={\"z-20 lg:px-8\"}>\n                            <CardContent id=\"kc-content-wrapper\" className={\"flex flex-col min-[w]:350px \"}>\n                                {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n\n                                <div className={'flex justify-center'}>\n                                    <h1 className={\"text-2xl font-semibold tracking-tight text-center mt-6 mb-3\"}\n                                        id=\"kc-page-title\">{headerNode}</h1>\n\n                                </div>\n\n                                {auth !== undefined && auth.showUsername && (\n                                    <div className={\"mt-3 mb-3 text-slate-500\"}>{msg('loginAs')} <span\n                                        className={\"font-bold text-slate-950\"}>{auth?.attemptedUsername}</span>\n                                        {auth.showResetCredentials && (\n                                            <a id=\"reset-login\" href={url.loginRestartFlowUrl}\n                                               className={\"text-sm items-center relative w-auto h-0 inline-block hover:underline ml-1\"}>\n                                                (Not You?)\n                                            </a>\n                                        )}\n                                    </div>\n                                )}\n                                {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                                    <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                        {message.type === \"success\" &&\n                                            <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                        {message.type === \"warning\" &&\n                                            <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                        {message.type === \"error\" &&\n                                            <Alert variant=\"destructive\" className={\"mb-2\"}>\n                                                <ExclamationTriangleIcon className=\"h-4 w-4\"/>\n                                                <AlertTitle>{msg('errorTitle')}</AlertTitle>\n                                                <AlertDescription>\n                                                    {message.summary}\n                                                </AlertDescription>\n                                            </Alert>\n                                        }\n                                        {message.type === \"info\" &&\n                                            <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                    </div>\n                                )}\n                                {children}\n                                {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n                                    <form\n                                        id=\"kc-select-try-another-way-form\"\n                                        action={url.loginAction}\n                                        method=\"post\"\n                                        className={clsx(displayWide && getClassName(\"kcContentWrapperClass\"))}\n                                    >\n                                        <div\n                                            className={clsx(\n                                                displayWide && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                                            )}\n                                        >\n                                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                                <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\"/>\n                                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                <a\n                                                    href=\"#\"\n                                                    id=\"try-another-way\"\n                                                    onClick={() => {\n                                                        document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                        return false;\n                                                    }}\n                                                >\n                                                    {msg(\"doTryAnotherWay\")}\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </form>\n                                )}\n                                {displayInfo && (\n                                    <div id=\"kc-info\" className={getClassName(\"kcSignUpClass\")}>\n                                        <div id=\"kc-info-wrapper\" className={getClassName(\"kcInfoAreaWrapperClass\")}>\n                                            {infoNode}\n                                        </div>\n                                    </div>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n        ;\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\n\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\n\nexport default function LoginResetPassword(props: PageProps<Extract<KcContext, {\n    pageId: \"login-reset-password.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, realm, auth} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayMessage={false}\n            headerNode={msg(\"emailForgotTitle\")}\n            infoNode={msg(\"emailInstruction\")}\n        >\n            <div className=\"lg:p-8 lg:pb-4 flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {/*<div id=\"kc-form\" className={clsx(realm.password && social.providers !== undefined && getClassName(\"kcContentWrapperClass\"))}>*/}\n                    {/*    <div*/}\n                    <form id=\"kc-reset-password-form\" className={\"grid gap-3 items-center\"} action={url.loginAction}\n                          method=\"post\">\n                        <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n                            <Label htmlFor=\"autoCompleteHelper\"> {!realm.loginWithEmailAllowed\n                                ? msg(\"username\")\n                                : !realm.registrationEmailAsUsername\n                                    ? msg(\"usernameOrEmail\")\n                                    : msg(\"email\")}</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                autoFocus\n                                defaultValue={auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined}\n                            />\n                        </div>\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                            <Button\n                                className={\"w-full\"}\n                                type=\"submit\">\n                                {msgStr(\"doSubmit\")}\n                            </Button>\n                        </div>\n\n                    </form>\n\n\n                    <div className={\"text-sm mt-3 hover:underline text-slate-500\"}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"components/ui/input\";\nimport {Button, buttonVariants} from \"../../components/ui/button\";\nimport {Checkbox} from \"../../components/ui/checkbox\";\nimport {cn} from \"../../lib/utils\";\nimport {Label} from \"../../components/ui/label\";\nimport {Separator} from \"../../components/ui/separator\";\nimport {GitHubLogoIcon} from '@radix-ui/react-icons'\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\n\nexport default function LoginUsername(props: PageProps<Extract<KcContext, { pageId: \"login-username.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {social, realm, url, usernameHidden, login, auth, registrationDisabled} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        //NOTE: Even if we login with email Keycloak expect username and password in\n        //the POST request.\n        formElement.querySelector(\"input[name='email']\")?.setAttribute(\"name\", \"username\");\n\n        formElement.submit();\n    });\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayInfo={social.displayInfo}\n            displayWide={realm.password && social.providers !== undefined}\n            headerNode={msg(\"doLogIn\")}\n            infoNode={\n                realm.password &&\n                realm.registrationAllowed &&\n                !registrationDisabled && (\n                    <div id=\"kc-registration\" className={\"justify-center items-center text-center\"}>\n                        <Separator className={\"mb-3\"}/>\n                        <span className={\"text-slate-500 text-sm\"}>\n                            {msg(\"noAccount\")} {' '}\n                            <a tabIndex={6} href={url.registrationUrl} className={\"text-slate-950\"}>\n                                {msg(\"doRegister\")}\n                            </a>\n                        </span>\n                    </div>\n                )\n            }\n        >\n            <div className=\" flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {realm.password && (\n                        <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"\n                              className={\"grid gap-3 items-center\"}>\n                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                {!usernameHidden &&\n                                    (() => {\n                                        const label = !realm.loginWithEmailAllowed\n                                            ? \"username\"\n                                            : realm.registrationEmailAsUsername\n                                                ? \"email\"\n                                                : \"usernameOrEmail\";\n\n                                        const autoCompleteHelper: typeof label = label === \"usernameOrEmail\" ? \"username\" : label;\n\n                                        return (\n                                            <>\n                                                <Label htmlFor={autoCompleteHelper}\n                                                       className={getClassName(\"kcLabelClass\")}>\n                                                    {msg(label)}\n                                                </Label>\n                                                <Input\n                                                    tabIndex={1}\n                                                    id={autoCompleteHelper}\n                                                    className={getClassName(\"kcInputClass\")}\n                                                    //NOTE: This is used by Google Chrome auto fill so we use it to tell\n                                                    //the browser how to pre fill the form but before submit we put it back\n                                                    //to username because it is what keycloak expects.\n                                                    name={autoCompleteHelper}\n                                                    defaultValue={login.username ?? \"\"}\n                                                    type=\"text\"\n                                                    autoFocus={true}\n                                                    autoComplete=\"off\"\n                                                />\n                                            </>\n                                        );\n                                    })()}\n                            </div>\n                            <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                                <div id=\"kc-form-options\">\n                                    {realm.rememberMe && !usernameHidden && (\n                                        <div className=\"flex items-center space-x-2\">\n                                            <Checkbox\n                                                tabIndex={3}\n                                                id=\"rememberMe\"\n                                                name=\"rememberMe\"\n                                                defaultChecked={login.rememberMe === \"on\"}\n                                            />\n                                            <label\n                                                htmlFor=\"rememberMe\"\n                                                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                                            >\n                                                {msg(\"rememberMe\")}\n                                            </label>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                            <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                                <Button\n                                    tabIndex={4}\n                                    className={\"w-full\"}\n                                    name=\"login\"\n                                    id=\"kc-login\"\n                                    type=\"submit\"\n\n                                    disabled={isLoginButtonDisabled}\n                                >\n                                    {msgStr(\"doLogIn\")}\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </div>\n                {realm.password && social.providers !== undefined && (\n                    <div\n                        id=\"kc-social-providers\"\n                        className={'flex gap-4'}\n                    >\n\n                        <Separator orientation=\"vertical\"/>\n                        <ul\n                            className={\"grid grid-cols-2 gap-2\"}\n                        >\n                            {social.providers.map(p => (\n                                <li key={p.providerId} className={getClassName(\"kcFormSocialAccountListLinkClass\")}>\n                                    <Button onClick={() => window.open(p.loginUrl)} id={`zocial-${p.alias}`}\n                                            className={`${buttonVariants({variant: \"secondary\"})} w-full flex justify-start gap-2`}>\n                                        <GitHubLogoIcon/>\n                                        <span>{p.displayName}</span>\n                                    </Button>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n            </div>\n\n\n\n        </Template>\n    );\n}\n","import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { FormEventHandler } from \"react\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\n\nexport default function LoginPassword(props: PageProps<Extract<KcContext, { \"pageId\": \"login-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { realm, url, login } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        formElement.submit();\n    });\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"doLogIn\")}>\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}>\n                    <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"  className={\"grid gap-3 items-center\"}>\n                        <div className={getClassName(\"kcFormGroupClass\")}>\n                            <Label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"password\")}\n                            </Label>\n                            <Input\n                                tabIndex={2}\n                                id=\"password\"\n                                className={getClassName(\"kcInputClass\")}\n                                name=\"password\"\n                                type=\"password\"\n                                autoFocus={true}\n                                autoComplete=\"on\"\n                                defaultValue={login.password ?? \"\"}\n                            />\n                        </div>\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                            <Button\n                                tabIndex={4}\n                                className={\"w-full\"}\n                                name=\"login\"\n                                id=\"kc-login\"\n                                type=\"submit\"\n                                disabled={isLoginButtonDisabled}\n                            >\n                                {msgStr(\"doLogIn\")}\n                            </Button>\n                        </div>\n                    </form>\n                    {realm.resetPasswordAllowed && (\n                        <span className={\"text-sm mt-3 text-slate-500\"}>\n                                            <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                                {msg(\"doForgotPassword\")}\n                                            </a>\n                                        </span>\n                    )}\n                </div>\n            </div>\n        </Template>\n    );\n}","import { useEffect, useRef, useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { base64url } from \"rfc4648\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport { assert } from \"tsafe/assert\";\nimport { is } from \"tsafe/is\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport default function WebauthnRegister(props: PageProps<Extract<KcContext, { pageId: \"webauthn-register.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const {\n        url,\n        attestationConveyancePrefrence,\n        authenticatorAttachment,\n        challenge,\n        createTimeout,\n        excludeCredentialsId,\n        requireResidentKey,\n        userid,\n        username,\n        signatureAlgorithms,\n        userVerificationRequirement,\n        rpEntityName,\n        rpId,\n        isSetRetry,\n        isAppInitiatedAction\n    } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [clientDataJSON, setClientDataJSON] = useState(\"\");\n    const [attestationObject, setAttestationObject] = useState(\"\");\n    const [publicKeyCredentialId, setPublicKeyCredentialId] = useState(\"\");\n    const [authenticatorLabel, setAuthenticatorLabel] = useState(\"\");\n    const [transports, setTransports] = useState<string[] | string>(\"\");\n    const [error, setError] = useState(\"\");\n\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [isReadyToSubmit, setIsReadyToSubmit] = useState(false);\n\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n\n    const registerSecurityKey = useConstCallback(async () => {\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(\"WebAuthn is not supported in this browser.\");\n            if (formElementRef.current) {\n                formElementRef.current.submit();\n            }\n            return;\n        }\n\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = getPubKeyCredParams(signatureAlgorithms);\n        let rp: { name: string; id?: string } = { name: rpEntityName, id: rpId };\n        let publicKey: PublicKeyCredentialCreationOptions = {\n            challenge: base64url.parse(challenge, { loose: true }),\n            rp: rp,\n            user: {\n                id: base64url.parse(userid, { loose: true }),\n                name: username,\n                displayName: username\n            },\n            pubKeyCredParams: pubKeyCredParams as PublicKeyCredentialParameters[],\n            attestation:\n                attestationConveyancePrefrence !== \"not specified\" ? (attestationConveyancePrefrence as AttestationConveyancePreference) : undefined\n        };\n        let authenticatorSelection = {};\n        let isAuthenticatorSelectionSet = false;\n\n        if (authenticatorAttachment !== \"not specified\") {\n            authenticatorSelection = { authenticatorAttachment: authenticatorAttachment };\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (requireResidentKey !== \"not specified\") {\n            if (requireResidentKey === \"Yes\") {\n                authenticatorSelection = { ...authenticatorSelection, requireResidentKey: true };\n            } else {\n                authenticatorSelection = { ...authenticatorSelection, requireResidentKey: false };\n            }\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (userVerificationRequirement !== \"not specified\") {\n            authenticatorSelection = { ...authenticatorSelection, userVerification: userVerificationRequirement };\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (isAuthenticatorSelectionSet) {\n            publicKey = { ...publicKey, authenticatorSelection: authenticatorSelection };\n        }\n\n        if (createTimeout !== 0) {\n            publicKey = { ...publicKey, timeout: createTimeout * 1000 };\n        }\n        let excludeCredentials = getExcludeCredentials(excludeCredentialsId);\n        if (excludeCredentials && excludeCredentials.length !== 0) {\n            publicKey = { ...publicKey, excludeCredentials: excludeCredentials };\n        }\n        try {\n            const result = await navigator.credentials.create({ publicKey });\n\n            if (!result || result.type !== \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n\n            const response: AuthenticatorAttestationResponse = result.response as unknown as AuthenticatorAttestationResponse;\n\n            const clientDataJSON = response.clientDataJSON;\n            const attestationObject = response.attestationObject;\n\n            assert(\n                typeGuard<AuthenticatorAttestationResponse>(response, response.attestationObject instanceof ArrayBuffer),\n                \"response not an AuthenticatorAttestationResponse\"\n            );\n\n            setClientDataJSON(base64url.stringify(new Uint8Array(clientDataJSON), { \"pad\": false }));\n            setAttestationObject(base64url.stringify(new Uint8Array(attestationObject), { pad: false }));\n            setPublicKeyCredentialId(base64url.stringify(new Uint8Array(result.rawId), { pad: false }));\n\n            //@ts-ignore\n            if (typeof response.getTransports === \"function\") {\n                //@ts-ignore\n                let transports = response.getTransports();\n                if (transports) {\n                    setTransports(getTransportsAsString(transports));\n                }\n            } else {\n                console.log(\"Your browser is not able to recognize supported transport media for the authenticator.\");\n            }\n\n            let initialLabel = \"WebAuthn Authenticator (Default Label)\";\n            let labelResult = window.prompt(\"Please enter a label for your WebAuthn authenticator\", initialLabel);\n            if (labelResult !== null && labelResult !== \"\") {\n                setAuthenticatorLabel(labelResult);\n            }\n        } catch (err) {\n            setError(String(err));\n            setIsReadyToSubmit(true);\n        }\n        setIsReadyToSubmit(true);\n    });\n\n    const getPubKeyCredParams = (sigAlgList: number[]): PublicKeyCredentialParameters[] => {\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = [];\n        if (signatureAlgorithms.length === 0) {\n            let alg: COSEAlgorithmIdentifier = -7;\n            let type: PublicKeyCredentialType = \"public-key\";\n            let object: PublicKeyCredentialParameters = { type, alg };\n            pubKeyCredParams.push(object);\n            return pubKeyCredParams;\n        }\n        for (let sigAlg of sigAlgList) {\n            pubKeyCredParams.push({ type: \"public-key\", alg: sigAlg });\n        }\n        return pubKeyCredParams;\n    };\n\n    const getExcludeCredentials = (excludeCredentialIds: string) => {\n        let excludeCredentials: PublicKeyCredentialDescriptor[] = [];\n        if (!excludeCredentialIds) {\n            return excludeCredentials;\n        }\n        let excludeCredentialIdsList = excludeCredentialIds.split(\",\");\n        for (let excludeCredentialId of excludeCredentialIdsList) {\n            excludeCredentials.push({ type: \"public-key\", id: base64url.parse(excludeCredentialId, { loose: true }) });\n        }\n    };\n\n    const getTransportsAsString = (transportsList: string | string[]): string => {\n        if (transportsList === \"\" || transportsList.constructor !== Array) return \"\";\n\n        let transportsString = \"\";\n\n        for (let i = 0; i < transportsList.length; i++) {\n            transportsString += transportsList[i] + \",\";\n        }\n\n        return transportsString.slice(0, -1);\n    };\n\n    useEffect(() => {\n        if (isReadyToSubmit) {\n            submitForm();\n            setIsReadyToSubmit(false); // Reset the flag after submission\n        }\n    }, [isReadyToSubmit]);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            headerNode={\n                <>\n                    <span className={getClassName(\"kcWebAuthnDefaultIcon\")} style={{ marginRight: \"5px\" }}></span>\n                    {msg(\"webauthn-registration-title\")}\n                </>\n            }\n        >\n            <div id=\"kc-form-webauthn\" className={getClassName(\"kcFormClass\")}>\n                <form\n                    id=\"kc-webauthn-settings-form\"\n                    action={url.loginAction}\n                    ref={formElementRef}\n                    method=\"post\"\n                    className={getClassName(\"kcFormClass\")}\n                >\n                    <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\" value={clientDataJSON} />\n                    <input type=\"hidden\" id=\"attestationObject\" name=\"attestationObject\" value={attestationObject} />\n                    <input type=\"hidden\" id=\"publicKeyCredentialId\" name=\"publicKeyCredentialId\" value={publicKeyCredentialId} />\n                    <input type=\"hidden\" id=\"authenticatorLabel\" name=\"authenticatorLabel\" value={authenticatorLabel} />\n                    <input type=\"hidden\" id=\"transports\" name=\"transports\" value={transports} />\n                    <input type=\"hidden\" id=\"error\" name=\"error\" value={error} />\n                </form>\n                <input\n                    type=\"button\"\n                    onClick={registerSecurityKey}\n                    value={msgStr(\"doRegister\")}\n                    id=\"registerWebAuthn\"\n                    className={clsx(\n                        getClassName(\"kcButtonClass\"),\n                        getClassName(\"kcButtonPrimaryClass\"),\n                        getClassName(\"kcButtonBlockClass\"),\n                        getClassName(\"kcButtonLargeClass\")\n                    )}\n                />\n                {!isSetRetry && isAppInitiatedAction && (\n                    <form action={url.loginAction} className={getClassName(\"kcFormClass\")}>\n                        <button\n                            type=\"submit\"\n                            className={`${getClassName(\"kcButtonClass\")} ${getClassName(\"kcButtonDefaultClass\")} ${getClassName(\n                                \"kcButtonBlockClass\"\n                            )} ${getClassName(\"kcButtonLargeClass\")}`}\n                            id=\"cancelWebAuthnAIA\"\n                            name=\"cancel-aia\"\n                            value=\"true\"\n                        >\n                            {msg(\"doCancel\")}\n                        </button>\n                    </form>\n                )}\n            </div>\n        </Template>\n    );\n}\n","import {useEffect, useRef, useState} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport type {MessageKey} from \"keycloakify/login/i18n/i18n\";\nimport {base64url} from \"rfc4648\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {assert} from \"tsafe/assert\";\nimport {is} from \"tsafe/is\";\nimport {typeGuard} from \"tsafe/typeGuard\";\nimport {Button} from \"../../components/ui/button\";\n\nexport default function WebauthnAuthenticate(props: PageProps<Extract<KcContext, {\n    pageId: \"webauthn-authenticate.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {url} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n    const {authenticators, challenge, shouldDisplayAuthenticators, userVerification, rpId} = kcContext;\n    const createTimeout = Number(kcContext.createTimeout);\n    const isUserIdentified = kcContext.isUserIdentified == \"true\";\n\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [error, setError] = useState(\"\");\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n    const [webauthnResult, setWebauthnResult] = useState({} as any)\n    useEffect(() => {\n        if (error != null && webauthnResult.authenticatorData) {\n            console.log(webauthnResult)\n            submitForm()\n        }\n    }, [webauthnResult])\n    const webAuthnAuthenticate = useConstCallback(async () => {\n        debugger\n        // const allowCredentials = authenticators.authenticators.map(\n        //     authenticator =>\n        //         ({\n        //             id: base64url.parse(authenticator.credentialId, {loose: true}),\n        //             type: \"public-key\"\n        //         } as PublicKeyCredentialDescriptor)\n        // );\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(msgStr(\"webauthn-unsupported-browser-text\"));\n            submitForm();\n            return;\n        }\n\n\n        const publicKey: PublicKeyCredentialRequestOptions = {\n            rpId,\n            challenge: base64url.parse(challenge, {loose: true})\n        };\n\n        if (createTimeout !== 0) {\n            publicKey.timeout = createTimeout * 1000;\n        }\n\n        if (userVerification !== \"not specified\") {\n            publicKey.userVerification = userVerification;\n        }\n\n        try {\n            const result = await navigator.credentials.get({publicKey});\n            if (!result || result.type != \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n            if (!(\"authenticatorData\" in result.response)) {\n                return;\n            }\n            const response = result.response;\n\n            const clientDataJSON = response.clientDataJSON;\n\n\n            assert(\n                //@ts-ignore\n                typeGuard<AuthenticatorAssertionResponse>(response, \"signature\" in response && response.authenticatorData instanceof ArrayBuffer),\n                \"response not an AuthenticatorAssertionResponse\"\n            );\n\n            const authenticatorData = response.authenticatorData;\n            const signature = response.signature;\n            setWebauthnResult({\n                clientDataJSON: base64url.stringify(new Uint8Array(clientDataJSON), {\"pad\": false}),\n                authenticatorData: base64url.stringify(new Uint8Array(authenticatorData), {\"pad\": false}),\n                signature: base64url.stringify(new Uint8Array(signature), {\"pad\": false}),\n                credentialId: result.id,\n                userHandle: base64url.stringify(new Uint8Array(response.userHandle!), {\"pad\": false})\n            })\n        } catch (err) {\n            setError(String(err));\n        }\n    });\n\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"webauthn-login-title\")}>\n            <div className=\"flex gap-4 mb-3\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form id=\"webauth\" action={url.loginAction} ref={formElementRef} method=\"post\">\n                        <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\"\n                               value={webauthnResult.clientDataJSON}/>\n                        <input type=\"hidden\" id=\"authenticatorData\" name=\"authenticatorData\"\n                               value={webauthnResult.authenticatorData}/>\n                        <input type=\"hidden\" id=\"signature\" name=\"signature\" value={webauthnResult.signature}/>\n                        <input type=\"hidden\" id=\"credentialId\" name=\"credentialId\" value={webauthnResult.credentialId}/>\n                        <input type=\"hidden\" id=\"userHandle\" name=\"userHandle\" value={webauthnResult.userHandle}/>\n                        <input type=\"hidden\" id=\"error\" name=\"error\" value={webauthnResult.error}/>\n                    </form>\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        {authenticators &&\n                            (() => (\n                                <form id=\"authn_select\" className={getClassName(\"kcFormClass\")}>\n                                    {authenticators.authenticators.map(authenticator => (\n                                        <input type=\"hidden\" name=\"authn_use_chk\" value={authenticator.credentialId}\n                                               key={authenticator.credentialId}/>\n                                    ))}\n                                </form>\n                            ))()}\n                        {authenticators &&\n                            shouldDisplayAuthenticators &&\n                            (() => (\n                                <>\n                                    {authenticators.authenticators.length > 1 && (\n                                        <p className={getClassName(\"kcSelectAuthListItemTitle\")}>{msg(\"webauthn-available-authenticators\")}</p>\n                                    )}\n                                    <div className={getClassName(\"kcFormClass\")}>\n                                        {authenticators.authenticators.map(authenticator => (\n                                            <div id=\"kc-webauthn-authenticator\"\n                                                 className={getClassName(\"kcSelectAuthListItemClass\")}>\n                                                <div className={getClassName(\"kcSelectAuthListItemIconClass\")}>\n                                                    <i\n                                                        className={clsx(\n                                                            (() => {\n                                                                const className = getClassName(authenticator.transports.iconClass as any);\n                                                                return className.includes(\" \")\n                                                                    ? className\n                                                                    : [className, getClassName(\"kcWebAuthnDefaultIcon\")];\n                                                            })(),\n                                                            getClassName(\"kcSelectAuthListItemIconPropertyClass\")\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemBodyClass\")}>\n                                                    <div\n                                                        id=\"kc-webauthn-authenticator-label\"\n                                                        className={getClassName(\"kcSelectAuthListItemHeadingClass\")}\n                                                    >\n                                                        {authenticator.label}\n                                                    </div>\n\n                                                    {authenticator.transports && authenticator.transports.displayNameProperties.length && (\n                                                        <div\n                                                            id=\"kc-webauthn-authenticator-transport\"\n                                                            className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}\n                                                        >\n                                                            {authenticator.transports.displayNameProperties.map(\n                                                                (transport: MessageKey, index: number) => (\n                                                                    <>\n                                                                        <span>{msg(transport)}</span>\n                                                                        {index < authenticator.transports.displayNameProperties.length - 1 && (\n                                                                            <span>{\", \"}</span>\n                                                                        )}\n                                                                    </>\n                                                                )\n                                                            )}\n                                                        </div>\n                                                    )}\n\n                                                    <div\n                                                        className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}>\n                                                    <span\n                                                        id=\"kc-webauthn-authenticator-created-label\">{msg(\"webauthn-createdAt-label\")}</span>\n                                                        <span\n                                                            id=\"kc-webauthn-authenticator-created\">{authenticator.createdAt}</span>\n                                                    </div>\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemFillClass\")}/>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </>\n                            ))()}\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                            <Button\n                                id=\"authenticateWebAuthnButton\"\n                                type=\"button\"\n                                onClick={webAuthnAuthenticate}\n                                autoFocus={true}\n\n                                className={\"w-full mt-3\"}\n                            >\n                                {msgStr(\"webauthn-doAuthenticate\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}","\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport Template from \"./Template\";\nimport LoginResetPassword from \"./pages/LoginResetPassword\";\nimport LoginUsername from \"./pages/LoginUsername\";\nimport LoginPassword from \"./pages/LoginPassword\";\nimport WebauthnRegister from \"./pages/WebauthnRegister\";\nimport WebauthnAuthenticate from \"./pages/WebauthnAuthenticate\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-username.ftl\": return <LoginUsername {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-password.ftl\": return <LoginPassword {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-reset-password.ftl\": return <LoginResetPassword {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // Removes those pages in you project. They are included to show you how to implement keycloak pages\n                    // that are not yes implemented by Keycloakify. \n                    // See: https://docs.keycloakify.dev/limitations#some-pages-still-have-the-default-theme.-why\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    // This is just an example to show you what is possible. You likely don't want to keep this as is. \n                    case 'webauthn-authenticate.ftl': return  <WebauthnAuthenticate {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n\n                    case 'webauthn-register.ftl': return  <WebauthnRegister {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"info.ftl\": return (\n                        <Info\n                            {...{ kcContext, i18n, classes }}\n                            Template={lazy(() => import(\"keycloakify/login/Template\"))}\n                            doUseDefaultCss={true}\n                        />\n                    );\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n"],"names":["buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","_ref","ref","className","asChild","props","Comp","Slot","_jsx","cn","displayName","Checkbox","CheckboxPrimitive","children","CheckIcon","Input","type","labelVariants","Label","LabelPrimitive","Separator","orientation","decorative","SeparatorPrimitive","_len","arguments","length","inputs","Array","_key","twMerge","clsx","useI18n","createUseI18n","en","loginAs","notYou","zh_CN","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","inset","_jsxs","ChevronRightIcon","_ref2","DropdownMenuContent","_ref3","sideOffset","DropdownMenuItem","_ref4","_ref5","checked","_ref6","DotFilledIcon","_ref7","_ref8","alertVariants","Alert","role","AlertTitle","AlertDescription","Card","CardContent","Template","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","isReady","usePrepareTemplate","useState","document","title","msgStr","console","log","JSON","stringify","internationalizationEnabled","assert","undefined","supported","map","languageTag","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayNameHtml","id","showUsername","attemptedUsername","showResetCredentials","href","loginRestartFlowUrl","concat","ExclamationTriangleIcon","summary","showTryAnotherWayLink","action","loginAction","method","name","value","forms","submit","my_custom_param","URL","window","location","searchParams","get","LoginResetPassword","htmlFor","loginWithEmailAllowed","registrationEmailAsUsername","autoFocus","defaultValue","loginUrl","LoginUsername","social","usernameHidden","login","registrationDisabled","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","_formElement$querySel","preventDefault","formElement","target","querySelector","setAttribute","password","providers","registrationAllowed","tabIndex","registrationUrl","_login$username","label","autoCompleteHelper","_Fragment","username","autoComplete","rememberMe","defaultChecked","disabled","p","open","alias","GitHubLogoIcon","providerId","LoginPassword","_login$password","resetPasswordAllowed","loginResetCredentialsUrl","WebauthnRegister","attestationConveyancePrefrence","authenticatorAttachment","challenge","createTimeout","excludeCredentialsId","requireResidentKey","userid","signatureAlgorithms","userVerificationRequirement","rpEntityName","rpId","isSetRetry","clientDataJSON","setClientDataJSON","attestationObject","setAttestationObject","publicKeyCredentialId","setPublicKeyCredentialId","authenticatorLabel","setAuthenticatorLabel","transports","setTransports","error","setError","formElementRef","useRef","isReadyToSubmit","setIsReadyToSubmit","submitForm","async","current","Promise","resolve","setTimeout","registerSecurityKey","PublicKeyCredential","pubKeyCredParams","getPubKeyCredParams","rp","publicKey","base64url","loose","user","attestation","authenticatorSelection","isAuthenticatorSelectionSet","userVerification","timeout","excludeCredentials","getExcludeCredentials","result","navigator","credentials","create","is","response","typeGuard","ArrayBuffer","Uint8Array","pad","rawId","getTransports","getTransportsAsString","initialLabel","labelResult","prompt","err","String","sigAlgList","object","alg","push","sigAlg","excludeCredentialIds","excludeCredentialIdsList","split","excludeCredentialId","transportsList","constructor","transportsString","i","slice","useEffect","style","marginRight","WebauthnAuthenticate","authenticators","shouldDisplayAuthenticators","Number","isUserIdentified","webauthnResult","setWebauthnResult","authenticatorData","webAuthnAuthenticate","signature","credentialId","userHandle","authenticator","iconClass","includes","displayNameProperties","transport","index","createdAt","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","KcApp","Suspense","pageId","Fallback"],"sourceRoot":""}