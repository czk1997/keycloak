{"version":3,"file":"static/js/9707.99d94dde.chunk.js","mappings":"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","sources":["components/ui/button.tsx","components/ui/checkbox.tsx","components/ui/input.tsx","components/ui/label.tsx","components/ui/separator.tsx","lib/utils.ts","login/i18n.ts","components/ui/dropdown-menu.tsx","components/ui/alert.tsx","components/ui/card.tsx","login/Template.tsx","login/pages/LoginResetPassword.tsx","login/pages/LoginUsername.tsx","login/pages/LoginPassword.tsx","components/ui/dialog.tsx","login/pages/WebauthnRegister.tsx","login/pages/WebauthnAuthenticate.tsx","login/pages/SelectAuthenticator.tsx","login/pages/Error.tsx","login/pages/WebauthnError.tsx","login/pages/LoginConfigTotp.tsx","login/KcApp.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\nimport {cn} from \"lib/utils\";\n\n\n\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import {createUseI18n} from \"keycloakify/login\";\n\n\nexport const {useI18n} = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    // @ts-ignore\n    en: {\n        loginAs: \"Log in as\",\n        notYou: \"Not You?\",\n        \"doLogIn\": \"登录\",\n        \"doRegister\": \"注册\",\n        \"doCancel\": \"取消\",\n        \"doSubmit\": \"提交\",\n        \"doBack\": \"返回\",\n        \"doYes\": \"是\",\n        \"doNo\": \"否\",\n        \"doContinue\": \"继续\",\n        \"doIgnore\": \"忽略\",\n        \"doAccept\": \"接受\",\n        \"doDecline\": \"拒绝\",\n        \"doForgotPassword\": \"忘记密码?\",\n        \"doClickHere\": \"点击这里\",\n        \"doImpersonate\": \"模拟\",\n        \"doTryAgain\": \"重试\",\n        \"doTryAnotherWay\": \"尝试其他方法\",\n        \"doConfirmDelete\": \"确认删除\",\n        \"errorDeletingAccount\": \"删除账户时遇到错误\",\n        \"deletingAccountForbidden\": \"您没有权限删除您的账户，请联系管理员。\",\n        \"kerberosNotConfigured\": \"Kerberos 没有配置\",\n        \"kerberosNotConfiguredTitle\": \"Kerberos 没有配置\",\n        \"bypassKerberosDetail\": \"您没有通过 Kerberos 登录 或者您的浏览器没有设置 Kerberos 登录. 请点击继续通过其他途径登录。\",\n        \"kerberosNotSetUp\": \"Kerberos 没有配置，您无法登录。\",\n        \"registerTitle\": \"注册\",\n        \"loginAccountTitle\": \"登录到您的账户\",\n        \"loginTitle\": \"登录到 {0}\",\n        \"loginTitleHtml\": \"{0}\",\n        \"impersonateTitle\": \"{0} 模拟用户\",\n        \"impersonateTitleHtml\": \"<strong>{0}</strong>模拟用户\",\n        \"realmChoice\": \"域\",\n        \"unknownUser\": \"未知用户\",\n        \"loginTotpTitle\": \"配置验证器\",\n        \"loginProfileTitle\": \"更新账户信息\",\n        \"loginIdpReviewProfileTitle\": \"更新账户信息\",\n        \"loginTimeout\": \"您的登录已超时，请重新开始登录。\",\n        \"reauthenticate\": \"请重新授权以继续\",\n        \"oauthGrantTitle\": \"授权给 {0}\",\n        \"oauthGrantTitleHtml\": \"{0}\",\n        \"oauthGrantInformation\": \"通过了解 {0} 将如何处理您的数据，确保您信任 {0} 。\",\n        \"oauthGrantReview\": \"您可以审阅\",\n        \"oauthGrantTos\": \"服务条款。\",\n        \"oauthGrantPolicy\": \"隐私政策。\",\n        \"errorTitle\": \"很抱歉...\",\n        \"errorTitleHtml\": \"我们<strong>很抱歉</strong> ...\",\n        \"emailVerifyTitle\": \"验证电子邮箱地址\",\n        \"emailForgotTitle\": \"忘记密码了吗?\",\n        \"updateEmailTitle\": \"更新点在邮箱\",\n        \"emailUpdateConfirmationSentTitle\": \"已发送确认邮件。\",\n        \"emailUpdateConfirmationSent\": \"已向 {0} 发送了一封确认邮件. 请按照前面的指示来更新电子邮箱。\",\n        \"emailUpdatedTitle\": \"电子邮箱已更新。\",\n        \"emailUpdated\": \"您的账户的电子邮箱已经成功更新为 {0}.\",\n        \"updatePasswordTitle\": \"更新密码\",\n        \"codeSuccessTitle\": \"成功代码\",\n        \"codeErrorTitle\": \"错误代码\\: {0}\",\n        \"displayUnsupported\": \"不支持请求的显示类型\",\n        \"browserRequired\": \"需要浏览器来登录\",\n        \"browserContinue\": \"需要浏览器来完成登录\",\n        \"browserContinuePrompt\": \"打开浏览器以继续？ [y/n]:\",\n        \"browserContinueAnswer\": \"y\",\n        \"usb\": \"USB\",\n        \"nfc\": \"NFC\",\n        \"bluetooth\": \"蓝牙\",\n        \"internal\": \"内部\",\n        \"unknown\": \"未知\",\n        \"termsTitle\": \"条款\",\n        \"termsText\": \"<p>需要确定的条款</p>\",\n        \"termsPlainText\": \"需要确定的条款。\",\n        \"termsAcceptanceRequired\": \"您必须同意我们的的服务条款。\",\n        \"acceptTerms\": \"我同意服务条款\",\n        \"recaptchaFailed\": \"无效的验证码\",\n        \"recaptchaNotConfigured\": \"需要验证码，但是没有配置\",\n        \"consentDenied\": \"许可被拒绝。\",\n        \"noAccount\": \"新用户?\",\n        \"username\": \"用户名\",\n        \"usernameOrEmail\": \"用户名 或 电子邮箱地址\",\n        \"firstName\": \"名\",\n        \"givenName\": \"姓\",\n        \"fullName\": \"全名\",\n        \"lastName\": \"姓\",\n        \"familyName\": \"姓\",\n        \"email\": \"Email\",\n        \"password\": \"密码\",\n        \"passwordConfirm\": \"确认密码\",\n        \"passwordNew\": \"新密码\",\n        \"passwordNewConfirm\": \"确认新密码\",\n        \"hidePassword\": \"隐藏密码\",\n        \"showPassword\": \"显示密码\",\n        \"rememberMe\": \"记住我\",\n        \"authenticatorCode\": \"一次性验证码\",\n        \"address\": \"地址\",\n        \"street\": \"街道\",\n        \"locality\": \"市\",\n        \"region\": \"省，自治区，直辖市\",\n        \"postal_code\": \"邮政编码\",\n        \"country\": \"国家\",\n        \"emailVerified\": \"已验证电子邮件\",\n        \"website\": \"网址\",\n        \"phoneNumber\": \"电话号码\",\n        \"phoneNumberVerified\": \"已验证电话号码\",\n        \"gender\": \"性别\",\n        \"birthday\": \"生日\",\n        \"zoneinfo\": \"时区\",\n        \"gssDelegationCredential\": \"GSS Delegation Credential\",\n        \"logoutOtherSessions\": \"从其他设备中登出\",\n        \"profileScopeConsentText\": \"用户资料\",\n        \"emailScopeConsentText\": \"电子邮箱地址\",\n        \"addressScopeConsentText\": \"地址\",\n        \"phoneScopeConsentText\": \"电话号码\",\n        \"offlineAccessScopeConsentText\": \"离线访问\",\n        \"samlRoleListScopeConsentText\": \"我的角色\",\n        \"rolesScopeConsentText\": \"用户角色\",\n        \"restartLoginTooltip\": \"重新开始登录\",\n        \"loginTotpIntro\": \"您需要设置一个一次性密码生成器来访问您的账户\",\n        \"loginTotpStep1\": \"在您的移动设备中安装以下任意一个应用：\",\n        \"loginTotpStep2\": \"打开该应用来扫描条码\",\n        \"loginTotpStep3\": \"输入该应用提供的一次性代码并点击提交来完成配置。\",\n        \"loginTotpStep3DeviceName\": \"请提供一个设备名称以方便管理您的OTP设备\",\n        \"loginTotpManualStep2\": \"打开应用并输入密钥：\",\n        \"loginTotpManualStep3\": \"如果应用程序允许设置，请使用以下配置值：\",\n        \"loginTotpUnableToScan\": \"无法扫描？\",\n        \"loginTotpScanBarcode\": \"扫描条码？\",\n        \"loginCredential\": \"凭证\",\n        \"loginOtpOneTime\": \"一次性代码\",\n        \"loginTotpType\": \"类型\",\n        \"loginTotpAlgorithm\": \"算法\",\n        \"loginTotpDigits\": \"位数\",\n        \"loginTotpInterval\": \"间隔\",\n        \"loginTotpCounter\": \"计数\",\n        \"loginTotpDeviceName\": \"设备名称\",\n        \"loginTotp.totp\": \"基于时间\",\n        \"loginTotp.hotp\": \"给予计数器\",\n        \"totpAppFreeOTPName\": \"FreeOTP\",\n        \"totpAppGoogleName\": \"Google Authenticator\",\n        \"totpAppMicrosoftAuthenticatorName\": \"Microsoft Authenticator\",\n        \"loginChooseAuthenticator\": \"选择登录方式\",\n        \"oauthGrantRequest\": \"您是否授予这些访问权限?\",\n        \"inResource\": \"in\",\n        \"oauth2DeviceVerificationTitle\": \"设备登录\",\n        \"verifyOAuth2DeviceUserCode\": \"输入设备提供的代码，然后单击提交\",\n        \"oauth2DeviceInvalidUserCodeMessage\": \"错误代码，请重试。\",\n        \"oauth2DeviceExpiredUserCodeMessage\": \"代码已过期。请返回您的设备并尝试重新连接。\",\n        \"oauth2DeviceVerificationCompleteHeader\": \"设备登录成功\",\n        \"oauth2DeviceVerificationCompleteMessage\": \"您可以关闭此浏览器窗口并返回您的设备。\",\n        \"oauth2DeviceVerificationFailedHeader\": \"设备登录失败。\",\n        \"oauth2DeviceVerificationFailedMessage\": \"您可以关闭此浏览器窗口，然后返回到您的设备并尝试重新连接。\",\n        \"oauth2DeviceConsentDeniedMessage\": \"连接设备的同意被拒绝。\",\n        \"oauth2DeviceAuthorizationGrantDisabledMessage\": \"不允许此客户端启动 OAuth 2.0 设备授权授予。该流程已对此客户端禁用。\",\n        \"emailVerifyInstruction1\": \"一封包含验证邮箱具体步骤的邮件已经发送到您的邮箱。\",\n        \"emailVerifyInstruction2\": \"邮箱没有收到验证码?\",\n        \"emailVerifyInstruction3\": \"重新发送电子邮件\",\n        \"emailLinkIdpTitle\": \"链接 {0}\",\n        \"emailLinkIdp1\": \"一封包含链接账户 {0} 和账户 {1} 到账户 {2} 的邮件已经发送到您的邮箱。\",\n        \"emailLinkIdp2\": \"邮箱没有收到验证码邮件?\",\n        \"emailLinkIdp3\": \"重新发送电子邮件\",\n        \"emailLinkIdp4\": \"如果您已经在不同的浏览器中验证了电子邮件\",\n        \"emailLinkIdp5\": \"来继续.\",\n        \"backToLogin\": \"&laquo; 回到登录\",\n        \"emailInstruction\": \"输入您的用户名或邮箱，我们会发送一封带有设置新密码步骤的邮件到您的邮箱。\",\n        \"emailInstructionUsername\": \"输入您的用户名，我们将向您发送如何创建新密码的说明。\",\n        \"copyCodeInstruction\": \"请复制这段验证码并粘贴到您的应用：\",\n        \"pageExpiredTitle\": \"页面已过期\",\n        \"pageExpiredMsg1\": \"来重启登录流程\",\n        \"pageExpiredMsg2\": \"来继续登录流程\",\n        \"personalInfo\": \"个人信息\\:\",\n        \"role_admin\": \"管理员\",\n        \"role_realm-admin\": \"域管理员\",\n        \"role_create-realm\": \"创建域\",\n        \"role_create-client\": \"创建客户端\",\n        \"role_view-realm\": \"查看域\",\n        \"role_view-users\": \"查看用户\",\n        \"role_view-applications\": \"查看应用\",\n        \"role_view-clients\": \"查看客户端\",\n        \"role_view-events\": \"查看时间\",\n        \"role_view-identity-providers\": \"查看身份提供者\",\n        \"role_manage-realm\": \"管理域\",\n        \"role_manage-users\": \"管理用户\",\n        \"role_manage-applications\": \"管理应用\",\n        \"role_manage-identity-providers\": \"管理身份提供者\",\n        \"role_manage-clients\": \"管理客户\",\n        \"role_manage-events\": \"管理事件\",\n        \"role_view-profile\": \"查看用户信息\",\n        \"role_manage-account\": \"管理账户\",\n        \"role_manage-account-links\": \"管理账户链接\",\n        \"role_read-token\": \"读取令牌\",\n        \"role_offline-access\": \"离线访问\",\n        \"client_account\": \"账户\",\n        \"client_account-console\": \"账户控制台\",\n        \"client_security-admin-console\": \"安全管理控制台\",\n        \"client_admin-cli\": \"管理命令行工具\",\n        \"client_realm-management\": \"域管理\",\n        \"client_broker\": \"经纪人\",\n        \"requiredFields\": \"必填字段\",\n        \"invalidUserMessage\": \"无效的用户名或密码。\",\n        \"invalidUsernameMessage\": \"无效的用户名。\",\n        \"invalidUsernameOrEmailMessage\": \"无效的用户名或电子邮箱。\",\n        \"invalidPasswordMessage\": \"无效的密码.\",\n        \"invalidEmailMessage\": \"无效的电子邮件地址\",\n        \"accountDisabledMessage\": \"账户已被禁用，请联系您的管理员。\",\n        \"accountTemporarilyDisabledMessage\": \"账户被临时禁用，请联系管理员或稍后再试。\",\n        \"expiredCodeMessage\": \"登录超时，请重新登录。\",\n        \"expiredActionMessage\": \"操作已过期。请登录后继续。\",\n        \"expiredActionTokenNoSessionMessage\": \"操作已过期。\",\n        \"expiredActionTokenSessionExistsMessage\": \"操作已过期。请重新开始。\",\n        \"sessionLimitExceeded\": \"已有过多会话。\",\n        \"missingFirstNameMessage\": \"请输入名。\",\n        \"missingLastNameMessage\": \"请输入姓。\",\n        \"missingEmailMessage\": \"请输入电子邮箱.\",\n        \"missingUsernameMessage\": \"请输入用户名。\",\n        \"missingPasswordMessage\": \"请输入密码。\",\n        \"missingTotpMessage\": \"请输入验证码\",\n        \"missingTotpDeviceNameMessage\": \"请指定设备名称。\",\n        \"notMatchPasswordMessage\": \"密码不匹配。\",\n        \"error-invalid-value\": \"无效值。\",\n        \"error-invalid-blank\": \"请输入值。\",\n        \"error-empty\": \"请输入值。\",\n        \"error-invalid-length\": \"长度必须在 {1} 和 {2} 之间。\",\n        \"error-invalid-length-too-short\": \"最小长度为 {1}。\",\n        \"error-invalid-length-too-long\": \" 最大长度为 {2}。\",\n        \"error-invalid-email\": \"无效电子邮件地址。\",\n        \"error-invalid-number\": \"无效号码。\",\n        \"error-number-out-of-range\": \"号码必须介于 {1} 和 {2} 之间。\",\n        \"error-number-out-of-range-too-small\": \" 数字的最小值必须是 {1}。\",\n        \"error-number-out-of-range-too-big\": \" 数值的最大值必须为 {2}。\",\n        \"error-pattern-no-match\": \"无效值。\",\n        \"error-invalid-uri\": \"无效 URL。\",\n        \"error-invalid-uri-scheme\": \"无效 URL 方案。\",\n        \"error-invalid-uri-fragment\": \"无效 URL 片段。\",\n        \"error-user-attribute-required\": \"请指定此字段。\",\n        \"error-invalid-date\": \"无效日期。\",\n        \"error-user-attribute-read-only\": \"此字段只读。\",\n        \"error-username-invalid-character\": \"值包含无效字符。\",\n        \"error-person-name-invalid-character\": \"值包含无效字符。\",\n        \"error-reset-otp-missing-id\": \"请选择 OTP 配置。\",\n        \"invalidPasswordExistingMessage\": \"无效的旧密码\",\n        \"invalidPasswordBlacklistedMessage\": \"无效密码：该密码已经被拉黑。\",\n        \"invalidPasswordConfirmMessage\": \"确认密码不相同\",\n        \"invalidTotpMessage\": \"无效的验证码\",\n        \"usernameExistsMessage\": \"用户名已被占用\",\n        \"emailExistsMessage\": \"电子邮件已存在。\",\n        \"federatedIdentityExistsMessage\": \"用户 {0} {1} 已存在. 请登录账户管理界面链接账户.\",\n        \"federatedIdentityUnavailableMessage\": \"使用身份提供者 {1} 进行身份验证的用户 {0} 不存在。请联系管理员。\",\n        \"federatedIdentityUnmatchedEssentialClaimMessage\": \"身份提供者签发的 ID 令牌与配置的基本要求不匹配。请联系管理员。\",\n        \"confirmLinkIdpTitle\": \"账户已存在\",\n        \"federatedIdentityConfirmLinkMessage\": \"用户{0} {1} 已存在. 怎么继续?\",\n        \"federatedIdentityConfirmReauthenticateMessage\": \"以 {0} 登录来将 {1} 连接到您的账户\",\n        \"nestedFirstBrokerFlowMessage\": \"{0} 用户 {1} 与任何已知用户都没有关联。\",\n        \"confirmLinkIdpReviewProfile\": \"审查您的信息\",\n        \"confirmLinkIdpContinue\": \"添加到已知账户\",\n        \"configureTotpMessage\": \"您需要设置移动验证码来激活您的账户。\",\n        \"configureBackupCodesMessage\": \"您需要设置备份代码来激活您的账户。\",\n        \"updateProfileMessage\": \"您需要更新您的用户资料来激活您的账户。\",\n        \"updatePasswordMessage\": \"您需要更新您的密码来激活您的账户。\",\n        \"updateEmailMessage\": \"您需要更新您的电子邮箱地址来激活您的账户。\",\n        \"resetPasswordMessage\": \"您需要修改您的密码。\",\n        \"verifyEmailMessage\": \"您需要验证您的电子邮箱来激活您的账户\",\n        \"linkIdpMessage\": \"您需要验证您的电子邮箱来连接到账户{0}.\",\n        \"emailSentMessage\": \"您很快会收到一封关于接下来操作的邮件。\",\n        \"emailSendErrorMessage\": \"无法发送邮件，请稍后再试\",\n        \"accountUpdatedMessage\": \"您的账户已经更新。\",\n        \"accountPasswordUpdatedMessage\": \"您的密码已经被更新。\",\n        \"delegationCompleteHeader\": \"登录成功\",\n        \"delegationCompleteMessage\": \"您可以关闭浏览器窗口，返回控制台应用程序。\",\n        \"delegationFailedHeader\": \"登录失败\",\n        \"delegationFailedMessage\": \"您可以关闭此浏览器窗口，返回控制台应用程序并尝试重新登录。\",\n        \"noAccessMessage\": \"无权限\",\n        \"invalidPasswordMinLengthMessage\": \"无效的密码：最短长度 {0}.\",\n        \"invalidPasswordMaxLengthMessage\": \"无效的密码：最大长度 {0}.\",\n        \"invalidPasswordMinDigitsMessage\": \"无效的密码： 至少包含{0} 个数字\",\n        \"invalidPasswordMinLowerCaseCharsMessage\": \"无效的密码：至少包含 {0} 小写字母.\",\n        \"invalidPasswordMinUpperCaseCharsMessage\": \"无效的密码：至少包含 {0} 大写字母.\",\n        \"invalidPasswordMinSpecialCharsMessage\": \"无效的密码：至少包含 {0} 特殊字符.\",\n        \"invalidPasswordNotUsernameMessage\": \"无效的密码： 不能与用户名相同.\",\n        \"invalidPasswordNotEmailMessage\": \"无效的密码：不能与电子邮箱地址相同。\",\n        \"invalidPasswordRegexPatternMessage\": \"无效的密码： 无法与正则表达式匹配.\",\n        \"invalidPasswordHistoryMessage\": \"无效的密码： 不能与前 {0} 个旧密码相同.\",\n        \"invalidPasswordGenericMessage\": \"无效的密码：新密码不符合密码规则。\",\n        \"failedToProcessResponseMessage\": \"无法处理回复\",\n        \"httpsRequiredMessage\": \"需要HTTPS\",\n        \"realmNotEnabledMessage\": \"域未启用\",\n        \"invalidRequestMessage\": \"非法的请求\",\n        \"successLogout\": \"您已被登出\",\n        \"failedLogout\": \"无法登出\",\n        \"unknownLoginRequesterMessage\": \"未知的登录请求发起方\",\n        \"loginRequesterNotEnabledMessage\": \"登录请求发起方未启用\",\n        \"bearerOnlyMessage\": \"Bearer-only 的应用不允许通过浏览器登录\",\n        \"standardFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用标准流程。\",\n        \"implicitFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用隐式流程。\",\n        \"invalidRedirectUriMessage\": \"无效的跳转链接\",\n        \"unsupportedNameIdFormatMessage\": \"不支持的 NameIDFormat\",\n        \"invalidRequesterMessage\": \"无效的发起者\",\n        \"registrationNotAllowedMessage\": \"不允许注册\",\n        \"resetCredentialNotAllowedMessage\": \"不允许重置凭证\",\n        \"permissionNotApprovedMessage\": \"许可没有批准\",\n        \"noRelayStateInResponseMessage\": \"身份提供者没有返回中继状态信息\",\n        \"insufficientPermissionMessage\": \"权限不足以链接新的身份\",\n        \"couldNotProceedWithAuthenticationRequestMessage\": \"无法与身份提供者处理认证请求\",\n        \"couldNotObtainTokenMessage\": \"未从身份提供者获得令牌\",\n        \"unexpectedErrorRetrievingTokenMessage\": \"从身份提供者获得令牌时遇到未知错误\",\n        \"unexpectedErrorHandlingResponseMessage\": \"从身份提供者获得回复时遇到未知错误\",\n        \"identityProviderAuthenticationFailedMessage\": \"认证失败，无法通过身份提供者认证\",\n        \"couldNotSendAuthenticationRequestMessage\": \"无法向身份提供方发送认证请求\",\n        \"unexpectedErrorHandlingRequestMessage\": \"在处理发向认证提供方的请求时，出现未知错误。\",\n        \"invalidAccessCodeMessage\": \"无效的访问代码\",\n        \"sessionNotActiveMessage\": \"会话不在活动状态\",\n        \"invalidCodeMessage\": \"发生错误，请通过应用程序重新登录。\",\n        \"cookieNotFoundMessage\": \"未找到 cookie。请确保浏览器已启用 cookie。\",\n        \"insufficientLevelOfAuthentication\": \"未满足所请求的身份验证级别。\",\n        \"identityProviderUnexpectedErrorMessage\": \"与身份提供程序进行身份验证时出现意外错误\",\n        \"identityProviderMissingStateMessage\": \"身份提供程序的响应中缺少状态参数。\",\n        \"identityProviderMissingCodeOrErrorMessage\": \"身份提供程序的响应中缺少代码或错误参数。\",\n        \"identityProviderInvalidResponseMessage\": \"身份提供程序的无效响应。\",\n        \"identityProviderInvalidSignatureMessage\": \"身份提供程序响应中的无效签名。\",\n        \"identityProviderNotFoundMessage\": \"找不到具有标识符的身份提供程序。\",\n        \"identityProviderLinkSuccess\": \"您已成功验证电子邮件。请回到原来的浏览器继续登录。\",\n        \"staleCodeMessage\": \"此页面已失效，请返回应用程序并重新登录\",\n        \"realmSupportsNoCredentialsMessage\": \"域不支持任何凭证类型。\",\n        \"credentialSetupRequired\": \"无法登录，需要设置凭证。\",\n        \"identityProviderNotUniqueMessage\": \"该域支持多个身份提供程序。无法确定应使用哪个身份提供程序进行身份验证。\",\n        \"emailVerifiedMessage\": \"您的电子邮件地址已通过验证。\",\n        \"emailVerifiedAlreadyMessage\": \"您的电子邮件地址已被验证通过。\",\n        \"staleEmailVerificationLink\": \"您点击的链接是旧的过期链接，已经不再有效。 也许您已经验证了您的电子邮件。\",\n        \"identityProviderAlreadyLinkedMessage\": \"{0} 返回的联合身份已链接到另一个用户。\",\n        \"confirmAccountLinking\": \"确认将身份提供者 {1} 的账户 {0} 与您的账户链接。\",\n        \"confirmEmailAddressVerification\": \"确认电子邮件地址 {0} 的有效性。\",\n        \"confirmExecutionOfActions\": \"执行以下操作\",\n        \"locale_ar\": \"عربي\",\n        \"locale_ca\": \"Català\",\n        \"locale_cs\": \"Čeština\",\n        \"locale_da\": \"Dansk\",\n        \"locale_de\": \"Deutsch\",\n        \"locale_en\": \"English\",\n        \"locale_es\": \"Español\",\n        \"locale_fi\": \"Suomi\",\n        \"locale_fr\": \"Français\",\n        \"locale_hu\": \"Magyar\",\n        \"locale_it\": \"Italiano\",\n        \"locale_ja\": \"日本語\",\n        \"locale_lt\": \"Lietuvių\",\n        \"locale_lv\": \"Latviešu\",\n        \"locale_nl\": \"Nederlands\",\n        \"locale_no\": \"Norsk\",\n        \"locale_pl\": \"Polski\",\n        \"locale_pt_BR\": \"Português (Brasil)\",\n        \"locale_ru\": \"Русский\",\n        \"locale_sk\": \"Slovenčina\",\n        \"locale_sv\": \"Svenska\",\n        \"locale_th\": \"ไทย\",\n        \"locale_tr\": \"Türkçe\",\n        \"locale_zh-CN\": \"中文简体\",\n        \"backToApplication\": \"&laquo; 回到应用\",\n        \"missingParameterMessage\": \"缺少参数 \\: {0}\",\n        \"clientNotFoundMessage\": \"客户端未找到\",\n        \"clientDisabledMessage\": \"客户端已禁用\",\n        \"invalidParameterMessage\": \"无效的参数 \\: {0}\",\n        \"alreadyLoggedIn\": \"您已经登录。\",\n        \"differentUserAuthenticated\": \"您已经以不同用户 ''{0}'' 的身份在此会话中进行了身份验证。请先注销。\",\n        \"brokerLinkingSessionExpired\": \"已请求与经纪人帐户链接，但当前会话不再有效。\",\n        \"proceedWithAction\": \"&raquo; 点击此处继续\",\n        \"acrNotFulfilled\": \"未满足身份验证要求\",\n        \"requiredAction.CONFIGURE_TOTP\": \"配置OTP\",\n        \"requiredAction.TERMS_AND_CONDITIONS\": \"条款和条件\",\n        \"requiredAction.UPDATE_PASSWORD\": \"更新密码\",\n        \"requiredAction.UPDATE_PROFILE\": \"更新个人资料\",\n        \"requiredAction.VERIFY_EMAIL\": \"验证电子邮箱\",\n        \"requiredAction.CONFIGURE_RECOVERY_AUTHN_CODES\": \"生成恢复代码\",\n        \"requiredAction.webauthn-register-passwordless\": \"Webauthn注册免密码\",\n        \"invalidTokenRequiredActions\": \"链接中包含的必需操作无效\",\n        \"doX509Login\": \"您将被登录为\\：\",\n        \"clientCertificate\": \"X509客户端证书\\：\",\n        \"noCertificate\": \"[No Certificate]\",\n        \"pageNotFound\": \"页面未找到\",\n        \"internalServerError\": \"发生内部服务器错误\",\n        \"console-username\": \"用户名：\",\n        \"console-password\": \"密码：\",\n        \"console-otp\": \"一次性密码：\",\n        \"console-new-password\": \"新密码：\",\n        \"console-confirm-password\": \"确认密码：\",\n        \"console-update-password\": \"需要更新您的密码。\",\n        \"console-verify-email\": \"您需要验证您的电子邮件地址。我们已向 {0} 发送了一封包含验证码的电子邮件。请将此代码输入下面的输入框中。\",\n        \"console-email-code\": \"电子邮件验证码：\",\n        \"console-accept-terms\": \"接受条款？[y/n]：\",\n        \"console-accept\": \"y\",\n        \"openshift.scope.user_info\": \"用户信息\",\n        \"openshift.scope.user_check-access\": \"用户访问信息\",\n        \"openshift.scope.user_full\": \"完全访问\",\n        \"openshift.scope.list-projects\": \"列出项目\",\n        \"saml.post-form.title\": \"身份验证重定向\",\n        \"saml.post-form.message\": \"重定向中，请稍候。\",\n        \"saml.post-form.js-disabled\": \"JavaScript已被禁用。我们强烈建议启用它。点击下面的按钮继续。\",\n        \"saml.artifactResolutionServiceInvalidResponse\": \"无法解析构造。\",\n        \"otp-display-name\": \"验证器应用程序\",\n        \"otp-help-text\": \"从验证器应用输入验证码。\",\n        \"otp-reset-description\": \"应删除哪个OTP配置？\",\n        \"password-display-name\": \"密码\",\n        \"password-help-text\": \"通过输入密码登录。\",\n        \"auth-username-form-display-name\": \"用户名\",\n        \"auth-username-form-help-text\": \"输入用户名已开始登录\",\n        \"auth-username-password-form-display-name\": \"用户名和密码\",\n        \"auth-username-password-form-help-text\": \"输入用户名和密码以登录。\",\n        \"auth-recovery-authn-code-form-display-name\": \"恢复代码\",\n        \"auth-recovery-authn-code-form-help-text\": \"输入先前生成的恢复代码。\",\n        \"auth-recovery-code-info-message\": \"输入指定的恢复代码。\",\n        \"auth-recovery-code-prompt\": \"恢复代码 #{0}\",\n        \"auth-recovery-code-header\": \"使用恢复代码登录\",\n        \"recovery-codes-error-invalid\": \"无效的代码\",\n        \"recovery-code-config-header\": \"恢复代码\",\n        \"recovery-code-config-warning-title\": \"离开此页面后，这些恢复代码将不再显示\",\n        \"recovery-code-config-warning-message\": \"确保打印、下载或将它们复制到密码管理器，并将其保存在安全的地方。取消此设置将从您的帐户中删除这些恢复代码。\",\n        \"recovery-codes-print\": \"打印\",\n        \"recovery-codes-download\": \"下载\",\n        \"recovery-codes-copy\": \"复制\",\n        \"recovery-codes-copied\": \"已复制\",\n        \"recovery-codes-confirmation-message\": \"我已将这些代码保存在安全的地方\",\n        \"recovery-codes-action-complete\": \"完成设置\",\n        \"recovery-codes-action-cancel\": \"取消设置\",\n        \"recovery-codes-download-file-header\": \"将这些恢复代码保存在安全的地方。\",\n        \"recovery-codes-download-file-description\": \"恢复代码是一次性验证码，如果您无法访问您的验证器，可以使用它们登录到您的帐户。\",\n        \"recovery-codes-download-file-date\": \"这些代码生成于\",\n        \"recovery-codes-label-default\": \"恢复代码\",\n        \"webauthn-display-name\": \"安全密钥\",\n        \"webauthn-help-text\": \"使用您的安全密钥登录。\",\n        \"webauthn-passwordless-display-name\": \"安全密钥\",\n        \"webauthn-passwordless-help-text\": \"使用您的安全密钥进行无密码登录。\",\n        \"webauthn-login-title\": \"安全密钥登录\",\n        \"webauthn-registration-title\": \"安全密钥注册\",\n        \"webauthn-available-authenticators\": \"可用的安全密钥\",\n        \"webauthn-unsupported-browser-text\": \"此浏览器不支持 WebAuthn。请尝试其他浏览器或联系管理员。\",\n        \"webauthn-doAuthenticate\": \"使用安全密钥登录\",\n        \"webauthn-createdAt-label\": \"创建于\",\n        \"webauthn-error-title\": \"安全密钥错误\",\n        \"webauthn-error-registration\": \"注册您的安全密钥失败。<br/> {0}\",\n        \"webauthn-error-api-get\": \"通过安全密钥进行身份验证失败。<br/> {0}\",\n        \"webauthn-error-different-user\": \"首次经过身份验证的用户不是通过安全密钥经过身份验证的用户。\",\n        \"webauthn-error-auth-verification\": \"安全密钥身份验证结果无效。<br/> {0}\",\n        \"webauthn-error-register-verification\": \"安全密钥注册结果无效。<br/> {0}\",\n        \"webauthn-error-user-not-found\": \"通过安全密钥进行身份验证的用户未知。\",\n        \"identity-provider-redirector\": \"连接到另一个身份提供者\",\n        \"identity-provider-login-label\": \"或使用以下方式登录\",\n        \"idp-email-verification-display-name\": \"电子邮件验证\",\n        \"idp-email-verification-help-text\": \"通过验证您的电子邮件来链接您的帐户。\",\n        \"idp-username-password-form-display-name\": \"用户名和密码\",\n        \"idp-username-password-form-help-text\": \"通过登录来链接您的帐户。\",\n        \"finalDeletionConfirmation\": \"如果将您的帐户删除，将无法恢复。如果要保留您的帐户，请点击取消。\",\n        \"irreversibleAction\": \"此操作不可逆转\",\n        \"deleteAccountConfirm\": \"删除帐户确认\",\n        \"deletingImplies\": \"删除您的帐户意味着：\",\n        \"errasingData\": \"删除您的所有数据\",\n        \"loggingOutImmediately\": \"立即将您注销\",\n        \"accountUnusable\": \"此帐户将无法再次使用应用程序\",\n        \"userDeletedSuccessfully\": \"用户删除成功\",\n        \"access-denied\": \"访问被拒绝\",\n        \"access-denied-when-idp-auth\": \"使用 {0} 进行身份验证时被拒绝访问\",\n        \"frontchannel-logout.title\": \"正在注销\",\n        \"frontchannel-logout.message\": \"您正在从以下应用程序注销\",\n        \"logoutConfirmTitle\": \"注销\",\n        \"logoutConfirmHeader\": \"您确定要注销吗？\",\n        \"doLogout\": \"注销\",\n        \"readOnlyUsernameMessage\": \"由于用户名是只读的，您无法更新用户名。\"\n    },\n    zh_CN: {\n        setAuthenticatorNameTitle:\"设置密钥名称\",\n        setAuthenticatorNameDescription:\"为该密钥设置一个名称。该名称仅用于你的凭证管理。\",\n        setAuthenticatorNamePlaceHolder:\"默认 Webauthn 密钥\",\n        loginAs: \"登录为\",\n        notYou: \"不是你？\",\n        \"doLogIn\": \"登录\",\n        \"doRegister\": \"注册\",\n        \"doCancel\": \"取消\",\n        \"doSubmit\": \"提交\",\n        \"doBack\": \"返回\",\n        \"doYes\": \"是\",\n        \"doNo\": \"否\",\n        \"doContinue\": \"继续\",\n        \"doIgnore\": \"忽略\",\n        \"doAccept\": \"接受\",\n        \"doDecline\": \"拒绝\",\n        \"doForgotPassword\": \"忘记密码?\",\n        \"doClickHere\": \"点击这里\",\n        \"doImpersonate\": \"模拟\",\n        \"doTryAgain\": \"重试\",\n        \"doTryAnotherWay\": \"尝试其他方法\",\n        \"doConfirmDelete\": \"确认删除\",\n        \"errorDeletingAccount\": \"删除账户时遇到错误\",\n        \"deletingAccountForbidden\": \"您没有权限删除您的账户，请联系管理员。\",\n        \"kerberosNotConfigured\": \"Kerberos 没有配置\",\n        \"kerberosNotConfiguredTitle\": \"Kerberos 没有配置\",\n        \"bypassKerberosDetail\": \"您没有通过 Kerberos 登录 或者您的浏览器没有设置 Kerberos 登录. 请点击继续通过其他途径登录。\",\n        \"kerberosNotSetUp\": \"Kerberos 没有配置，您无法登录。\",\n        \"registerTitle\": \"注册\",\n        \"loginAccountTitle\": \"登录到您的账户\",\n        \"loginTitle\": \"登录到 {0}\",\n        \"loginTitleHtml\": \"{0}\",\n        \"impersonateTitle\": \"{0} 模拟用户\",\n        \"impersonateTitleHtml\": \"<strong>{0}</strong>模拟用户\",\n        \"realmChoice\": \"域\",\n        \"unknownUser\": \"未知用户\",\n        \"loginTotpTitle\": \"配置验证器\",\n        \"loginProfileTitle\": \"更新账户信息\",\n        \"loginIdpReviewProfileTitle\": \"更新账户信息\",\n        \"loginTimeout\": \"您的登录已超时，请重新开始登录。\",\n        \"reauthenticate\": \"请重新授权以继续\",\n        \"oauthGrantTitle\": \"授权给 {0}\",\n        \"oauthGrantTitleHtml\": \"{0}\",\n        \"oauthGrantInformation\": \"通过了解 {0} 将如何处理您的数据，确保您信任 {0} 。\",\n        \"oauthGrantReview\": \"您可以审阅\",\n        \"oauthGrantTos\": \"服务条款。\",\n        \"oauthGrantPolicy\": \"隐私政策。\",\n        \"errorTitle\": \"很抱歉...\",\n        \"errorTitleHtml\": \"我们<strong>很抱歉</strong> ...\",\n        \"emailVerifyTitle\": \"验证电子邮箱地址\",\n        \"emailForgotTitle\": \"忘记密码了吗?\",\n        \"updateEmailTitle\": \"更新点在邮箱\",\n        \"emailUpdateConfirmationSentTitle\": \"已发送确认邮件。\",\n        \"emailUpdateConfirmationSent\": \"已向 {0} 发送了一封确认邮件. 请按照前面的指示来更新电子邮箱。\",\n        \"emailUpdatedTitle\": \"电子邮箱已更新。\",\n        \"emailUpdated\": \"您的账户的电子邮箱已经成功更新为 {0}.\",\n        \"updatePasswordTitle\": \"更新密码\",\n        \"codeSuccessTitle\": \"成功代码\",\n        \"codeErrorTitle\": \"错误代码\\: {0}\",\n        \"displayUnsupported\": \"不支持请求的显示类型\",\n        \"browserRequired\": \"需要浏览器来登录\",\n        \"browserContinue\": \"需要浏览器来完成登录\",\n        \"browserContinuePrompt\": \"打开浏览器以继续？ [y/n]:\",\n        \"browserContinueAnswer\": \"y\",\n        \"usb\": \"USB\",\n        \"nfc\": \"NFC\",\n        \"bluetooth\": \"蓝牙\",\n        \"internal\": \"内部\",\n        \"unknown\": \"未知\",\n        \"termsTitle\": \"条款\",\n        \"termsText\": \"<p>需要确定的条款</p>\",\n        \"termsPlainText\": \"需要确定的条款。\",\n        \"termsAcceptanceRequired\": \"您必须同意我们的的服务条款。\",\n        \"acceptTerms\": \"我同意服务条款\",\n        \"recaptchaFailed\": \"无效的验证码\",\n        \"recaptchaNotConfigured\": \"需要验证码，但是没有配置\",\n        \"consentDenied\": \"许可被拒绝。\",\n        \"noAccount\": \"新用户?\",\n        \"username\": \"用户名\",\n        \"usernameOrEmail\": \"用户名 或 电子邮箱地址\",\n        \"firstName\": \"名\",\n        \"givenName\": \"姓\",\n        \"fullName\": \"全名\",\n        \"lastName\": \"姓\",\n        \"familyName\": \"姓\",\n        \"email\": \"Email\",\n        \"password\": \"密码\",\n        \"passwordConfirm\": \"确认密码\",\n        \"passwordNew\": \"新密码\",\n        \"passwordNewConfirm\": \"确认新密码\",\n        \"hidePassword\": \"隐藏密码\",\n        \"showPassword\": \"显示密码\",\n        \"rememberMe\": \"记住我\",\n        \"authenticatorCode\": \"一次性验证码\",\n        \"address\": \"地址\",\n        \"street\": \"街道\",\n        \"locality\": \"市\",\n        \"region\": \"省，自治区，直辖市\",\n        \"postal_code\": \"邮政编码\",\n        \"country\": \"国家\",\n        \"emailVerified\": \"已验证电子邮件\",\n        \"website\": \"网址\",\n        \"phoneNumber\": \"电话号码\",\n        \"phoneNumberVerified\": \"已验证电话号码\",\n        \"gender\": \"性别\",\n        \"birthday\": \"生日\",\n        \"zoneinfo\": \"时区\",\n        \"gssDelegationCredential\": \"GSS Delegation Credential\",\n        \"logoutOtherSessions\": \"从其他设备中登出\",\n        \"profileScopeConsentText\": \"用户资料\",\n        \"emailScopeConsentText\": \"电子邮箱地址\",\n        \"addressScopeConsentText\": \"地址\",\n        \"phoneScopeConsentText\": \"电话号码\",\n        \"offlineAccessScopeConsentText\": \"离线访问\",\n        \"samlRoleListScopeConsentText\": \"我的角色\",\n        \"rolesScopeConsentText\": \"用户角色\",\n        \"restartLoginTooltip\": \"重新开始登录\",\n        \"loginTotpIntro\": \"您需要设置一个一次性密码生成器来访问您的账户\",\n        \"loginTotpStep1\": \"在您的移动设备中安装以下任意一个应用：\",\n        \"loginTotpStep2\": \"打开该应用来扫描条码\",\n        \"loginTotpStep3\": \"输入该应用提供的一次性代码并点击提交来完成配置。\",\n        \"loginTotpStep3DeviceName\": \"请提供一个设备名称以方便管理您的OTP设备\",\n        \"loginTotpManualStep2\": \"打开应用并输入密钥：\",\n        \"loginTotpManualStep3\": \"如果应用程序允许设置，请使用以下配置值：\",\n        \"loginTotpUnableToScan\": \"无法扫描？\",\n        \"loginTotpScanBarcode\": \"扫描条码？\",\n        \"loginCredential\": \"凭证\",\n        \"loginOtpOneTime\": \"一次性代码\",\n        \"loginTotpType\": \"类型\",\n        \"loginTotpAlgorithm\": \"算法\",\n        \"loginTotpDigits\": \"位数\",\n        \"loginTotpInterval\": \"间隔\",\n        \"loginTotpCounter\": \"计数\",\n        \"loginTotpDeviceName\": \"设备名称\",\n        \"loginTotp.totp\": \"基于时间\",\n        \"loginTotp.hotp\": \"给予计数器\",\n        \"totpAppFreeOTPName\": \"FreeOTP\",\n        \"totpAppGoogleName\": \"Google Authenticator\",\n        \"totpAppMicrosoftAuthenticatorName\": \"Microsoft Authenticator\",\n        \"loginChooseAuthenticator\": \"选择登录方式\",\n        \"oauthGrantRequest\": \"您是否授予这些访问权限?\",\n        \"inResource\": \"in\",\n        \"oauth2DeviceVerificationTitle\": \"设备登录\",\n        \"verifyOAuth2DeviceUserCode\": \"输入设备提供的代码，然后单击提交\",\n        \"oauth2DeviceInvalidUserCodeMessage\": \"错误代码，请重试。\",\n        \"oauth2DeviceExpiredUserCodeMessage\": \"代码已过期。请返回您的设备并尝试重新连接。\",\n        \"oauth2DeviceVerificationCompleteHeader\": \"设备登录成功\",\n        \"oauth2DeviceVerificationCompleteMessage\": \"您可以关闭此浏览器窗口并返回您的设备。\",\n        \"oauth2DeviceVerificationFailedHeader\": \"设备登录失败。\",\n        \"oauth2DeviceVerificationFailedMessage\": \"您可以关闭此浏览器窗口，然后返回到您的设备并尝试重新连接。\",\n        \"oauth2DeviceConsentDeniedMessage\": \"连接设备的同意被拒绝。\",\n        \"oauth2DeviceAuthorizationGrantDisabledMessage\": \"不允许此客户端启动 OAuth 2.0 设备授权授予。该流程已对此客户端禁用。\",\n        \"emailVerifyInstruction1\": \"一封包含验证邮箱具体步骤的邮件已经发送到您的邮箱。\",\n        \"emailVerifyInstruction2\": \"邮箱没有收到验证码?\",\n        \"emailVerifyInstruction3\": \"重新发送电子邮件\",\n        \"emailLinkIdpTitle\": \"链接 {0}\",\n        \"emailLinkIdp1\": \"一封包含链接账户 {0} 和账户 {1} 到账户 {2} 的邮件已经发送到您的邮箱。\",\n        \"emailLinkIdp2\": \"邮箱没有收到验证码邮件?\",\n        \"emailLinkIdp3\": \"重新发送电子邮件\",\n        \"emailLinkIdp4\": \"如果您已经在不同的浏览器中验证了电子邮件\",\n        \"emailLinkIdp5\": \"来继续.\",\n        \"backToLogin\": \"&laquo; 回到登录\",\n        \"emailInstruction\": \"输入您的用户名或邮箱，我们会发送一封带有设置新密码步骤的邮件到您的邮箱。\",\n        \"emailInstructionUsername\": \"输入您的用户名，我们将向您发送如何创建新密码的说明。\",\n        \"copyCodeInstruction\": \"请复制这段验证码并粘贴到您的应用：\",\n        \"pageExpiredTitle\": \"页面已过期\",\n        \"pageExpiredMsg1\": \"来重启登录流程\",\n        \"pageExpiredMsg2\": \"来继续登录流程\",\n        \"personalInfo\": \"个人信息\\:\",\n        \"role_admin\": \"管理员\",\n        \"role_realm-admin\": \"域管理员\",\n        \"role_create-realm\": \"创建域\",\n        \"role_create-client\": \"创建客户端\",\n        \"role_view-realm\": \"查看域\",\n        \"role_view-users\": \"查看用户\",\n        \"role_view-applications\": \"查看应用\",\n        \"role_view-clients\": \"查看客户端\",\n        \"role_view-events\": \"查看时间\",\n        \"role_view-identity-providers\": \"查看身份提供者\",\n        \"role_manage-realm\": \"管理域\",\n        \"role_manage-users\": \"管理用户\",\n        \"role_manage-applications\": \"管理应用\",\n        \"role_manage-identity-providers\": \"管理身份提供者\",\n        \"role_manage-clients\": \"管理客户\",\n        \"role_manage-events\": \"管理事件\",\n        \"role_view-profile\": \"查看用户信息\",\n        \"role_manage-account\": \"管理账户\",\n        \"role_manage-account-links\": \"管理账户链接\",\n        \"role_read-token\": \"读取令牌\",\n        \"role_offline-access\": \"离线访问\",\n        \"client_account\": \"账户\",\n        \"client_account-console\": \"账户控制台\",\n        \"client_security-admin-console\": \"安全管理控制台\",\n        \"client_admin-cli\": \"管理命令行工具\",\n        \"client_realm-management\": \"域管理\",\n        \"client_broker\": \"经纪人\",\n        \"requiredFields\": \"必填字段\",\n        \"invalidUserMessage\": \"无效的用户名或密码。\",\n        \"invalidUsernameMessage\": \"无效的用户名。\",\n        \"invalidUsernameOrEmailMessage\": \"无效的用户名或电子邮箱。\",\n        \"invalidPasswordMessage\": \"无效的密码.\",\n        \"invalidEmailMessage\": \"无效的电子邮件地址\",\n        \"accountDisabledMessage\": \"账户已被禁用，请联系您的管理员。\",\n        \"accountTemporarilyDisabledMessage\": \"账户被临时禁用，请联系管理员或稍后再试。\",\n        \"expiredCodeMessage\": \"登录超时，请重新登录。\",\n        \"expiredActionMessage\": \"操作已过期。请登录后继续。\",\n        \"expiredActionTokenNoSessionMessage\": \"操作已过期。\",\n        \"expiredActionTokenSessionExistsMessage\": \"操作已过期。请重新开始。\",\n        \"sessionLimitExceeded\": \"已有过多会话。\",\n        \"missingFirstNameMessage\": \"请输入名。\",\n        \"missingLastNameMessage\": \"请输入姓。\",\n        \"missingEmailMessage\": \"请输入电子邮箱.\",\n        \"missingUsernameMessage\": \"请输入用户名。\",\n        \"missingPasswordMessage\": \"请输入密码。\",\n        \"missingTotpMessage\": \"请输入验证码\",\n        \"missingTotpDeviceNameMessage\": \"请指定设备名称。\",\n        \"notMatchPasswordMessage\": \"密码不匹配。\",\n        \"error-invalid-value\": \"无效值。\",\n        \"error-invalid-blank\": \"请输入值。\",\n        \"error-empty\": \"请输入值。\",\n        \"error-invalid-length\": \"长度必须在 {1} 和 {2} 之间。\",\n        \"error-invalid-length-too-short\": \"最小长度为 {1}。\",\n        \"error-invalid-length-too-long\": \" 最大长度为 {2}。\",\n        \"error-invalid-email\": \"无效电子邮件地址。\",\n        \"error-invalid-number\": \"无效号码。\",\n        \"error-number-out-of-range\": \"号码必须介于 {1} 和 {2} 之间。\",\n        \"error-number-out-of-range-too-small\": \" 数字的最小值必须是 {1}。\",\n        \"error-number-out-of-range-too-big\": \" 数值的最大值必须为 {2}。\",\n        \"error-pattern-no-match\": \"无效值。\",\n        \"error-invalid-uri\": \"无效 URL。\",\n        \"error-invalid-uri-scheme\": \"无效 URL 方案。\",\n        \"error-invalid-uri-fragment\": \"无效 URL 片段。\",\n        \"error-user-attribute-required\": \"请指定此字段。\",\n        \"error-invalid-date\": \"无效日期。\",\n        \"error-user-attribute-read-only\": \"此字段只读。\",\n        \"error-username-invalid-character\": \"值包含无效字符。\",\n        \"error-person-name-invalid-character\": \"值包含无效字符。\",\n        \"error-reset-otp-missing-id\": \"请选择 OTP 配置。\",\n        \"invalidPasswordExistingMessage\": \"无效的旧密码\",\n        \"invalidPasswordBlacklistedMessage\": \"无效密码：该密码已经被拉黑。\",\n        \"invalidPasswordConfirmMessage\": \"确认密码不相同\",\n        \"invalidTotpMessage\": \"无效的验证码\",\n        \"usernameExistsMessage\": \"用户名已被占用\",\n        \"emailExistsMessage\": \"电子邮件已存在。\",\n        \"federatedIdentityExistsMessage\": \"用户 {0} {1} 已存在. 请登录账户管理界面链接账户.\",\n        \"federatedIdentityUnavailableMessage\": \"使用身份提供者 {1} 进行身份验证的用户 {0} 不存在。请联系管理员。\",\n        \"federatedIdentityUnmatchedEssentialClaimMessage\": \"身份提供者签发的 ID 令牌与配置的基本要求不匹配。请联系管理员。\",\n        \"confirmLinkIdpTitle\": \"账户已存在\",\n        \"federatedIdentityConfirmLinkMessage\": \"用户{0} {1} 已存在. 怎么继续?\",\n        \"federatedIdentityConfirmReauthenticateMessage\": \"以 {0} 登录来将 {1} 连接到您的账户\",\n        \"nestedFirstBrokerFlowMessage\": \"{0} 用户 {1} 与任何已知用户都没有关联。\",\n        \"confirmLinkIdpReviewProfile\": \"审查您的信息\",\n        \"confirmLinkIdpContinue\": \"添加到已知账户\",\n        \"configureTotpMessage\": \"您需要设置移动验证码来激活您的账户。\",\n        \"configureBackupCodesMessage\": \"您需要设置备份代码来激活您的账户。\",\n        \"updateProfileMessage\": \"您需要更新您的用户资料来激活您的账户。\",\n        \"updatePasswordMessage\": \"您需要更新您的密码来激活您的账户。\",\n        \"updateEmailMessage\": \"您需要更新您的电子邮箱地址来激活您的账户。\",\n        \"resetPasswordMessage\": \"您需要修改您的密码。\",\n        \"verifyEmailMessage\": \"您需要验证您的电子邮箱来激活您的账户\",\n        \"linkIdpMessage\": \"您需要验证您的电子邮箱来连接到账户{0}.\",\n        \"emailSentMessage\": \"您很快会收到一封关于接下来操作的邮件。\",\n        \"emailSendErrorMessage\": \"无法发送邮件，请稍后再试\",\n        \"accountUpdatedMessage\": \"您的账户已经更新。\",\n        \"accountPasswordUpdatedMessage\": \"您的密码已经被更新。\",\n        \"delegationCompleteHeader\": \"登录成功\",\n        \"delegationCompleteMessage\": \"您可以关闭浏览器窗口，返回控制台应用程序。\",\n        \"delegationFailedHeader\": \"登录失败\",\n        \"delegationFailedMessage\": \"您可以关闭此浏览器窗口，返回控制台应用程序并尝试重新登录。\",\n        \"noAccessMessage\": \"无权限\",\n        \"invalidPasswordMinLengthMessage\": \"无效的密码：最短长度 {0}.\",\n        \"invalidPasswordMaxLengthMessage\": \"无效的密码：最大长度 {0}.\",\n        \"invalidPasswordMinDigitsMessage\": \"无效的密码： 至少包含{0} 个数字\",\n        \"invalidPasswordMinLowerCaseCharsMessage\": \"无效的密码：至少包含 {0} 小写字母.\",\n        \"invalidPasswordMinUpperCaseCharsMessage\": \"无效的密码：至少包含 {0} 大写字母.\",\n        \"invalidPasswordMinSpecialCharsMessage\": \"无效的密码：至少包含 {0} 特殊字符.\",\n        \"invalidPasswordNotUsernameMessage\": \"无效的密码： 不能与用户名相同.\",\n        \"invalidPasswordNotEmailMessage\": \"无效的密码：不能与电子邮箱地址相同。\",\n        \"invalidPasswordRegexPatternMessage\": \"无效的密码： 无法与正则表达式匹配.\",\n        \"invalidPasswordHistoryMessage\": \"无效的密码： 不能与前 {0} 个旧密码相同.\",\n        \"invalidPasswordGenericMessage\": \"无效的密码：新密码不符合密码规则。\",\n        \"failedToProcessResponseMessage\": \"无法处理回复\",\n        \"httpsRequiredMessage\": \"需要HTTPS\",\n        \"realmNotEnabledMessage\": \"域未启用\",\n        \"invalidRequestMessage\": \"非法的请求\",\n        \"successLogout\": \"您已被登出\",\n        \"failedLogout\": \"无法登出\",\n        \"unknownLoginRequesterMessage\": \"未知的登录请求发起方\",\n        \"loginRequesterNotEnabledMessage\": \"登录请求发起方未启用\",\n        \"bearerOnlyMessage\": \"Bearer-only 的应用不允许通过浏览器登录\",\n        \"standardFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用标准流程。\",\n        \"implicitFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用隐式流程。\",\n        \"invalidRedirectUriMessage\": \"无效的跳转链接\",\n        \"unsupportedNameIdFormatMessage\": \"不支持的 NameIDFormat\",\n        \"invalidRequesterMessage\": \"无效的发起者\",\n        \"registrationNotAllowedMessage\": \"不允许注册\",\n        \"resetCredentialNotAllowedMessage\": \"不允许重置凭证\",\n        \"permissionNotApprovedMessage\": \"许可没有批准\",\n        \"noRelayStateInResponseMessage\": \"身份提供者没有返回中继状态信息\",\n        \"insufficientPermissionMessage\": \"权限不足以链接新的身份\",\n        \"couldNotProceedWithAuthenticationRequestMessage\": \"无法与身份提供者处理认证请求\",\n        \"couldNotObtainTokenMessage\": \"未从身份提供者获得令牌\",\n        \"unexpectedErrorRetrievingTokenMessage\": \"从身份提供者获得令牌时遇到未知错误\",\n        \"unexpectedErrorHandlingResponseMessage\": \"从身份提供者获得回复时遇到未知错误\",\n        \"identityProviderAuthenticationFailedMessage\": \"认证失败，无法通过身份提供者认证\",\n        \"couldNotSendAuthenticationRequestMessage\": \"无法向身份提供方发送认证请求\",\n        \"unexpectedErrorHandlingRequestMessage\": \"在处理发向认证提供方的请求时，出现未知错误。\",\n        \"invalidAccessCodeMessage\": \"无效的访问代码\",\n        \"sessionNotActiveMessage\": \"会话不在活动状态\",\n        \"invalidCodeMessage\": \"发生错误，请通过应用程序重新登录。\",\n        \"cookieNotFoundMessage\": \"未找到 cookie。请确保浏览器已启用 cookie。\",\n        \"insufficientLevelOfAuthentication\": \"未满足所请求的身份验证级别。\",\n        \"identityProviderUnexpectedErrorMessage\": \"与身份提供程序进行身份验证时出现意外错误\",\n        \"identityProviderMissingStateMessage\": \"身份提供程序的响应中缺少状态参数。\",\n        \"identityProviderMissingCodeOrErrorMessage\": \"身份提供程序的响应中缺少代码或错误参数。\",\n        \"identityProviderInvalidResponseMessage\": \"身份提供程序的无效响应。\",\n        \"identityProviderInvalidSignatureMessage\": \"身份提供程序响应中的无效签名。\",\n        \"identityProviderNotFoundMessage\": \"找不到具有标识符的身份提供程序。\",\n        \"identityProviderLinkSuccess\": \"您已成功验证电子邮件。请回到原来的浏览器继续登录。\",\n        \"staleCodeMessage\": \"此页面已失效，请返回应用程序并重新登录\",\n        \"realmSupportsNoCredentialsMessage\": \"域不支持任何凭证类型。\",\n        \"credentialSetupRequired\": \"无法登录，需要设置凭证。\",\n        \"identityProviderNotUniqueMessage\": \"该域支持多个身份提供程序。无法确定应使用哪个身份提供程序进行身份验证。\",\n        \"emailVerifiedMessage\": \"您的电子邮件地址已通过验证。\",\n        \"emailVerifiedAlreadyMessage\": \"您的电子邮件地址已被验证通过。\",\n        \"staleEmailVerificationLink\": \"您点击的链接是旧的过期链接，已经不再有效。 也许您已经验证了您的电子邮件。\",\n        \"identityProviderAlreadyLinkedMessage\": \"{0} 返回的联合身份已链接到另一个用户。\",\n        \"confirmAccountLinking\": \"确认将身份提供者 {1} 的账户 {0} 与您的账户链接。\",\n        \"confirmEmailAddressVerification\": \"确认电子邮件地址 {0} 的有效性。\",\n        \"confirmExecutionOfActions\": \"执行以下操作\",\n        \"locale_ar\": \"عربي\",\n        \"locale_ca\": \"Català\",\n        \"locale_cs\": \"Čeština\",\n        \"locale_da\": \"Dansk\",\n        \"locale_de\": \"Deutsch\",\n        \"locale_en\": \"English\",\n        \"locale_es\": \"Español\",\n        \"locale_fi\": \"Suomi\",\n        \"locale_fr\": \"Français\",\n        \"locale_hu\": \"Magyar\",\n        \"locale_it\": \"Italiano\",\n        \"locale_ja\": \"日本語\",\n        \"locale_lt\": \"Lietuvių\",\n        \"locale_lv\": \"Latviešu\",\n        \"locale_nl\": \"Nederlands\",\n        \"locale_no\": \"Norsk\",\n        \"locale_pl\": \"Polski\",\n        \"locale_pt_BR\": \"Português (Brasil)\",\n        \"locale_ru\": \"Русский\",\n        \"locale_sk\": \"Slovenčina\",\n        \"locale_sv\": \"Svenska\",\n        \"locale_th\": \"ไทย\",\n        \"locale_tr\": \"Türkçe\",\n        \"locale_zh-CN\": \"中文简体\",\n        \"backToApplication\": \"&laquo; 回到应用\",\n        \"missingParameterMessage\": \"缺少参数 \\: {0}\",\n        \"clientNotFoundMessage\": \"客户端未找到\",\n        \"clientDisabledMessage\": \"客户端已禁用\",\n        \"invalidParameterMessage\": \"无效的参数 \\: {0}\",\n        \"alreadyLoggedIn\": \"您已经登录。\",\n        \"differentUserAuthenticated\": \"您已经以不同用户 ''{0}'' 的身份在此会话中进行了身份验证。请先注销。\",\n        \"brokerLinkingSessionExpired\": \"已请求与经纪人帐户链接，但当前会话不再有效。\",\n        \"proceedWithAction\": \"&raquo; 点击此处继续\",\n        \"acrNotFulfilled\": \"未满足身份验证要求\",\n        \"requiredAction.CONFIGURE_TOTP\": \"配置OTP\",\n        \"requiredAction.TERMS_AND_CONDITIONS\": \"条款和条件\",\n        \"requiredAction.UPDATE_PASSWORD\": \"更新密码\",\n        \"requiredAction.UPDATE_PROFILE\": \"更新个人资料\",\n        \"requiredAction.VERIFY_EMAIL\": \"验证电子邮箱\",\n        \"requiredAction.CONFIGURE_RECOVERY_AUTHN_CODES\": \"生成恢复代码\",\n        \"requiredAction.webauthn-register-passwordless\": \"Webauthn注册免密码\",\n        \"invalidTokenRequiredActions\": \"链接中包含的必需操作无效\",\n        \"doX509Login\": \"您将被登录为\\：\",\n        \"clientCertificate\": \"X509客户端证书\\：\",\n        \"noCertificate\": \"[No Certificate]\",\n        \"pageNotFound\": \"页面未找到\",\n        \"internalServerError\": \"发生内部服务器错误\",\n        \"console-username\": \"用户名：\",\n        \"console-password\": \"密码：\",\n        \"console-otp\": \"一次性密码：\",\n        \"console-new-password\": \"新密码：\",\n        \"console-confirm-password\": \"确认密码：\",\n        \"console-update-password\": \"需要更新您的密码。\",\n        \"console-verify-email\": \"您需要验证您的电子邮件地址。我们已向 {0} 发送了一封包含验证码的电子邮件。请将此代码输入下面的输入框中。\",\n        \"console-email-code\": \"电子邮件验证码：\",\n        \"console-accept-terms\": \"接受条款？[y/n]：\",\n        \"console-accept\": \"y\",\n        \"openshift.scope.user_info\": \"用户信息\",\n        \"openshift.scope.user_check-access\": \"用户访问信息\",\n        \"openshift.scope.user_full\": \"完全访问\",\n        \"openshift.scope.list-projects\": \"列出项目\",\n        \"saml.post-form.title\": \"身份验证重定向\",\n        \"saml.post-form.message\": \"重定向中，请稍候。\",\n        \"saml.post-form.js-disabled\": \"JavaScript已被禁用。我们强烈建议启用它。点击下面的按钮继续。\",\n        \"saml.artifactResolutionServiceInvalidResponse\": \"无法解析构造。\",\n        \"otp-display-name\": \"验证器应用程序\",\n        \"otp-help-text\": \"从验证器应用输入验证码。\",\n        \"otp-reset-description\": \"应删除哪个OTP配置？\",\n        \"password-display-name\": \"密码\",\n        \"password-help-text\": \"通过输入密码登录。\",\n        \"auth-username-form-display-name\": \"用户名\",\n        \"auth-username-form-help-text\": \"输入用户名已开始登录\",\n        \"auth-username-password-form-display-name\": \"用户名和密码\",\n        \"auth-username-password-form-help-text\": \"输入用户名和密码以登录。\",\n        \"auth-recovery-authn-code-form-display-name\": \"恢复代码\",\n        \"auth-recovery-authn-code-form-help-text\": \"输入先前生成的恢复代码。\",\n        \"auth-recovery-code-info-message\": \"输入指定的恢复代码。\",\n        \"auth-recovery-code-prompt\": \"恢复代码 #{0}\",\n        \"auth-recovery-code-header\": \"使用恢复代码登录\",\n        \"recovery-codes-error-invalid\": \"无效的代码\",\n        \"recovery-code-config-header\": \"恢复代码\",\n        \"recovery-code-config-warning-title\": \"离开此页面后，这些恢复代码将不再显示\",\n        \"recovery-code-config-warning-message\": \"确保打印、下载或将它们复制到密码管理器，并将其保存在安全的地方。取消此设置将从您的帐户中删除这些恢复代码。\",\n        \"recovery-codes-print\": \"打印\",\n        \"recovery-codes-download\": \"下载\",\n        \"recovery-codes-copy\": \"复制\",\n        \"recovery-codes-copied\": \"已复制\",\n        \"recovery-codes-confirmation-message\": \"我已将这些代码保存在安全的地方\",\n        \"recovery-codes-action-complete\": \"完成设置\",\n        \"recovery-codes-action-cancel\": \"取消设置\",\n        \"recovery-codes-download-file-header\": \"将这些恢复代码保存在安全的地方。\",\n        \"recovery-codes-download-file-description\": \"恢复代码是一次性验证码，如果您无法访问您的验证器，可以使用它们登录到您的帐户。\",\n        \"recovery-codes-download-file-date\": \"这些代码生成于\",\n        \"recovery-codes-label-default\": \"恢复代码\",\n        \"webauthn-display-name\": \"安全密钥\",\n        \"webauthn-help-text\": \"使用您的安全密钥登录。\",\n        \"webauthn-passwordless-display-name\": \"安全密钥\",\n        \"webauthn-passwordless-help-text\": \"使用您的安全密钥进行无密码登录。\",\n        \"webauthn-login-title\": \"安全密钥登录\",\n        \"webauthn-registration-title\": \"安全密钥注册\",\n        \"webauthn-available-authenticators\": \"可用的安全密钥\",\n        \"webauthn-unsupported-browser-text\": \"此浏览器不支持 WebAuthn。请尝试其他浏览器或联系管理员。\",\n        \"webauthn-doAuthenticate\": \"使用安全密钥登录\",\n        \"webauthn-createdAt-label\": \"创建于\",\n        \"webauthn-error-title\": \"安全密钥错误\",\n        \"webauthn-error-registration\": \"注册您的安全密钥失败。<br/> {0}\",\n        \"webauthn-error-api-get\": \"通过安全密钥进行身份验证失败。<br/> {0}\",\n        \"webauthn-error-different-user\": \"首次经过身份验证的用户不是通过安全密钥经过身份验证的用户。\",\n        \"webauthn-error-auth-verification\": \"安全密钥身份验证结果无效。<br/> {0}\",\n        \"webauthn-error-register-verification\": \"安全密钥注册结果无效。<br/> {0}\",\n        \"webauthn-error-user-not-found\": \"通过安全密钥进行身份验证的用户未知。\",\n        \"identity-provider-redirector\": \"连接到另一个身份提供者\",\n        \"identity-provider-login-label\": \"或使用以下方式登录\",\n        \"idp-email-verification-display-name\": \"电子邮件验证\",\n        \"idp-email-verification-help-text\": \"通过验证您的电子邮件来链接您的帐户。\",\n        \"idp-username-password-form-display-name\": \"用户名和密码\",\n        \"idp-username-password-form-help-text\": \"通过登录来链接您的帐户。\",\n        \"finalDeletionConfirmation\": \"如果将您的帐户删除，将无法恢复。如果要保留您的帐户，请点击取消。\",\n        \"irreversibleAction\": \"此操作不可逆转\",\n        \"deleteAccountConfirm\": \"删除帐户确认\",\n        \"deletingImplies\": \"删除您的帐户意味着：\",\n        \"errasingData\": \"删除您的所有数据\",\n        \"loggingOutImmediately\": \"立即将您注销\",\n        \"accountUnusable\": \"此帐户将无法再次使用应用程序\",\n        \"userDeletedSuccessfully\": \"用户删除成功\",\n        \"access-denied\": \"访问被拒绝\",\n        \"access-denied-when-idp-auth\": \"使用 {0} 进行身份验证时被拒绝访问\",\n        \"frontchannel-logout.title\": \"正在注销\",\n        \"frontchannel-logout.message\": \"您正在从以下应用程序注销\",\n        \"logoutConfirmTitle\": \"注销\",\n        \"logoutConfirmHeader\": \"您确定要注销吗？\",\n        \"doLogout\": \"注销\",\n        \"readOnlyUsernameMessage\": \"由于用户名是只读的，您无法更新用户名。\"\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import * as React from \"react\"\n\nimport { cn } from \"lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport {useState} from \"react\";\nimport {assert} from \"keycloakify/tools/assert\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {usePrepareTemplate} from \"keycloakify/lib/usePrepareTemplate\";\nimport {type TemplateProps} from \"keycloakify/login/TemplateProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"./kcContext\";\nimport type {I18n} from \"./i18n\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger\n} from \"components/ui/dropdown-menu\";\nimport {Button, buttonVariants} from \"components/ui/button\";\nimport {cn} from \"lib/utils\";\nimport {Alert, AlertDescription, AlertTitle} from \"../components/ui/alert\";\nimport {CaretLeftIcon, ExclamationTriangleIcon} from \"@radix-ui/react-icons\";\nimport {Card, CardContent, CardTitle} from \"../components/ui/card\";\nimport {Boxes} from \"../components/ui/background-boxes\";\nimport {Meteors} from \"../components/ui/meteors\";\nimport {WavyBackground} from \"../components/ui/wavy-background\";\nimport {BackgroundBeams} from \"../components/ui/background-beams\";\nimport {Tooltip, TooltipContent, TooltipProvider, TooltipTrigger} from \"../components/ui/tooltip\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag} = i18n;\n\n    const {realm, locale, auth, url, message, isAppInitiatedAction} = kcContext;\n\n    const {isReady} = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            // `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n            // `${url.resourcesPath}/css/login.css`\n        ],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": getClassName(\"kcBodyClass\")\n    });\n\n\n    if (!isReady) {\n        return null;\n    }\n    console.log(kcContext)\n    console.log(JSON.stringify(kcContext))\n    return (\n        <div>\n            <div\n                className=\"h-screen relative w-full overflow-hidden flex flex-col items-center justify-center\">\n                {/*<BackgroundBeams/>*/}\n                {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                    <DropdownMenu>\n                        <DropdownMenuTrigger className={cn(\n                            \"z-10\",\n                            buttonVariants({variant: \"ghost\"}),\n                            \"absolute right-4 top-4 md:right-8 md:top-8\"\n                        )}> {labelBySupportedLanguageTag[currentLanguageTag]}</DropdownMenuTrigger>\n                        <DropdownMenuContent>\n                            {locale.supported.map(({languageTag}) => (\n                                <DropdownMenuItem\n                                    onClick={() => changeLocale(languageTag)}>  {labelBySupportedLanguageTag[languageTag]}</DropdownMenuItem>\n                            ))}\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n                )}\n                <div className=\"absolute right-4 top-4 md:left-8 md:top-8 flex items-center z-20\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"mr-2 h-6 w-6\"\n                    >\n                        <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\"/>\n                    </svg>\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}\n                </div>\n                <div\n                    className=\"container relative h-screen flex items-center justify-center md:grid lg:max-w-none lg:px-0\">\n                    <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 items-center\">\n                        <Card id=\"kc-content\" className={\"z-20 px-8 min-w-80\"}>\n                            <CardContent id=\"kc-content-wrapper\"\n                                         className={\"flex flex-col p-0 min-w-[450px] items-center\"}>\n                                {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                                <div className={'flex justify-center'}>\n                                    <h1 className={\"text-2xl font-semibold tracking-tight text-center mt-6 mb-3\"}\n                                        id=\"kc-page-title\">{headerNode}</h1>\n\n                                </div>\n\n                                {auth !== undefined && auth.showUsername && (\n                                    <div className={\"mt-3 mb-3 text-slate-500 w-[350px]\"}>{msg('loginAs')} <span\n                                        className={\"font-bold text-slate-950\"}>{auth?.attemptedUsername}</span>\n                                        {auth.showResetCredentials && (\n                                            <a id=\"reset-login\" href={url.loginRestartFlowUrl}\n                                               className={\"text-sm items-center relative w-auto h-0 inline-block hover:underline ml-1\"}>\n                                                (Not You?)\n                                            </a>\n                                        )}\n                                    </div>\n                                )}\n                                {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                                    <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                        {message.type === \"success\" &&\n                                            <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                        {message.type === \"warning\" &&\n                                            <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                        {message.type === \"error\" &&\n                                            <Alert variant=\"destructive\" className={\"mb-2 w-[350px]\"}>\n                                                <ExclamationTriangleIcon className=\"h-4 w-4\"/>\n                                                <AlertTitle>{msg('errorTitle')}</AlertTitle>\n                                                <AlertDescription>\n                                                    {message.summary}\n                                                </AlertDescription>\n                                            </Alert>\n                                        }\n                                        {message.type === \"info\" &&\n                                            <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                    </div>\n                                )}\n                                {children}\n                                {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent ? (\n                                    <form\n                                        id=\"kc-select-try-another-way-form\"\n                                        action={url.loginAction}\n                                        method=\"post\"\n                                    >\n\n                                        <div>\n                                            <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\"/>\n                                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                            <Button\n                                                id=\"try-another-way\"\n                                                onClick={() => {\n                                                    document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                    return false;\n                                                }}\n                                                variant={\"link\"}\n                                                className={``}\n                                            >\n                                                {msg(\"doTryAnotherWay\")}\n                                            </Button>\n                                        </div>\n\n                                    </form>\n                                ):<div className={\"mb-3\"}/> }\n                                {displayInfo && (\n                                    <>\n                                        {infoNode}\n                                    </>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n        ;\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\n\nexport default function LoginResetPassword(props: PageProps<Extract<KcContext, {\n    pageId: \"login-reset-password.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, realm, auth} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(msgStr(\"emailForgotTitle\"))\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayMessage={false}\n            headerNode={msg(\"emailForgotTitle\")}\n            infoNode={msg(\"emailInstruction\")}\n        >\n            <div className=\"lg:p-8 lg:pb-4 flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {/*<div id=\"kc-form\" className={clsx(realm.password && social.providers !== undefined && getClassName(\"kcContentWrapperClass\"))}>*/}\n                    {/*    <div*/}\n                    <form id=\"kc-reset-password-form\" className={\"grid gap-3 items-center\"} action={url.loginAction}\n                          method=\"post\">\n                        <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n                            <Label htmlFor=\"autoCompleteHelper\"> {!realm.loginWithEmailAllowed\n                                ? msg(\"username\")\n                                : !realm.registrationEmailAsUsername\n                                    ? msg(\"usernameOrEmail\")\n                                    : msg(\"email\")}</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                autoFocus\n                                defaultValue={auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined}\n                            />\n                        </div>\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                            <Button\n                                className={\"w-full\"}\n                                type=\"submit\">\n                                {msgStr(\"doSubmit\")}\n                            </Button>\n                        </div>\n\n                    </form>\n\n\n                    <div className={\"text-sm mt-3 hover:underline text-slate-500\"}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"components/ui/input\";\nimport {Button, buttonVariants} from \"../../components/ui/button\";\nimport {Checkbox} from \"../../components/ui/checkbox\";\nimport {cn} from \"../../lib/utils\";\nimport {Label} from \"../../components/ui/label\";\nimport {Separator} from \"../../components/ui/separator\";\nimport {GitHubLogoIcon} from '@radix-ui/react-icons'\nimport {\n    IconBrandBitbucket,\n    IconBrandFacebookFilled, IconBrandGithub, IconBrandGitlab,\n    IconBrandGoogle, IconBrandInstagram, IconBrandLinkedin, IconBrandOpenSource, IconBrandPaypal,\n    IconBrandStackoverflow,\n    IconBrandTwitter,\n    IconBrandWindows\n} from \"@tabler/icons-react\";\nimport {useTitle} from \"react-use\";\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\nconst prividerIdIconMap = {\n    \"microsoft\": <IconBrandWindows/>,\n    \"google\": <IconBrandGoogle/>,\n    \"facebook\": <IconBrandFacebookFilled/>,\n    \"twitter\": <IconBrandTwitter/>,\n    \"stackoverflow\": <IconBrandStackoverflow/>,\n    \"gitlab\": <IconBrandGitlab/>,\n    \"paypal\": <IconBrandPaypal/>,\n    \"instagram\": <IconBrandInstagram/>,\n    \"linkedin\": <IconBrandLinkedin/>,\n    \"github\": <IconBrandGithub/>,\n    \"bitbucket\": <IconBrandBitbucket/>,\n    \"openshift\": <IconBrandOpenSource/>\n}\n\nexport default function LoginUsername(props: PageProps<Extract<KcContext, { pageId: \"login-username.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {social, realm, url, usernameHidden, login, auth, registrationDisabled} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(i18n.msgStr(\"loginTitle\", kcContext.realm.displayName))\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        //NOTE: Even if we login with email Keycloak expect username and password in\n        //the POST request.\n        formElement.querySelector(\"input[name='email']\")?.setAttribute(\"name\", \"username\");\n\n        formElement.submit();\n    });\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayInfo={social.displayInfo}\n            displayWide={realm.password && social.providers !== undefined}\n            headerNode={msg(\"doLogIn\")}\n            infoNode={\n                realm.password &&\n                realm.registrationAllowed &&\n                !registrationDisabled && (\n                    <div id=\"kc-registration\" className={\"justify-center w-full items-center text-center mb-3\"}>\n                        <Separator className={\"mb-1 w-full mt-1\"}/>\n                        <span className={\"text-slate-500 text-sm\"}>\n                            {msg(\"noAccount\")} {' '}\n                            <a tabIndex={6} href={url.registrationUrl} className={\"text-slate-950\"}>\n                                {msg(\"doRegister\")}\n                            </a>\n                        </span>\n                    </div>\n                )\n            }\n        >\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {realm.password && (\n                        <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"\n                              className={\"flex flex-col gap-3 items-center w-full min-w-[350px]\"}>\n                            <div className={\"w-full flex flex-col items-center justify-center\"}>\n                                {!usernameHidden &&\n                                    (() => {\n                                        const label = !realm.loginWithEmailAllowed\n                                            ? \"username\"\n                                            : realm.registrationEmailAsUsername\n                                                ? \"email\"\n                                                : \"usernameOrEmail\";\n\n                                        const autoCompleteHelper: typeof label = label === \"usernameOrEmail\" ? \"username\" : label;\n\n                                        return (\n                                            <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n                                                <Label htmlFor={autoCompleteHelper}\n                                                       className={getClassName(\"kcLabelClass\")}>\n                                                    {msg(label)}\n                                                </Label>\n                                                <Input\n                                                    tabIndex={1}\n                                                    id={autoCompleteHelper}\n                                                    className={getClassName(\"kcInputClass\")}\n                                                    //NOTE: This is used by Google Chrome auto fill so we use it to tell\n                                                    //the browser how to pre fill the form but before submit we put it back\n                                                    //to username because it is what keycloak expects.\n                                                    name={autoCompleteHelper}\n                                                    defaultValue={login.username ?? \"\"}\n                                                    type=\"text\"\n                                                    autoFocus={true}\n                                                    autoComplete=\"off\"\n                                                />\n                                            </div>\n                                        );\n                                    })()}\n                            </div>\n                            <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                                <div id=\"kc-form-options\">\n                                    {realm.rememberMe && !usernameHidden && (\n                                        <div className=\"flex items-center space-x-2\">\n                                            <Checkbox\n                                                tabIndex={3}\n                                                id=\"rememberMe\"\n                                                name=\"rememberMe\"\n                                                defaultChecked={login.rememberMe === \"on\"}\n                                            />\n                                            <label\n                                                htmlFor=\"rememberMe\"\n                                                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                                            >\n                                                {msg(\"rememberMe\")}\n                                            </label>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                            <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                                <Button\n                                    tabIndex={4}\n                                    name=\"login\"\n                                    id=\"kc-login\"\n                                    type=\"submit\"\n                                    className={\"min-w-[200px]\"}\n                                    disabled={isLoginButtonDisabled}\n                                >\n                                    {msgStr(\"doLogIn\")}\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </div>\n                {realm.password && social.providers !== undefined && (\n                    <div\n                        id=\"kc-social-providers\"\n                        className={'flex gap-4 w-auto'}\n                    >\n                        <Separator orientation=\"vertical\"/>\n                        <div\n                            className={\"grid flex-col flex-wrap grid-cols-2 gap-2 w-[320px]\"}\n                        >\n                            {social.providers.map(p => (\n                                <Button onClick={() => window.open(p.loginUrl)} id={`zocial-${p.alias}`}\n                                        key={p.providerId}\n                                        className={`${buttonVariants({variant: \"secondary\"})} w-[160px] flex justify-start gap-2`}>\n                                    {/*@ts-ignore*/}\n                                    {prividerIdIconMap[p.providerId]}\n                                    <span>{p.displayName}</span>\n                                </Button>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n\n        </Template>\n    );\n}\n","import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { FormEventHandler } from \"react\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\nexport default function LoginPassword(props: PageProps<Extract<KcContext, { \"pageId\": \"login-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { realm, url, login } = kcContext;\n\n    const { msg, msgStr } = i18n;\n    useTitle(i18n.msgStr(\"loginTitle\", kcContext.realm.displayName))\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        formElement.submit();\n    });\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"doLogIn\")}>\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}>\n                    <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"  className={\"grid gap-3 items-center\"}>\n                        <div className={getClassName(\"kcFormGroupClass\")}>\n                            <Label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"password\")}\n                            </Label>\n                            <Input\n                                tabIndex={2}\n                                id=\"password\"\n                                className={getClassName(\"kcInputClass\")}\n                                name=\"password\"\n                                type=\"password\"\n                                autoFocus={true}\n                                autoComplete=\"on\"\n                                defaultValue={login.password ?? \"\"}\n                            />\n                            {realm.resetPasswordAllowed && (\n                                <span className={\"text-sm mt-1 text-slate-500 mb-3\"}>\n                                            <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                                {msg(\"doForgotPassword\")}\n                                            </a>\n                                        </span>\n                            )}\n                        </div>\n                        <div id=\"kc-form-buttons\" >\n                            <Button\n                                tabIndex={4}\n                                className={\"w-full\"}\n                                name=\"login\"\n                                id=\"kc-login\"\n                                type=\"submit\"\n                                disabled={isLoginButtonDisabled}\n                            >\n                                {msgStr(\"doLogIn\")}\n                            </Button>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </Template>\n    );\n}","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import React, {ReactNode, useEffect, useRef, useState} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {base64url} from \"rfc4648\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {assert} from \"tsafe/assert\";\nimport {is} from \"tsafe/is\";\nimport {typeGuard} from \"tsafe/typeGuard\";\nimport {Button} from \"../../components/ui/button\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogDescription,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle\n} from \"../../components/ui/dialog\";\nimport {Label} from \"../../components/ui/label\";\nimport {Input} from \"../../components/ui/input\";\nimport {useTitle} from \"react-use\";\n\n\n\nexport default function WebauthnRegister(props: PageProps<Extract<KcContext, {\n    pageId: \"webauthn-register.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {\n        url,\n        attestationConveyancePrefrence,\n        authenticatorAttachment,\n        challenge,\n        createTimeout,\n        excludeCredentialsId,\n        requireResidentKey,\n        userid,\n        username,\n        signatureAlgorithms,\n        userVerificationRequirement,\n        rpEntityName,\n        rpId,\n        isSetRetry,\n        isAppInitiatedAction\n    } = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(msgStr('webauthn-registration-title'))\n    const [clientDataJSON, setClientDataJSON] = useState(\"\");\n    const [attestationObject, setAttestationObject] = useState(\"\");\n    const [publicKeyCredentialId, setPublicKeyCredentialId] = useState(\"\");\n    const [authenticatorLabel, setAuthenticatorLabel] = useState(\"\");\n    const [transports, setTransports] = useState<string[] | string>(\"\");\n    const [error, setError] = useState(\"\");\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [isReadyToSubmit, setIsReadyToSubmit] = useState(false);\n\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n\n    const registerSecurityKey = useConstCallback(async () => {\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(\"WebAuthn is not supported in this browser.\");\n            if (formElementRef.current) {\n                formElementRef.current.submit();\n            }\n            return;\n        }\n\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = getPubKeyCredParams(signatureAlgorithms);\n        let rp: { name: string; id?: string } = {name: rpEntityName, id: rpId};\n        let publicKey: PublicKeyCredentialCreationOptions = {\n            challenge: base64url.parse(challenge, {loose: true}),\n            rp: rp,\n            user: {\n                id: base64url.parse(userid, {loose: true}),\n                name: username,\n                displayName: username\n            },\n            pubKeyCredParams: pubKeyCredParams as PublicKeyCredentialParameters[],\n            attestation:\n                attestationConveyancePrefrence !== \"not specified\" ? (attestationConveyancePrefrence as AttestationConveyancePreference) : undefined\n        };\n        let authenticatorSelection = {};\n        let isAuthenticatorSelectionSet = false;\n\n        if (authenticatorAttachment !== \"not specified\") {\n            authenticatorSelection = {authenticatorAttachment: authenticatorAttachment};\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (requireResidentKey !== \"not specified\") {\n            if (requireResidentKey === \"Yes\") {\n                authenticatorSelection = {...authenticatorSelection, requireResidentKey: true};\n            } else {\n                authenticatorSelection = {...authenticatorSelection, requireResidentKey: false};\n            }\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (userVerificationRequirement !== \"not specified\") {\n            authenticatorSelection = {...authenticatorSelection, userVerification: userVerificationRequirement};\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (isAuthenticatorSelectionSet) {\n            publicKey = {...publicKey, authenticatorSelection: authenticatorSelection};\n        }\n\n        if (createTimeout !== 0) {\n            publicKey = {...publicKey, timeout: createTimeout * 1000};\n        }\n        let excludeCredentials = getExcludeCredentials(excludeCredentialsId);\n        if (excludeCredentials && excludeCredentials.length !== 0) {\n            publicKey = {...publicKey, excludeCredentials: excludeCredentials};\n        }\n        try {\n            const result = await navigator.credentials.create({publicKey});\n\n            if (!result || result.type !== \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n\n            const response: AuthenticatorAttestationResponse = result.response as unknown as AuthenticatorAttestationResponse;\n\n            const clientDataJSON = response.clientDataJSON;\n            const attestationObject = response.attestationObject;\n\n            assert(\n                typeGuard<AuthenticatorAttestationResponse>(response, response.attestationObject instanceof ArrayBuffer),\n                \"response not an AuthenticatorAttestationResponse\"\n            );\n\n            setClientDataJSON(base64url.stringify(new Uint8Array(clientDataJSON), {\"pad\": false}));\n            setAttestationObject(base64url.stringify(new Uint8Array(attestationObject), {pad: false}));\n            setPublicKeyCredentialId(base64url.stringify(new Uint8Array(result.rawId), {pad: false}));\n\n            //@ts-ignore\n            if (typeof response.getTransports === \"function\") {\n                //@ts-ignore\n                let transports = response.getTransports();\n                if (transports) {\n                    setTransports(getTransportsAsString(transports));\n                }\n            } else {\n                console.log(\"Your browser is not able to recognize supported transport media for the authenticator.\");\n            }\n\n\n            setDialogOpen(true);\n        } catch (err) {\n            setError(String(err));\n            setIsReadyToSubmit(true);\n        }\n\n    });\n    const onFinishNameInput = () => {\n        if (!Boolean(authenticatorLabel)) {\n            setAuthenticatorLabel(msgStr(\"setAuthenticatorNamePlaceHolder\"))\n        }\n        setDialogOpen(false)\n        setIsReadyToSubmit(true);\n    }\n    const getPubKeyCredParams = (sigAlgList: number[]): PublicKeyCredentialParameters[] => {\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = [];\n        if (signatureAlgorithms.length === 0) {\n            let alg: COSEAlgorithmIdentifier = -7;\n            let type: PublicKeyCredentialType = \"public-key\";\n            let object: PublicKeyCredentialParameters = {type, alg};\n            pubKeyCredParams.push(object);\n            return pubKeyCredParams;\n        }\n        for (let sigAlg of sigAlgList) {\n            pubKeyCredParams.push({type: \"public-key\", alg: sigAlg});\n        }\n        return pubKeyCredParams;\n    };\n\n    const getExcludeCredentials = (excludeCredentialIds: string) => {\n        let excludeCredentials: PublicKeyCredentialDescriptor[] = [];\n        if (!excludeCredentialIds) {\n            return excludeCredentials;\n        }\n        let excludeCredentialIdsList = excludeCredentialIds.split(\",\");\n        for (let excludeCredentialId of excludeCredentialIdsList) {\n            excludeCredentials.push({type: \"public-key\", id: base64url.parse(excludeCredentialId, {loose: true})});\n        }\n    };\n\n    const getTransportsAsString = (transportsList: string | string[]): string => {\n        if (transportsList === \"\" || transportsList.constructor !== Array) return \"\";\n\n        let transportsString = \"\";\n\n        for (let i = 0; i < transportsList.length; i++) {\n            transportsString += transportsList[i] + \",\";\n        }\n\n        return transportsString.slice(0, -1);\n    };\n\n    useEffect(() => {\n        if (isReadyToSubmit) {\n            submitForm();\n            setIsReadyToSubmit(false); // Reset the flag after submission\n        }\n    }, [isReadyToSubmit]);\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            headerNode={\n                <>\n                    <span className={getClassName(\"kcWebAuthnDefaultIcon\")} style={{marginRight: \"5px\"}}></span>\n                    {msg(\"webauthn-registration-title\")}\n                </>\n            }\n        >\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] gap-2 mb-2`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form\n                        action={url.loginAction}\n                        ref={formElementRef}\n                        method=\"post\"\n                    >\n                        <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\" value={clientDataJSON}/>\n                        <input type=\"hidden\" id=\"attestationObject\" name=\"attestationObject\" value={attestationObject}/>\n                        <input type=\"hidden\" id=\"publicKeyCredentialId\" name=\"publicKeyCredentialId\"\n                               value={publicKeyCredentialId}/>\n                        <input type=\"hidden\" id=\"authenticatorLabel\" name=\"authenticatorLabel\"\n                               value={authenticatorLabel}/>\n                        <input type=\"hidden\" id=\"transports\" name=\"transports\" value={transports}/>\n                        <input type=\"hidden\" id=\"error\" name=\"error\" value={error}/>\n                    </form>\n                    <Button\n                        type=\"button\"\n                        onClick={registerSecurityKey}\n                        id=\"registerWebAuthn\"\n                    >\n                        {msgStr(\"doRegister\")}\n                    </Button>\n                    {!isSetRetry && isAppInitiatedAction && (\n                        <form action={url.loginAction}>\n                            <Button\n                                type=\"submit\"\n                                id=\"cancelWebAuthnAIA\"\n                                name=\"cancel-aia\"\n                                value=\"true\"\n                                variant={\"ghost\"}\n                                className={\"w-full\"}\n                            >\n                                {msg(\"doCancel\")}\n                            </Button>\n                        </form>\n                    )}\n                </div>\n                <Dialog open={dialogOpen}>\n                    <DialogContent>\n                        <DialogHeader>\n                            <DialogTitle>{msgStr(\"setAuthenticatorNameTitle\")}</DialogTitle>\n                            <DialogDescription>\n                                {msgStr(\"setAuthenticatorNameDescription\")}\n                            </DialogDescription>\n                        </DialogHeader>\n                        <div className=\"grid gap-4 py-4\">\n                            <div className=\"grid grid-cols-4 items-center gap-4\">\n                                <Input id=\"name\" className=\"col-span-3\"\n                                       placeholder={msgStr('setAuthenticatorNamePlaceHolder')}\n                                       value={authenticatorLabel} onChange={(event) => {\n                                    setAuthenticatorLabel(event.target.value)\n                                }}/>\n                            </div>\n                        </div>\n                        <DialogFooter>\n                            <Button onClick={onFinishNameInput}>Confirm</Button>\n                        </DialogFooter>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </Template>\n    );\n}\n","import {useEffect, useRef, useState} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport type {MessageKey} from \"keycloakify/login/i18n/i18n\";\nimport {base64url} from \"rfc4648\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {assert} from \"tsafe/assert\";\nimport {is} from \"tsafe/is\";\nimport {typeGuard} from \"tsafe/typeGuard\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\nexport default function WebauthnAuthenticate(props: PageProps<Extract<KcContext, {\n    pageId: \"webauthn-authenticate.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {url} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(i18n.msgStr(\"loginTitle\", kcContext.realm.displayName))\n    const {authenticators, challenge, shouldDisplayAuthenticators, userVerification, rpId} = kcContext;\n    const createTimeout = Number(kcContext.createTimeout);\n    const isUserIdentified = kcContext.isUserIdentified == \"true\";\n\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [error, setError] = useState(\"\");\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n    const [webauthnResult, setWebauthnResult] = useState({} as any)\n    useEffect(() => {\n        if (error != null && webauthnResult.authenticatorData) {\n            console.log(webauthnResult)\n            submitForm()\n        }\n    }, [webauthnResult])\n    const webAuthnAuthenticate = useConstCallback(async () => {\n        debugger\n        // const allowCredentials = authenticators.authenticators.map(\n        //     authenticator =>\n        //         ({\n        //             id: base64url.parse(authenticator.credentialId, {loose: true}),\n        //             type: \"public-key\"\n        //         } as PublicKeyCredentialDescriptor)\n        // );\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(msgStr(\"webauthn-unsupported-browser-text\"));\n            submitForm();\n            return;\n        }\n\n\n        const publicKey: PublicKeyCredentialRequestOptions = {\n            rpId,\n            challenge: base64url.parse(challenge, {loose: true})\n        };\n\n        if (createTimeout !== 0) {\n            publicKey.timeout = createTimeout * 1000;\n        }\n\n        if (userVerification !== \"not specified\") {\n            publicKey.userVerification = userVerification;\n        }\n\n        try {\n            const result = await navigator.credentials.get({publicKey});\n            if (!result || result.type != \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n            if (!(\"authenticatorData\" in result.response)) {\n                return;\n            }\n            const response = result.response;\n\n            const clientDataJSON = response.clientDataJSON;\n\n\n            assert(\n                //@ts-ignore\n                typeGuard<AuthenticatorAssertionResponse>(response, \"signature\" in response && response.authenticatorData instanceof ArrayBuffer),\n                \"response not an AuthenticatorAssertionResponse\"\n            );\n\n            const authenticatorData = response.authenticatorData;\n            const signature = response.signature;\n            setWebauthnResult({\n                clientDataJSON: base64url.stringify(new Uint8Array(clientDataJSON), {\"pad\": false}),\n                authenticatorData: base64url.stringify(new Uint8Array(authenticatorData), {\"pad\": false}),\n                signature: base64url.stringify(new Uint8Array(signature), {\"pad\": false}),\n                credentialId: result.id,\n                userHandle: base64url.stringify(new Uint8Array(response.userHandle!), {\"pad\": false})\n            })\n        } catch (err) {\n            setError(String(err));\n        }\n    });\n\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"webauthn-login-title\")} >\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px]`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form id=\"webauth\" action={url.loginAction} ref={formElementRef} method=\"post\">\n                        <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\"\n                               value={webauthnResult.clientDataJSON}/>\n                        <input type=\"hidden\" id=\"authenticatorData\" name=\"authenticatorData\"\n                               value={webauthnResult.authenticatorData}/>\n                        <input type=\"hidden\" id=\"signature\" name=\"signature\" value={webauthnResult.signature}/>\n                        <input type=\"hidden\" id=\"credentialId\" name=\"credentialId\" value={webauthnResult.credentialId}/>\n                        <input type=\"hidden\" id=\"userHandle\" name=\"userHandle\" value={webauthnResult.userHandle}/>\n                        <input type=\"hidden\" id=\"error\" name=\"error\" value={webauthnResult.error}/>\n                    </form>\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        {authenticators &&\n                            (() => (\n                                <form id=\"authn_select\" className={getClassName(\"kcFormClass\")}>\n                                    {authenticators.authenticators.map(authenticator => (\n                                        <input type=\"hidden\" name=\"authn_use_chk\" value={authenticator.credentialId}\n                                               key={authenticator.credentialId}/>\n                                    ))}\n                                </form>\n                            ))()}\n                        {authenticators &&\n                            shouldDisplayAuthenticators &&\n                            (() => (\n                                <>\n                                    {authenticators.authenticators.length > 1 && (\n                                        <p className={getClassName(\"kcSelectAuthListItemTitle\")}>{msg(\"webauthn-available-authenticators\")}</p>\n                                    )}\n                                    <div className={getClassName(\"kcFormClass\")}>\n                                        {authenticators.authenticators.map(authenticator => (\n                                            <div id=\"kc-webauthn-authenticator\"\n                                                 className={getClassName(\"kcSelectAuthListItemClass\")}>\n                                                <div className={getClassName(\"kcSelectAuthListItemIconClass\")}>\n                                                    <i\n                                                        className={clsx(\n                                                            (() => {\n                                                                const className = getClassName(authenticator.transports.iconClass as any);\n                                                                return className.includes(\" \")\n                                                                    ? className\n                                                                    : [className, getClassName(\"kcWebAuthnDefaultIcon\")];\n                                                            })(),\n                                                            getClassName(\"kcSelectAuthListItemIconPropertyClass\")\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemBodyClass\")}>\n                                                    <div\n                                                        id=\"kc-webauthn-authenticator-label\"\n                                                        className={getClassName(\"kcSelectAuthListItemHeadingClass\")}\n                                                    >\n                                                        {authenticator.label}\n                                                    </div>\n\n                                                    {authenticator.transports && authenticator.transports.displayNameProperties.length && (\n                                                        <div\n                                                            id=\"kc-webauthn-authenticator-transport\"\n                                                            className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}\n                                                        >\n                                                            {authenticator.transports.displayNameProperties.map(\n                                                                (transport: MessageKey, index: number) => (\n                                                                    <>\n                                                                        <span>{msg(transport)}</span>\n                                                                        {index < authenticator.transports.displayNameProperties.length - 1 && (\n                                                                            <span>{\", \"}</span>\n                                                                        )}\n                                                                    </>\n                                                                )\n                                                            )}\n                                                        </div>\n                                                    )}\n\n                                                    <div\n                                                        className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}>\n                                                    <span\n                                                        id=\"kc-webauthn-authenticator-created-label\">{msg(\"webauthn-createdAt-label\")}</span>\n                                                        <span\n                                                            id=\"kc-webauthn-authenticator-created\">{authenticator.createdAt}</span>\n                                                    </div>\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemFillClass\")}/>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </>\n                            ))()}\n                        <div id=\"kc-form-buttons\">\n                            <Button\n                                id=\"authenticateWebAuthnButton\"\n                                type=\"button\"\n                                onClick={webAuthnAuthenticate}\n                                autoFocus={true}\n                                className={\"w-full\"}\n                            >\n                                {msgStr(\"webauthn-doAuthenticate\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"keycloakify/login/kcContext\";\nimport type {I18n} from \"keycloakify/login/i18n\";\nimport {MouseEvent, useRef} from \"react\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport {Card, CardContent, CardTitle} from \"../../components/ui/card\";\nimport {IconPassword, IconKey, IconNumbers, IconLock, IconUser} from '@tabler/icons-react'\n\n\nconst IconMap = {\n    \"kcAuthenticatorPasswordClass\": <IconPassword/>,\n    \"kcAuthenticatorOTPClass\": <IconNumbers/>,\n    kcAuthenticatorWebAuthnClass: <IconKey/>,\n    kcAuthenticatorWebAuthnPasswordlessClass: <IconKey/>,\n    \"kcAuthenticatorDefaultClass\": <IconUser/>\n\n}\nexport default function SelectAuthenticator(props: PageProps<Extract<KcContext, {\n    pageId: \"select-authenticator.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n    const {url, auth} = kcContext;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n    const {msg} = i18n;\n\n    const selectCredentialsForm = useRef<HTMLFormElement>(null);\n    const authExecIdInput = useRef<HTMLInputElement>(null);\n\n    const submitForm = useConstCallback(() => {\n        selectCredentialsForm.current?.submit();\n    });\n\n    const onSelectedAuthenticator = useConstCallback((event: MouseEvent<HTMLDivElement>) => {\n        const divElement = event.currentTarget;\n        const authExecId = divElement.dataset.authExecId;\n\n        if (!authExecIdInput.current || !authExecId) {\n            return;\n        }\n\n        authExecIdInput.current.value = authExecId;\n        submitForm();\n    });\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"loginChooseAuthenticator\")}>\n            <div className=\"flex gap-4 mb-3\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[450px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form\n                        id=\"kc-select-credential-form\"\n                        className={getClassName(\"kcFormClass\")}\n                        ref={selectCredentialsForm}\n                        action={url.loginAction}\n                        method=\"post\"\n                    >\n                        <div className={\"flex flex-col gap-2\"}>\n                            {auth.authenticationSelections.map((authenticationSelection, index) => (\n                                <Card key={index} className={'p-3 hover:bg-slate-100 cursor-pointer transition-colors'}\n                                      onClick={onSelectedAuthenticator}\n                                      data-auth-exec-id={authenticationSelection.authExecId}>\n                                    <CardTitle className={\"flex items-center gap-2\"}>\n                                        <>\n                                            {/*@ts-ignore*/}\n                                            {IconMap[authenticationSelection.iconCssClass]}{msg(authenticationSelection.displayName)}\n                                        </>\n                                    </CardTitle>\n                                    <CardContent className={\"p-0\"}>\n                                        {msg(authenticationSelection.helpText)}\n                                    </CardContent>\n                                </Card>\n                            ))}\n                            <input type=\"hidden\" id=\"authexec-hidden-input\" name=\"authenticationExecution\"\n                                   ref={authExecIdInput}/>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {useTitle} from \"react-use\";\n\nexport default function Error(props: PageProps<Extract<KcContext, { pageId: \"error.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {message, client} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(msgStr(\"errorTitle\"))\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"errorTitle\")}>\n            <div id=\"kc-error-message\">\n                <p className=\"instruction\">{message.summary}</p>\n                {client !== undefined && client.baseUrl !== undefined && (\n                    <p>\n                        <a id=\"backToApplication\" href={client.baseUrl}>\n                            {msg(\"backToApplication\")}\n                        </a>\n                    </p>\n                )}\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Alert, AlertDescription, AlertTitle} from \"../../components/ui/alert\";\nimport {ExclamationTriangleIcon} from \"@radix-ui/react-icons\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\nexport default function WebauthnError(props: PageProps<Extract<KcContext, { pageId: \"webauthn-error.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {message, client} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(msgStr(\"webauthn-error-title\"))\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"errorTitle\")}>\n            <div className={`mx-auto flex w-full flex-col justify-center sm:w-[450px] gap-2 mb-2 items-center`}\n                 id=\"kc-form-wrapper\"\n                // className={clsx(\n                //     realm.password &&\n                //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                // )}\n            >\n                <Alert variant=\"destructive\" className={\"mb-2 w-full\"}>\n                    <ExclamationTriangleIcon className=\"h-4 w-4\"/>\n                    {/*@ts-ignore*/}\n                    <AlertDescription dangerouslySetInnerHTML={{__html: message.summary}}>\n                    </AlertDescription>\n                </Alert>\n\n                <form id=\"kc-error-credential-form\"\n                      action={kcContext.url.loginAction}\n                      method=\"post\">\n                    <input type=\"hidden\" id=\"executionValue\" name=\"authenticationExecution\" value={\"retry\"}/>\n                    <input type=\"hidden\" id=\"isSetRetry\" name=\"isSetRetry\" value={kcContext.execution}/>\n                    <input type=\"hidden\" id=\"try-again\" name=\"try-again\"/>\n                    <Button className={\"min-w-[200px]\"} type={\"submit\"}>\n                        {msg(\"doTryAgain\")}\n                    </Button>\n                </form>\n\n\n                {kcContext.isAppInitiatedAction &&\n                    <form action={kcContext.url.loginAction}\n                          method=\"post\">\n                        <Button type=\"submit\"\n                                className={\"min-w-[200px]\"}\n                                variant={\"ghost\"}\n                                id=\"cancelWebAuthnAIA\" name=\"cancel-aia\" value=\"true\">{msg(\"doCancel\")}\n                        </Button>\n                    </form>\n                }\n                {/*{client !== undefined && client.baseUrl !== undefined && (*/}\n                {/*    <p>*/}\n                {/*        <a id=\"backToApplication\" href={client.baseUrl}>*/}\n                {/*            {msg(\"backToApplication\")}*/}\n                {/*        </a>*/}\n                {/*    </p>*/}\n                {/*)}*/}\n            </div>\n        </Template>\n    );\n}","import {clsx} from \"keycloakify/tools/clsx\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {MessageKey} from \"keycloakify/login/i18n/i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Button} from \"../../components/ui/button\";\nimport {Label} from \"../../components/ui/label\";\nimport {Separator} from \"../../components/ui/separator\";\nimport {useTitle} from \"react-use\";\n\nexport default function LoginConfigTotp(props: PageProps<Extract<KcContext, {\n    pageId: \"login-config-totp.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, isAppInitiatedAction, totp, mode, messagesPerField} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(msgStr(\"loginTotpTitle\"))\n    const algToKeyUriAlg: Record<(typeof kcContext)[\"totp\"][\"policy\"][\"algorithm\"], string> = {\n        \"HmacSHA1\": \"SHA1\",\n        \"HmacSHA256\": \"SHA256\",\n        \"HmacSHA512\": \"SHA512\"\n    };\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"loginTotpTitle\")}>\n            <div className={\"flex\"}>\n                <div className={\"flex flex-col gap-2\"}>\n                    <p className={\"max-w-[350px]\"}>{msg(\"loginTotpStep1\")}</p>\n                    <ul id=\"kc-totp-supported-apps\" className={\"text-sm pl-6\"}>\n                        {totp.supportedApplications.filter(item => Boolean(item.trim())).map(app => (\n                            <li className={\"list-disc\"}>{msg(app as MessageKey)}</li>\n                        ))}\n                    </ul>\n                    {mode && mode === \"manual\" ? (\n                        <>\n                            <p>{msg(\"loginTotpManualStep2\")}</p>\n                            <pre id=\"kc-totp-secret-key\"\n                                 className={\"bg-slate-900 rounded-lg p-2 text-white\"}>{totp.totpSecretEncoded}</pre>\n                            <p>\n                                <Button onClick={() => window.open(totp.qrUrl, \"_self\")} id=\"mode-barcode\">\n                                    {msg(\"loginTotpScanBarcode\")}\n                                </Button>\n                            </p>\n\n                            <p>{msg(\"loginTotpManualStep3\")}</p>\n                            <p className={\"border-2 p-2 border-slate-600\"}>\n                                <ul className={\"text-sm\"}>\n                                    <li id=\"kc-totp-type\">\n                                        {msg(\"loginTotpType\")}: {msg(`loginTotp.${totp.policy.type}`)}\n                                    </li>\n                                    <li id=\"kc-totp-algorithm\">\n                                        {msg(\"loginTotpAlgorithm\")}: {algToKeyUriAlg?.[totp.policy.algorithm] ?? totp.policy.algorithm}\n                                    </li>\n                                    <li id=\"kc-totp-digits\">\n                                        {msg(\"loginTotpDigits\")}: {totp.policy.digits}\n                                    </li>\n                                    {totp.policy.type === \"totp\" ? (\n                                        <li id=\"kc-totp-period\">\n                                            {msg(\"loginTotpInterval\")}: {totp.policy.period}\n                                        </li>\n                                    ) : (\n                                        <li id=\"kc-totp-counter\">\n                                            {msg(\"loginTotpCounter\")}: {totp.policy.initialCounter}\n                                        </li>\n                                    )}\n                                </ul>\n                            </p>\n\n                        </>\n                    ) : (\n                        <>\n                            <p>{msg(\"loginTotpStep2\")}</p>\n                            <img id=\"kc-totp-secret-qr-code\" src={`data:image/png;base64, ${totp.totpSecretQrCode}`}\n                                 alt=\"Figure: Barcode\" className={\"border-8 w-64\"}/>\n                            <Button variant={\"link\"} onClick={() => {\n                                window.open(totp.manualUrl, \"_self\")\n                            }} id=\"mode-manual\">\n                                {msg(\"loginTotpUnableToScan\")}\n                            </Button>\n                        </>\n                    )}\n\n\n                </div>\n                <Separator orientation={\"vertical\"} className={\"mx-10 h-auto\"}/>\n                <div className={\"flex items-center\"}>\n                    <form action={url.loginAction} className={\"flex flex-col gap-4\"} id=\"kc-totp-settings-form\"\n                          method=\"post\">\n                        <div className={getClassName(\"kcFormGroupClass\")}>\n                            <div className={getClassName(\"kcInputWrapperClass\")}>\n                                <p className={\"text-sm\"}>{msg(\"loginTotpStep3\")}</p>\n                                <Label htmlFor=\"totp\" className={getClassName(\"kcLabelClass\")}>\n                                    {msg(\"authenticatorCode\")} <span className=\"text-red-500\">*</span>\n                                </Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"totp\"\n                                    name=\"totp\"\n                                    autoComplete=\"off\"\n                                    className={getClassName(\"kcInputClass\")}\n                                    aria-invalid={messagesPerField.existsError(\"totp\")}\n                                />\n\n                                {messagesPerField.existsError(\"totp\") && (\n                                    <span id=\"input-error-otp-code\" className={getClassName(\"kcInputErrorMessageClass\")}\n                                          aria-live=\"polite\">\n                                    {messagesPerField.get(\"totp\")}\n                                </span>\n                                )}\n                            </div>\n                            <input type=\"hidden\" id=\"totpSecret\" name=\"totpSecret\" value={totp.totpSecret}/>\n                            {mode && <input type=\"hidden\" id=\"mode\" value={mode}/>}\n                        </div>\n\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n\n                            <p className={\"text-sm\"}>{msg(\"loginTotpStep3DeviceName\")}</p>\n                            <Label htmlFor=\"userLabel\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"loginTotpDeviceName\")} {totp.otpCredentials.length >= 1 &&\n                                <span className=\"text-red-500\">*</span>}\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                id=\"userLabel\"\n                                name=\"userLabel\"\n                                autoComplete=\"off\"\n                                className={getClassName(\"kcInputClass\")}\n                                aria-invalid={messagesPerField.existsError(\"userLabel\")}\n                            />\n                            {messagesPerField.existsError(\"userLabel\") && (\n                                <span id=\"input-error-otp-label\"\n                                      className={getClassName(\"kcInputErrorMessageClass\")}\n                                      aria-live=\"polite\">\n                                    {messagesPerField.get(\"userLabel\")}\n                                </span>\n                            )}\n                        </div>\n\n                        {isAppInitiatedAction ? (\n                            <div className={'flex flex-col gap-2'}>\n                                <Button\n                                    type=\"submit\"\n                                    className={clsx(\n                                        getClassName(\"kcButtonClass\"),\n                                        getClassName(\"kcButtonPrimaryClass\"),\n                                        getClassName(\"kcButtonLargeClass\")\n                                    )}\n                                    id=\"saveTOTPBtn\"\n                                >\n                                    {msgStr(\"doSubmit\")}\n                                </Button>\n                                <Button\n                                    type=\"submit\"\n                                    variant={\"ghost\"}\n                                    className={clsx(\n                                        getClassName(\"kcButtonClass\"),\n                                        getClassName(\"kcButtonDefaultClass\"),\n                                        getClassName(\"kcButtonLargeClass\"),\n                                        getClassName(\"kcButtonLargeClass\")\n                                    )}\n                                    id=\"cancelTOTPBtn\"\n                                    name=\"cancel-aia\"\n                                    value=\"true\"\n                                >\n                                    {msg(\"doCancel\")}\n                                </Button>\n                            </div>\n                        ) : (\n                            <input\n                                type=\"submit\"\n                                className={clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\"))}\n                                id=\"saveTOTPBtn\"\n                                value={msgStr(\"doSubmit\")}\n                            />\n                        )}\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}","\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport Template from \"./Template\";\nimport LoginResetPassword from \"./pages/LoginResetPassword\";\nimport LoginUsername from \"./pages/LoginUsername\";\nimport LoginPassword from \"./pages/LoginPassword\";\nimport WebauthnRegister from \"./pages/WebauthnRegister\";\nimport WebauthnAuthenticate from \"./pages/WebauthnAuthenticate\";\nimport SelectAuthenticator from \"./pages/SelectAuthenticator\";\nimport Error from \"./pages/Error\";\nimport WebauthnError from \"./pages/WebauthnError\";\nimport LoginConfigTotp from \"./pages/LoginConfigTotp\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-username.ftl\": return <LoginUsername {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-password.ftl\": return <LoginPassword {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"login-reset-password.ftl\": return <LoginResetPassword {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // Removes those pages in you project. They are included to show you how to implement keycloak pages\n                    // that are not yes implemented by Keycloakify. \n                    // See: https://docs.keycloakify.dev/limitations#some-pages-still-have-the-default-theme.-why\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    // This is just an example to show you what is possible. You likely don't want to keep this as is. \n                    case 'webauthn-authenticate.ftl': return  <WebauthnAuthenticate {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case 'select-authenticator.ftl': return <SelectAuthenticator {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case 'webauthn-register.ftl': return  <WebauthnRegister {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case 'webauthn-error.ftl': return <WebauthnError {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case 'login-config-totp.ftl': return <LoginConfigTotp {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case 'error.ftl':return <Error {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"info.ftl\": return (\n                        <Info\n                            {...{ kcContext, i18n, classes }}\n                            Template={lazy(() => import(\"keycloakify/login/Template\"))}\n                            doUseDefaultCss={true}\n                        />\n                    );\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n"],"names":["buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","_ref","ref","className","asChild","props","Comp","Slot","_jsx","cn","displayName","Checkbox","CheckboxPrimitive","children","CheckIcon","Input","type","labelVariants","Label","LabelPrimitive","Separator","orientation","decorative","SeparatorPrimitive","_len","arguments","length","inputs","Array","_key","twMerge","clsx","useI18n","createUseI18n","en","loginAs","notYou","zh_CN","setAuthenticatorNameTitle","setAuthenticatorNameDescription","setAuthenticatorNamePlaceHolder","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","inset","_jsxs","ChevronRightIcon","_ref2","DropdownMenuContent","_ref3","sideOffset","DropdownMenuItem","_ref4","_ref5","checked","_ref6","DotFilledIcon","_ref7","_ref8","alertVariants","Alert","role","AlertTitle","AlertDescription","Card","CardTitle","CardContent","Template","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","isReady","usePrepareTemplate","console","log","JSON","stringify","internationalizationEnabled","assert","undefined","supported","map","languageTag","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayNameHtml","id","showUsername","attemptedUsername","showResetCredentials","href","loginRestartFlowUrl","concat","ExclamationTriangleIcon","summary","showTryAnotherWayLink","action","loginAction","method","name","value","document","forms","submit","_Fragment","my_custom_param","URL","window","location","searchParams","get","LoginResetPassword","msgStr","useTitle","htmlFor","loginWithEmailAllowed","registrationEmailAsUsername","autoFocus","defaultValue","loginUrl","prividerIdIconMap","IconBrandWindows","IconBrandGoogle","IconBrandFacebookFilled","IconBrandTwitter","IconBrandStackoverflow","IconBrandGitlab","IconBrandPaypal","IconBrandInstagram","IconBrandLinkedin","IconBrandGithub","IconBrandBitbucket","IconBrandOpenSource","LoginUsername","social","usernameHidden","login","registrationDisabled","isLoginButtonDisabled","setIsLoginButtonDisabled","useState","onSubmit","useConstCallback","e","_formElement$querySel","preventDefault","formElement","target","querySelector","setAttribute","password","providers","registrationAllowed","tabIndex","registrationUrl","_login$username","label","autoCompleteHelper","username","autoComplete","rememberMe","defaultChecked","disabled","p","open","alias","providerId","LoginPassword","_login$password","resetPasswordAllowed","loginResetCredentialsUrl","Dialog","DialogPrimitive","DialogPortal","DialogOverlay","DialogContent","Cross2Icon","DialogHeader","DialogFooter","DialogTitle","DialogDescription","WebauthnRegister","attestationConveyancePrefrence","authenticatorAttachment","challenge","createTimeout","excludeCredentialsId","requireResidentKey","userid","signatureAlgorithms","userVerificationRequirement","rpEntityName","rpId","isSetRetry","clientDataJSON","setClientDataJSON","attestationObject","setAttestationObject","publicKeyCredentialId","setPublicKeyCredentialId","authenticatorLabel","setAuthenticatorLabel","transports","setTransports","error","setError","dialogOpen","setDialogOpen","formElementRef","useRef","isReadyToSubmit","setIsReadyToSubmit","submitForm","async","current","Promise","resolve","setTimeout","registerSecurityKey","PublicKeyCredential","pubKeyCredParams","getPubKeyCredParams","rp","publicKey","base64url","loose","user","attestation","authenticatorSelection","isAuthenticatorSelectionSet","userVerification","timeout","excludeCredentials","getExcludeCredentials","result","navigator","credentials","create","is","response","typeGuard","ArrayBuffer","Uint8Array","pad","rawId","getTransports","getTransportsAsString","err","String","sigAlgList","object","alg","push","sigAlg","excludeCredentialIds","excludeCredentialIdsList","split","excludeCredentialId","transportsList","constructor","transportsString","i","slice","useEffect","style","marginRight","placeholder","onChange","event","onFinishNameInput","Boolean","WebauthnAuthenticate","authenticators","shouldDisplayAuthenticators","Number","isUserIdentified","webauthnResult","setWebauthnResult","authenticatorData","webAuthnAuthenticate","signature","credentialId","userHandle","authenticator","iconClass","includes","displayNameProperties","transport","index","createdAt","IconMap","IconPassword","IconNumbers","kcAuthenticatorWebAuthnClass","IconKey","kcAuthenticatorWebAuthnPasswordlessClass","IconUser","SelectAuthenticator","selectCredentialsForm","authExecIdInput","_selectCredentialsFor","onSelectedAuthenticator","authExecId","currentTarget","dataset","authenticationSelections","authenticationSelection","iconCssClass","helpText","Error","client","baseUrl","WebauthnError","dangerouslySetInnerHTML","__html","execution","LoginConfigTotp","_algToKeyUriAlg$totp$","totp","mode","messagesPerField","algToKeyUriAlg","supportedApplications","filter","item","trim","app","totpSecretEncoded","qrUrl","policy","algorithm","digits","period","initialCounter","src","totpSecretQrCode","alt","manualUrl","existsError","totpSecret","otpCredentials","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","KcApp","Suspense","pageId","Fallback"],"sourceRoot":""}