{"version":3,"file":"static/js/4475.479d07a1.chunk.js","mappings":"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","sources":["components/ui/alert.tsx","components/ui/button.tsx","components/ui/checkbox.tsx","components/ui/input.tsx","components/ui/label.tsx","components/ui/separator.tsx","lib/utils.ts","login/i18n.ts","components/ui/dropdown-menu.tsx","components/ui/card.tsx","components/ui/wavy-background.tsx","login/Template.tsx","login/pages/LoginResetPassword.tsx","login/pages/LoginUsername.tsx","login/pages/LoginPassword.tsx","components/ui/dialog.tsx","login/pages/WebauthnRegister.tsx","login/pages/WebauthnAuthenticate.tsx","login/pages/SelectAuthenticator.tsx","login/pages/Error.tsx","login/pages/WebauthnError.tsx","login/pages/LoginConfigTotp.tsx","login/pages/LoginUpdatePassword.tsx","components/ui/radio-group.tsx","login/pages/LoginOtp.tsx","login/pages/SamlPostForm.tsx","login/pages/LoginDeviceVerifyUserCode.tsx","login/pages/LoginOauthGrant.tsx","login/pages/LoginPageExpired.tsx","hooks/useCountDown.ts","login/pages/LoginVerifyEmail.tsx","login/pages/LoginIdpLinkConfirm.tsx","login/pages/IdpReviewUserProfile.tsx","login/pages/LoginIdpLinkEmail.tsx","login/pages/LogoutConfirm.tsx","login/KcApp.tsx","components/ui/select.tsx","login/pages/shared/UserProfileFormFields.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\nimport {cn} from \"lib/utils\";\n\n\n\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import {createUseI18n} from \"keycloakify/login\";\n\n\nexport const {useI18n} = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    // @ts-ignore\n    en: {\n        loginAs: \"Log in as\",\n        notYou: \"Not You?\",\n        \"doLogIn\": \"登录\",\n        \"doRegister\": \"注册\",\n        \"doCancel\": \"取消\",\n        \"doSubmit\": \"提交\",\n        \"doBack\": \"返回\",\n        \"doYes\": \"是\",\n        \"doNo\": \"否\",\n        \"doContinue\": \"继续\",\n        \"doIgnore\": \"忽略\",\n        \"doAccept\": \"接受\",\n        \"doDecline\": \"拒绝\",\n        \"doForgotPassword\": \"忘记密码?\",\n        \"doClickHere\": \"点击这里\",\n        \"doImpersonate\": \"模拟\",\n        \"doTryAgain\": \"重试\",\n        \"doTryAnotherWay\": \"尝试其他方法\",\n        \"doConfirmDelete\": \"确认删除\",\n        \"errorDeletingAccount\": \"删除账户时遇到错误\",\n        \"deletingAccountForbidden\": \"您没有权限删除您的账户，请联系管理员。\",\n        \"kerberosNotConfigured\": \"Kerberos 没有配置\",\n        \"kerberosNotConfiguredTitle\": \"Kerberos 没有配置\",\n        \"bypassKerberosDetail\": \"您没有通过 Kerberos 登录 或者您的浏览器没有设置 Kerberos 登录. 请点击继续通过其他途径登录。\",\n        \"kerberosNotSetUp\": \"Kerberos 没有配置，您无法登录。\",\n        \"registerTitle\": \"注册\",\n        \"loginAccountTitle\": \"登录到您的账户\",\n        \"loginTitle\": \"登录到 {0}\",\n        \"loginTitleHtml\": \"{0}\",\n        \"impersonateTitle\": \"{0} 模拟用户\",\n        \"impersonateTitleHtml\": \"<strong>{0}</strong>模拟用户\",\n        \"realmChoice\": \"域\",\n        \"unknownUser\": \"未知用户\",\n        \"loginTotpTitle\": \"配置验证器\",\n        \"loginProfileTitle\": \"更新账户信息\",\n        \"loginIdpReviewProfileTitle\": \"更新账户信息\",\n        \"loginTimeout\": \"您的登录已超时，请重新开始登录。\",\n        \"reauthenticate\": \"请重新授权以继续\",\n        \"oauthGrantTitle\": \"授权给 {0}\",\n        \"oauthGrantTitleHtml\": \"{0}\",\n        \"oauthGrantInformation\": \"通过了解 {0} 将如何处理您的数据，确保您信任 {0} 。\",\n        \"oauthGrantReview\": \"您可以审阅\",\n        \"oauthGrantTos\": \"服务条款。\",\n        \"oauthGrantPolicy\": \"隐私政策。\",\n        \"errorTitle\": \"很抱歉...\",\n        \"errorTitleHtml\": \"我们<strong>很抱歉</strong> ...\",\n        \"emailVerifyTitle\": \"验证电子邮箱地址\",\n        \"emailForgotTitle\": \"忘记密码了吗?\",\n        \"updateEmailTitle\": \"更新点在邮箱\",\n        \"emailUpdateConfirmationSentTitle\": \"已发送确认邮件。\",\n        \"emailUpdateConfirmationSent\": \"已向 {0} 发送了一封确认邮件. 请按照前面的指示来更新电子邮箱。\",\n        \"emailUpdatedTitle\": \"电子邮箱已更新。\",\n        \"emailUpdated\": \"您的账户的电子邮箱已经成功更新为 {0}.\",\n        \"updatePasswordTitle\": \"更新密码\",\n        \"codeSuccessTitle\": \"成功代码\",\n        \"codeErrorTitle\": \"错误代码\\: {0}\",\n        \"displayUnsupported\": \"不支持请求的显示类型\",\n        \"browserRequired\": \"需要浏览器来登录\",\n        \"browserContinue\": \"需要浏览器来完成登录\",\n        \"browserContinuePrompt\": \"打开浏览器以继续？ [y/n]:\",\n        \"browserContinueAnswer\": \"y\",\n        \"usb\": \"USB\",\n        \"nfc\": \"NFC\",\n        \"bluetooth\": \"蓝牙\",\n        \"internal\": \"内部\",\n        \"unknown\": \"未知\",\n        \"termsTitle\": \"条款\",\n        \"termsText\": \"<p>需要确定的条款</p>\",\n        \"termsPlainText\": \"需要确定的条款。\",\n        \"termsAcceptanceRequired\": \"您必须同意我们的的服务条款。\",\n        \"acceptTerms\": \"我同意服务条款\",\n        \"recaptchaFailed\": \"无效的验证码\",\n        \"recaptchaNotConfigured\": \"需要验证码，但是没有配置\",\n        \"consentDenied\": \"许可被拒绝。\",\n        \"noAccount\": \"新用户?\",\n        \"username\": \"用户名\",\n        \"usernameOrEmail\": \"用户名 或 电子邮箱地址\",\n        \"firstName\": \"名\",\n        \"givenName\": \"姓\",\n        \"fullName\": \"全名\",\n        \"lastName\": \"姓\",\n        \"familyName\": \"姓\",\n        \"email\": \"Email\",\n        \"password\": \"密码\",\n        \"passwordConfirm\": \"确认密码\",\n        \"passwordNew\": \"新密码\",\n        \"passwordNewConfirm\": \"确认新密码\",\n        \"hidePassword\": \"隐藏密码\",\n        \"showPassword\": \"显示密码\",\n        \"rememberMe\": \"记住我\",\n        \"authenticatorCode\": \"一次性验证码\",\n        \"address\": \"地址\",\n        \"street\": \"街道\",\n        \"locality\": \"市\",\n        \"region\": \"省，自治区，直辖市\",\n        \"postal_code\": \"邮政编码\",\n        \"country\": \"国家\",\n        \"emailVerified\": \"已验证电子邮件\",\n        \"website\": \"网址\",\n        \"phoneNumber\": \"电话号码\",\n        \"phoneNumberVerified\": \"已验证电话号码\",\n        \"gender\": \"性别\",\n        \"birthday\": \"生日\",\n        \"zoneinfo\": \"时区\",\n        \"gssDelegationCredential\": \"GSS Delegation Credential\",\n        \"logoutOtherSessions\": \"从其他设备中登出\",\n        \"profileScopeConsentText\": \"用户资料\",\n        \"emailScopeConsentText\": \"电子邮箱地址\",\n        \"addressScopeConsentText\": \"地址\",\n        \"phoneScopeConsentText\": \"电话号码\",\n        \"offlineAccessScopeConsentText\": \"离线访问\",\n        \"samlRoleListScopeConsentText\": \"我的角色\",\n        \"rolesScopeConsentText\": \"用户角色\",\n        \"restartLoginTooltip\": \"重新开始登录\",\n        \"loginTotpIntro\": \"您需要设置一个一次性密码生成器来访问您的账户\",\n        \"loginTotpStep1\": \"在您的移动设备中安装以下任意一个应用：\",\n        \"loginTotpStep2\": \"打开该应用来扫描条码\",\n        \"loginTotpStep3\": \"输入该应用提供的一次性代码并点击提交来完成配置。\",\n        \"loginTotpStep3DeviceName\": \"请提供一个设备名称以方便管理您的OTP设备\",\n        \"loginTotpManualStep2\": \"打开应用并输入密钥：\",\n        \"loginTotpManualStep3\": \"如果应用程序允许设置，请使用以下配置值：\",\n        \"loginTotpUnableToScan\": \"无法扫描？\",\n        \"loginTotpScanBarcode\": \"扫描条码？\",\n        \"loginCredential\": \"凭证\",\n        \"loginOtpOneTime\": \"一次性代码\",\n        \"loginTotpType\": \"类型\",\n        \"loginTotpAlgorithm\": \"算法\",\n        \"loginTotpDigits\": \"位数\",\n        \"loginTotpInterval\": \"间隔\",\n        \"loginTotpCounter\": \"计数\",\n        \"loginTotpDeviceName\": \"设备名称\",\n        \"loginTotp.totp\": \"基于时间\",\n        \"loginTotp.hotp\": \"给予计数器\",\n        \"totpAppFreeOTPName\": \"FreeOTP\",\n        \"totpAppGoogleName\": \"Google Authenticator\",\n        \"totpAppMicrosoftAuthenticatorName\": \"Microsoft Authenticator\",\n        \"loginChooseAuthenticator\": \"选择登录方式\",\n        \"oauthGrantRequest\": \"您是否授予这些访问权限?\",\n        \"inResource\": \"in\",\n        \"oauth2DeviceVerificationTitle\": \"设备登录\",\n        \"verifyOAuth2DeviceUserCode\": \"输入设备提供的代码，然后单击提交\",\n        \"oauth2DeviceInvalidUserCodeMessage\": \"错误代码，请重试。\",\n        \"oauth2DeviceExpiredUserCodeMessage\": \"代码已过期。请返回您的设备并尝试重新连接。\",\n        \"oauth2DeviceVerificationCompleteHeader\": \"设备登录成功\",\n        \"oauth2DeviceVerificationCompleteMessage\": \"您可以关闭此浏览器窗口并返回您的设备。\",\n        \"oauth2DeviceVerificationFailedHeader\": \"设备登录失败。\",\n        \"oauth2DeviceVerificationFailedMessage\": \"您可以关闭此浏览器窗口，然后返回到您的设备并尝试重新连接。\",\n        \"oauth2DeviceConsentDeniedMessage\": \"连接设备的同意被拒绝。\",\n        \"oauth2DeviceAuthorizationGrantDisabledMessage\": \"不允许此客户端启动 OAuth 2.0 设备授权授予。该流程已对此客户端禁用。\",\n        \"emailVerifyInstruction1\": \"一封包含验证邮箱具体步骤的邮件已经发送到您的邮箱。\",\n        \"emailVerifyInstruction2\": \"邮箱没有收到验证码?\",\n        \"emailVerifyInstruction3\": \"重新发送电子邮件\",\n        \"emailLinkIdpTitle\": \"链接 {0}\",\n        \"emailLinkIdp1\": \"一封包含链接账户 {0} 和账户 {1} 到账户 {2} 的邮件已经发送到您的邮箱。\",\n        \"emailLinkIdp2\": \"邮箱没有收到验证码邮件?\",\n        \"emailLinkIdp3\": \"重新发送电子邮件\",\n        \"emailLinkIdp4\": \"如果您已经在不同的浏览器中验证了电子邮件\",\n        \"emailLinkIdp5\": \"来继续.\",\n        \"backToLogin\": \"&laquo; 回到登录\",\n        \"emailInstruction\": \"输入您的用户名或邮箱，我们会发送一封带有设置新密码步骤的邮件到您的邮箱。\",\n        \"emailInstructionUsername\": \"输入您的用户名，我们将向您发送如何创建新密码的说明。\",\n        \"copyCodeInstruction\": \"请复制这段验证码并粘贴到您的应用：\",\n        \"pageExpiredTitle\": \"页面已过期\",\n        \"pageExpiredMsg1\": \"来重启登录流程\",\n        \"pageExpiredMsg2\": \"来继续登录流程\",\n        \"personalInfo\": \"个人信息\\:\",\n        \"role_admin\": \"管理员\",\n        \"role_realm-admin\": \"域管理员\",\n        \"role_create-realm\": \"创建域\",\n        \"role_create-client\": \"创建客户端\",\n        \"role_view-realm\": \"查看域\",\n        \"role_view-users\": \"查看用户\",\n        \"role_view-applications\": \"查看应用\",\n        \"role_view-clients\": \"查看客户端\",\n        \"role_view-events\": \"查看时间\",\n        \"role_view-identity-providers\": \"查看身份提供者\",\n        \"role_manage-realm\": \"管理域\",\n        \"role_manage-users\": \"管理用户\",\n        \"role_manage-applications\": \"管理应用\",\n        \"role_manage-identity-providers\": \"管理身份提供者\",\n        \"role_manage-clients\": \"管理客户\",\n        \"role_manage-events\": \"管理事件\",\n        \"role_view-profile\": \"查看用户信息\",\n        \"role_manage-account\": \"管理账户\",\n        \"role_manage-account-links\": \"管理账户链接\",\n        \"role_read-token\": \"读取令牌\",\n        \"role_offline-access\": \"离线访问\",\n        \"client_account\": \"账户\",\n        \"client_account-console\": \"账户控制台\",\n        \"client_security-admin-console\": \"安全管理控制台\",\n        \"client_admin-cli\": \"管理命令行工具\",\n        \"client_realm-management\": \"域管理\",\n        \"client_broker\": \"经纪人\",\n        \"requiredFields\": \"必填字段\",\n        \"invalidUserMessage\": \"无效的用户名或密码。\",\n        \"invalidUsernameMessage\": \"无效的用户名。\",\n        \"invalidUsernameOrEmailMessage\": \"无效的用户名或电子邮箱。\",\n        \"invalidPasswordMessage\": \"无效的密码.\",\n        \"invalidEmailMessage\": \"无效的电子邮件地址\",\n        \"accountDisabledMessage\": \"账户已被禁用，请联系您的管理员。\",\n        \"accountTemporarilyDisabledMessage\": \"账户被临时禁用，请联系管理员或稍后再试。\",\n        \"expiredCodeMessage\": \"登录超时，请重新登录。\",\n        \"expiredActionMessage\": \"操作已过期。请登录后继续。\",\n        \"expiredActionTokenNoSessionMessage\": \"操作已过期。\",\n        \"expiredActionTokenSessionExistsMessage\": \"操作已过期。请重新开始。\",\n        \"sessionLimitExceeded\": \"已有过多会话。\",\n        \"missingFirstNameMessage\": \"请输入名。\",\n        \"missingLastNameMessage\": \"请输入姓。\",\n        \"missingEmailMessage\": \"请输入电子邮箱.\",\n        \"missingUsernameMessage\": \"请输入用户名。\",\n        \"missingPasswordMessage\": \"请输入密码。\",\n        \"missingTotpMessage\": \"请输入验证码\",\n        \"missingTotpDeviceNameMessage\": \"请指定设备名称。\",\n        \"notMatchPasswordMessage\": \"密码不匹配。\",\n        \"error-invalid-value\": \"无效值。\",\n        \"error-invalid-blank\": \"请输入值。\",\n        \"error-empty\": \"请输入值。\",\n        \"error-invalid-length\": \"长度必须在 {1} 和 {2} 之间。\",\n        \"error-invalid-length-too-short\": \"最小长度为 {1}。\",\n        \"error-invalid-length-too-long\": \" 最大长度为 {2}。\",\n        \"error-invalid-email\": \"无效电子邮件地址。\",\n        \"error-invalid-number\": \"无效号码。\",\n        \"error-number-out-of-range\": \"号码必须介于 {1} 和 {2} 之间。\",\n        \"error-number-out-of-range-too-small\": \" 数字的最小值必须是 {1}。\",\n        \"error-number-out-of-range-too-big\": \" 数值的最大值必须为 {2}。\",\n        \"error-pattern-no-match\": \"无效值。\",\n        \"error-invalid-uri\": \"无效 URL。\",\n        \"error-invalid-uri-scheme\": \"无效 URL 方案。\",\n        \"error-invalid-uri-fragment\": \"无效 URL 片段。\",\n        \"error-user-attribute-required\": \"请指定此字段。\",\n        \"error-invalid-date\": \"无效日期。\",\n        \"error-user-attribute-read-only\": \"此字段只读。\",\n        \"error-username-invalid-character\": \"值包含无效字符。\",\n        \"error-person-name-invalid-character\": \"值包含无效字符。\",\n        \"error-reset-otp-missing-id\": \"请选择 OTP 配置。\",\n        \"invalidPasswordExistingMessage\": \"无效的旧密码\",\n        \"invalidPasswordBlacklistedMessage\": \"无效密码：该密码已经被拉黑。\",\n        \"invalidPasswordConfirmMessage\": \"确认密码不相同\",\n        \"invalidTotpMessage\": \"无效的验证码\",\n        \"usernameExistsMessage\": \"用户名已被占用\",\n        \"emailExistsMessage\": \"电子邮件已存在。\",\n        \"federatedIdentityExistsMessage\": \"用户 {0} {1} 已存在. 请登录账户管理界面链接账户.\",\n        \"federatedIdentityUnavailableMessage\": \"使用身份提供者 {1} 进行身份验证的用户 {0} 不存在。请联系管理员。\",\n        \"federatedIdentityUnmatchedEssentialClaimMessage\": \"身份提供者签发的 ID 令牌与配置的基本要求不匹配。请联系管理员。\",\n        \"confirmLinkIdpTitle\": \"账户已存在\",\n        \"federatedIdentityConfirmLinkMessage\": \"用户{0} {1} 已存在. 怎么继续?\",\n        \"federatedIdentityConfirmReauthenticateMessage\": \"以 {0} 登录来将 {1} 连接到您的账户\",\n        \"nestedFirstBrokerFlowMessage\": \"{0} 用户 {1} 与任何已知用户都没有关联。\",\n        \"confirmLinkIdpReviewProfile\": \"审查您的信息\",\n        \"confirmLinkIdpContinue\": \"添加到已知账户\",\n        \"configureTotpMessage\": \"您需要设置移动验证码来激活您的账户。\",\n        \"configureBackupCodesMessage\": \"您需要设置备份代码来激活您的账户。\",\n        \"updateProfileMessage\": \"您需要更新您的用户资料来激活您的账户。\",\n        \"updatePasswordMessage\": \"您需要更新您的密码来激活您的账户。\",\n        \"updateEmailMessage\": \"您需要更新您的电子邮箱地址来激活您的账户。\",\n        \"resetPasswordMessage\": \"您需要修改您的密码。\",\n        \"verifyEmailMessage\": \"您需要验证您的电子邮箱来激活您的账户\",\n        \"linkIdpMessage\": \"您需要验证您的电子邮箱来连接到账户{0}.\",\n        \"emailSentMessage\": \"您很快会收到一封关于接下来操作的邮件。\",\n        \"emailSendErrorMessage\": \"无法发送邮件，请稍后再试\",\n        \"accountUpdatedMessage\": \"您的账户已经更新。\",\n        \"accountPasswordUpdatedMessage\": \"您的密码已经被更新。\",\n        \"delegationCompleteHeader\": \"登录成功\",\n        \"delegationCompleteMessage\": \"您可以关闭浏览器窗口，返回控制台应用程序。\",\n        \"delegationFailedHeader\": \"登录失败\",\n        \"delegationFailedMessage\": \"您可以关闭此浏览器窗口，返回控制台应用程序并尝试重新登录。\",\n        \"noAccessMessage\": \"无权限\",\n        \"invalidPasswordMinLengthMessage\": \"无效的密码：最短长度 {0}.\",\n        \"invalidPasswordMaxLengthMessage\": \"无效的密码：最大长度 {0}.\",\n        \"invalidPasswordMinDigitsMessage\": \"无效的密码： 至少包含{0} 个数字\",\n        \"invalidPasswordMinLowerCaseCharsMessage\": \"无效的密码：至少包含 {0} 小写字母.\",\n        \"invalidPasswordMinUpperCaseCharsMessage\": \"无效的密码：至少包含 {0} 大写字母.\",\n        \"invalidPasswordMinSpecialCharsMessage\": \"无效的密码：至少包含 {0} 特殊字符.\",\n        \"invalidPasswordNotUsernameMessage\": \"无效的密码： 不能与用户名相同.\",\n        \"invalidPasswordNotEmailMessage\": \"无效的密码：不能与电子邮箱地址相同。\",\n        \"invalidPasswordRegexPatternMessage\": \"无效的密码： 无法与正则表达式匹配.\",\n        \"invalidPasswordHistoryMessage\": \"无效的密码： 不能与前 {0} 个旧密码相同.\",\n        \"invalidPasswordGenericMessage\": \"无效的密码：新密码不符合密码规则。\",\n        \"failedToProcessResponseMessage\": \"无法处理回复\",\n        \"httpsRequiredMessage\": \"需要HTTPS\",\n        \"realmNotEnabledMessage\": \"域未启用\",\n        \"invalidRequestMessage\": \"非法的请求\",\n        \"successLogout\": \"您已被登出\",\n        \"failedLogout\": \"无法登出\",\n        \"unknownLoginRequesterMessage\": \"未知的登录请求发起方\",\n        \"loginRequesterNotEnabledMessage\": \"登录请求发起方未启用\",\n        \"bearerOnlyMessage\": \"Bearer-only 的应用不允许通过浏览器登录\",\n        \"standardFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用标准流程。\",\n        \"implicitFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用隐式流程。\",\n        \"invalidRedirectUriMessage\": \"无效的跳转链接\",\n        \"unsupportedNameIdFormatMessage\": \"不支持的 NameIDFormat\",\n        \"invalidRequesterMessage\": \"无效的发起者\",\n        \"registrationNotAllowedMessage\": \"不允许注册\",\n        \"resetCredentialNotAllowedMessage\": \"不允许重置凭证\",\n        \"permissionNotApprovedMessage\": \"许可没有批准\",\n        \"noRelayStateInResponseMessage\": \"身份提供者没有返回中继状态信息\",\n        \"insufficientPermissionMessage\": \"权限不足以链接新的身份\",\n        \"couldNotProceedWithAuthenticationRequestMessage\": \"无法与身份提供者处理认证请求\",\n        \"couldNotObtainTokenMessage\": \"未从身份提供者获得令牌\",\n        \"unexpectedErrorRetrievingTokenMessage\": \"从身份提供者获得令牌时遇到未知错误\",\n        \"unexpectedErrorHandlingResponseMessage\": \"从身份提供者获得回复时遇到未知错误\",\n        \"identityProviderAuthenticationFailedMessage\": \"认证失败，无法通过身份提供者认证\",\n        \"couldNotSendAuthenticationRequestMessage\": \"无法向身份提供方发送认证请求\",\n        \"unexpectedErrorHandlingRequestMessage\": \"在处理发向认证提供方的请求时，出现未知错误。\",\n        \"invalidAccessCodeMessage\": \"无效的访问代码\",\n        \"sessionNotActiveMessage\": \"会话不在活动状态\",\n        \"invalidCodeMessage\": \"发生错误，请通过应用程序重新登录。\",\n        \"cookieNotFoundMessage\": \"未找到 cookie。请确保浏览器已启用 cookie。\",\n        \"insufficientLevelOfAuthentication\": \"未满足所请求的身份验证级别。\",\n        \"identityProviderUnexpectedErrorMessage\": \"与身份提供程序进行身份验证时出现意外错误\",\n        \"identityProviderMissingStateMessage\": \"身份提供程序的响应中缺少状态参数。\",\n        \"identityProviderMissingCodeOrErrorMessage\": \"身份提供程序的响应中缺少代码或错误参数。\",\n        \"identityProviderInvalidResponseMessage\": \"身份提供程序的无效响应。\",\n        \"identityProviderInvalidSignatureMessage\": \"身份提供程序响应中的无效签名。\",\n        \"identityProviderNotFoundMessage\": \"找不到具有标识符的身份提供程序。\",\n        \"identityProviderLinkSuccess\": \"您已成功验证电子邮件。请回到原来的浏览器继续登录。\",\n        \"staleCodeMessage\": \"此页面已失效，请返回应用程序并重新登录\",\n        \"realmSupportsNoCredentialsMessage\": \"域不支持任何凭证类型。\",\n        \"credentialSetupRequired\": \"无法登录，需要设置凭证。\",\n        \"identityProviderNotUniqueMessage\": \"该域支持多个身份提供程序。无法确定应使用哪个身份提供程序进行身份验证。\",\n        \"emailVerifiedMessage\": \"您的电子邮件地址已通过验证。\",\n        \"emailVerifiedAlreadyMessage\": \"您的电子邮件地址已被验证通过。\",\n        \"staleEmailVerificationLink\": \"您点击的链接是旧的过期链接，已经不再有效。 也许您已经验证了您的电子邮件。\",\n        \"identityProviderAlreadyLinkedMessage\": \"{0} 返回的联合身份已链接到另一个用户。\",\n        \"confirmAccountLinking\": \"确认将身份提供者 {1} 的账户 {0} 与您的账户链接。\",\n        \"confirmEmailAddressVerification\": \"确认电子邮件地址 {0} 的有效性。\",\n        \"confirmExecutionOfActions\": \"执行以下操作\",\n        \"locale_ar\": \"عربي\",\n        \"locale_ca\": \"Català\",\n        \"locale_cs\": \"Čeština\",\n        \"locale_da\": \"Dansk\",\n        \"locale_de\": \"Deutsch\",\n        \"locale_en\": \"English\",\n        \"locale_es\": \"Español\",\n        \"locale_fi\": \"Suomi\",\n        \"locale_fr\": \"Français\",\n        \"locale_hu\": \"Magyar\",\n        \"locale_it\": \"Italiano\",\n        \"locale_ja\": \"日本語\",\n        \"locale_lt\": \"Lietuvių\",\n        \"locale_lv\": \"Latviešu\",\n        \"locale_nl\": \"Nederlands\",\n        \"locale_no\": \"Norsk\",\n        \"locale_pl\": \"Polski\",\n        \"locale_pt_BR\": \"Português (Brasil)\",\n        \"locale_ru\": \"Русский\",\n        \"locale_sk\": \"Slovenčina\",\n        \"locale_sv\": \"Svenska\",\n        \"locale_th\": \"ไทย\",\n        \"locale_tr\": \"Türkçe\",\n        \"locale_zh-CN\": \"中文简体\",\n        \"backToApplication\": \"&laquo; 回到应用\",\n        \"missingParameterMessage\": \"缺少参数 \\: {0}\",\n        \"clientNotFoundMessage\": \"客户端未找到\",\n        \"clientDisabledMessage\": \"客户端已禁用\",\n        \"invalidParameterMessage\": \"无效的参数 \\: {0}\",\n        \"alreadyLoggedIn\": \"您已经登录。\",\n        \"differentUserAuthenticated\": \"您已经以不同用户 ''{0}'' 的身份在此会话中进行了身份验证。请先注销。\",\n        \"brokerLinkingSessionExpired\": \"已请求与经纪人帐户链接，但当前会话不再有效。\",\n        \"proceedWithAction\": \"&raquo; 点击此处继续\",\n        \"acrNotFulfilled\": \"未满足身份验证要求\",\n        \"requiredAction.CONFIGURE_TOTP\": \"配置OTP\",\n        \"requiredAction.TERMS_AND_CONDITIONS\": \"条款和条件\",\n        \"requiredAction.UPDATE_PASSWORD\": \"更新密码\",\n        \"requiredAction.UPDATE_PROFILE\": \"更新个人资料\",\n        \"requiredAction.VERIFY_EMAIL\": \"验证电子邮箱\",\n        \"requiredAction.CONFIGURE_RECOVERY_AUTHN_CODES\": \"生成恢复代码\",\n        \"requiredAction.webauthn-register-passwordless\": \"Webauthn注册免密码\",\n        \"invalidTokenRequiredActions\": \"链接中包含的必需操作无效\",\n        \"doX509Login\": \"您将被登录为\\：\",\n        \"clientCertificate\": \"X509客户端证书\\：\",\n        \"noCertificate\": \"[No Certificate]\",\n        \"pageNotFound\": \"页面未找到\",\n        \"internalServerError\": \"发生内部服务器错误\",\n        \"console-username\": \"用户名：\",\n        \"console-password\": \"密码：\",\n        \"console-otp\": \"一次性密码：\",\n        \"console-new-password\": \"新密码：\",\n        \"console-confirm-password\": \"确认密码：\",\n        \"console-update-password\": \"需要更新您的密码。\",\n        \"console-verify-email\": \"您需要验证您的电子邮件地址。我们已向 {0} 发送了一封包含验证码的电子邮件。请将此代码输入下面的输入框中。\",\n        \"console-email-code\": \"电子邮件验证码：\",\n        \"console-accept-terms\": \"接受条款？[y/n]：\",\n        \"console-accept\": \"y\",\n        \"openshift.scope.user_info\": \"用户信息\",\n        \"openshift.scope.user_check-access\": \"用户访问信息\",\n        \"openshift.scope.user_full\": \"完全访问\",\n        \"openshift.scope.list-projects\": \"列出项目\",\n        \"saml.post-form.title\": \"身份验证重定向\",\n        \"saml.post-form.message\": \"重定向中，请稍候。\",\n        \"saml.post-form.js-disabled\": \"JavaScript已被禁用。我们强烈建议启用它。点击下面的按钮继续。\",\n        \"saml.artifactResolutionServiceInvalidResponse\": \"无法解析构造。\",\n        \"otp-display-name\": \"验证器应用程序\",\n        \"otp-help-text\": \"从验证器应用输入验证码。\",\n        \"otp-reset-description\": \"应删除哪个OTP配置？\",\n        \"password-display-name\": \"密码\",\n        \"password-help-text\": \"通过输入密码登录。\",\n        \"auth-username-form-display-name\": \"用户名\",\n        \"auth-username-form-help-text\": \"输入用户名已开始登录\",\n        \"auth-username-password-form-display-name\": \"用户名和密码\",\n        \"auth-username-password-form-help-text\": \"输入用户名和密码以登录。\",\n        \"auth-recovery-authn-code-form-display-name\": \"恢复代码\",\n        \"auth-recovery-authn-code-form-help-text\": \"输入先前生成的恢复代码。\",\n        \"auth-recovery-code-info-message\": \"输入指定的恢复代码。\",\n        \"auth-recovery-code-prompt\": \"恢复代码 #{0}\",\n        \"auth-recovery-code-header\": \"使用恢复代码登录\",\n        \"recovery-codes-error-invalid\": \"无效的代码\",\n        \"recovery-code-config-header\": \"恢复代码\",\n        \"recovery-code-config-warning-title\": \"离开此页面后，这些恢复代码将不再显示\",\n        \"recovery-code-config-warning-message\": \"确保打印、下载或将它们复制到密码管理器，并将其保存在安全的地方。取消此设置将从您的帐户中删除这些恢复代码。\",\n        \"recovery-codes-print\": \"打印\",\n        \"recovery-codes-download\": \"下载\",\n        \"recovery-codes-copy\": \"复制\",\n        \"recovery-codes-copied\": \"已复制\",\n        \"recovery-codes-confirmation-message\": \"我已将这些代码保存在安全的地方\",\n        \"recovery-codes-action-complete\": \"完成设置\",\n        \"recovery-codes-action-cancel\": \"取消设置\",\n        \"recovery-codes-download-file-header\": \"将这些恢复代码保存在安全的地方。\",\n        \"recovery-codes-download-file-description\": \"恢复代码是一次性验证码，如果您无法访问您的验证器，可以使用它们登录到您的帐户。\",\n        \"recovery-codes-download-file-date\": \"这些代码生成于\",\n        \"recovery-codes-label-default\": \"恢复代码\",\n        \"webauthn-display-name\": \"安全密钥\",\n        \"webauthn-help-text\": \"使用您的安全密钥登录。\",\n        \"webauthn-passwordless-display-name\": \"安全密钥\",\n        \"webauthn-passwordless-help-text\": \"使用您的安全密钥进行无密码登录。\",\n        \"webauthn-login-title\": \"安全密钥登录\",\n        \"webauthn-registration-title\": \"安全密钥注册\",\n        \"webauthn-available-authenticators\": \"可用的安全密钥\",\n        \"webauthn-unsupported-browser-text\": \"此浏览器不支持 WebAuthn。请尝试其他浏览器或联系管理员。\",\n        \"webauthn-doAuthenticate\": \"使用安全密钥登录\",\n        \"webauthn-createdAt-label\": \"创建于\",\n        \"webauthn-error-title\": \"安全密钥错误\",\n        \"webauthn-error-registration\": \"注册您的安全密钥失败。<br/> {0}\",\n        \"webauthn-error-api-get\": \"通过安全密钥进行身份验证失败。<br/> {0}\",\n        \"webauthn-error-different-user\": \"首次经过身份验证的用户不是通过安全密钥经过身份验证的用户。\",\n        \"webauthn-error-auth-verification\": \"安全密钥身份验证结果无效。<br/> {0}\",\n        \"webauthn-error-register-verification\": \"安全密钥注册结果无效。<br/> {0}\",\n        \"webauthn-error-user-not-found\": \"通过安全密钥进行身份验证的用户未知。\",\n        \"identity-provider-redirector\": \"连接到另一个身份提供者\",\n        \"identity-provider-login-label\": \"或使用以下方式登录\",\n        \"idp-email-verification-display-name\": \"电子邮件验证\",\n        \"idp-email-verification-help-text\": \"通过验证您的电子邮件来链接您的帐户。\",\n        \"idp-username-password-form-display-name\": \"用户名和密码\",\n        \"idp-username-password-form-help-text\": \"通过登录来链接您的帐户。\",\n        \"finalDeletionConfirmation\": \"如果将您的帐户删除，将无法恢复。如果要保留您的帐户，请点击取消。\",\n        \"irreversibleAction\": \"此操作不可逆转\",\n        \"deleteAccountConfirm\": \"删除帐户确认\",\n        \"deletingImplies\": \"删除您的帐户意味着：\",\n        \"errasingData\": \"删除您的所有数据\",\n        \"loggingOutImmediately\": \"立即将您注销\",\n        \"accountUnusable\": \"此帐户将无法再次使用应用程序\",\n        \"userDeletedSuccessfully\": \"用户删除成功\",\n        \"access-denied\": \"访问被拒绝\",\n        \"access-denied-when-idp-auth\": \"使用 {0} 进行身份验证时被拒绝访问\",\n        \"frontchannel-logout.title\": \"正在注销\",\n        \"frontchannel-logout.message\": \"您正在从以下应用程序注销\",\n        \"logoutConfirmTitle\": \"注销\",\n        \"logoutConfirmHeader\": \"您确定要注销吗？\",\n        \"doLogout\": \"注销\",\n        \"readOnlyUsernameMessage\": \"由于用户名是只读的，您无法更新用户名。\"\n    },\n    zh_CN: {\n        setAuthenticatorNameTitle:\"设置密钥名称\",\n        setAuthenticatorNameDescription:\"为该密钥设置一个名称。该名称仅用于你的凭证管理。\",\n        setAuthenticatorNamePlaceHolder:\"默认 Webauthn 密钥\",\n        loginAs: \"登录为\",\n        notYou: \"不是你？\",\n        \"doLogIn\": \"登录\",\n        \"doRegister\": \"注册\",\n        \"doCancel\": \"取消\",\n        \"doSubmit\": \"提交\",\n        \"doBack\": \"返回\",\n        \"doYes\": \"是\",\n        \"doNo\": \"否\",\n        \"doContinue\": \"继续\",\n        \"doIgnore\": \"忽略\",\n        \"doAccept\": \"接受\",\n        \"doDecline\": \"拒绝\",\n        \"doForgotPassword\": \"忘记密码?\",\n        \"doClickHere\": \"点击这里\",\n        \"doImpersonate\": \"模拟\",\n        \"doTryAgain\": \"重试\",\n        \"doTryAnotherWay\": \"尝试其他方法\",\n        \"doConfirmDelete\": \"确认删除\",\n        \"errorDeletingAccount\": \"删除账户时遇到错误\",\n        \"deletingAccountForbidden\": \"您没有权限删除您的账户，请联系管理员。\",\n        \"kerberosNotConfigured\": \"Kerberos 没有配置\",\n        \"kerberosNotConfiguredTitle\": \"Kerberos 没有配置\",\n        \"bypassKerberosDetail\": \"您没有通过 Kerberos 登录 或者您的浏览器没有设置 Kerberos 登录. 请点击继续通过其他途径登录。\",\n        \"kerberosNotSetUp\": \"Kerberos 没有配置，您无法登录。\",\n        \"registerTitle\": \"注册\",\n        \"loginAccountTitle\": \"登录到您的账户\",\n        \"loginTitle\": \"登录到 {0}\",\n        \"loginTitleHtml\": \"{0}\",\n        \"impersonateTitle\": \"{0} 模拟用户\",\n        \"impersonateTitleHtml\": \"<strong>{0}</strong>模拟用户\",\n        \"realmChoice\": \"域\",\n        \"unknownUser\": \"未知用户\",\n        \"loginTotpTitle\": \"配置验证器\",\n        \"loginProfileTitle\": \"更新账户信息\",\n        \"loginIdpReviewProfileTitle\": \"更新账户信息\",\n        \"loginTimeout\": \"您的登录已超时，请重新开始登录。\",\n        \"reauthenticate\": \"请重新授权以继续\",\n        \"oauthGrantTitle\": \"授权给 {0}\",\n        \"oauthGrantTitleHtml\": \"{0}\",\n        \"oauthGrantInformation\": \"通过了解 {0} 将如何处理您的数据，确保您信任 {0} 。\",\n        \"oauthGrantReview\": \"您可以审阅\",\n        \"oauthGrantTos\": \"服务条款。\",\n        \"oauthGrantPolicy\": \"隐私政策。\",\n        \"errorTitle\": \"很抱歉...\",\n        \"errorTitleHtml\": \"我们<strong>很抱歉</strong> ...\",\n        \"emailVerifyTitle\": \"验证电子邮箱地址\",\n        \"emailForgotTitle\": \"忘记密码了吗?\",\n        \"updateEmailTitle\": \"更新点在邮箱\",\n        \"emailUpdateConfirmationSentTitle\": \"已发送确认邮件。\",\n        \"emailUpdateConfirmationSent\": \"已向 {0} 发送了一封确认邮件. 请按照前面的指示来更新电子邮箱。\",\n        \"emailUpdatedTitle\": \"电子邮箱已更新。\",\n        \"emailUpdated\": \"您的账户的电子邮箱已经成功更新为 {0}.\",\n        \"updatePasswordTitle\": \"更新密码\",\n        \"codeSuccessTitle\": \"成功代码\",\n        \"codeErrorTitle\": \"错误代码\\: {0}\",\n        \"displayUnsupported\": \"不支持请求的显示类型\",\n        \"browserRequired\": \"需要浏览器来登录\",\n        \"browserContinue\": \"需要浏览器来完成登录\",\n        \"browserContinuePrompt\": \"打开浏览器以继续？ [y/n]:\",\n        \"browserContinueAnswer\": \"y\",\n        \"usb\": \"USB\",\n        \"nfc\": \"NFC\",\n        \"bluetooth\": \"蓝牙\",\n        \"internal\": \"内部\",\n        \"unknown\": \"未知\",\n        \"termsTitle\": \"条款\",\n        \"termsText\": \"<p>需要确定的条款</p>\",\n        \"termsPlainText\": \"需要确定的条款。\",\n        \"termsAcceptanceRequired\": \"您必须同意我们的的服务条款。\",\n        \"acceptTerms\": \"我同意服务条款\",\n        \"recaptchaFailed\": \"无效的验证码\",\n        \"recaptchaNotConfigured\": \"需要验证码，但是没有配置\",\n        \"consentDenied\": \"许可被拒绝。\",\n        \"noAccount\": \"新用户?\",\n        \"username\": \"用户名\",\n        \"usernameOrEmail\": \"用户名 或 电子邮箱地址\",\n        \"firstName\": \"名\",\n        \"givenName\": \"姓\",\n        \"fullName\": \"全名\",\n        \"lastName\": \"姓\",\n        \"familyName\": \"姓\",\n        \"email\": \"Email\",\n        \"password\": \"密码\",\n        \"passwordConfirm\": \"确认密码\",\n        \"passwordNew\": \"新密码\",\n        \"passwordNewConfirm\": \"确认新密码\",\n        \"hidePassword\": \"隐藏密码\",\n        \"showPassword\": \"显示密码\",\n        \"rememberMe\": \"记住我\",\n        \"authenticatorCode\": \"一次性验证码\",\n        \"address\": \"地址\",\n        \"street\": \"街道\",\n        \"locality\": \"市\",\n        \"region\": \"省，自治区，直辖市\",\n        \"postal_code\": \"邮政编码\",\n        \"country\": \"国家\",\n        \"emailVerified\": \"已验证电子邮件\",\n        \"website\": \"网址\",\n        \"phoneNumber\": \"电话号码\",\n        \"phoneNumberVerified\": \"已验证电话号码\",\n        \"gender\": \"性别\",\n        \"birthday\": \"生日\",\n        \"zoneinfo\": \"时区\",\n        \"gssDelegationCredential\": \"GSS Delegation Credential\",\n        \"logoutOtherSessions\": \"从其他设备中登出\",\n        \"profileScopeConsentText\": \"用户资料\",\n        \"emailScopeConsentText\": \"电子邮箱地址\",\n        \"addressScopeConsentText\": \"地址\",\n        \"phoneScopeConsentText\": \"电话号码\",\n        \"offlineAccessScopeConsentText\": \"离线访问\",\n        \"samlRoleListScopeConsentText\": \"我的角色\",\n        \"rolesScopeConsentText\": \"用户角色\",\n        \"restartLoginTooltip\": \"重新开始登录\",\n        \"loginTotpIntro\": \"您需要设置一个一次性密码生成器来访问您的账户\",\n        \"loginTotpStep1\": \"在您的移动设备中安装以下任意一个应用：\",\n        \"loginTotpStep2\": \"打开该应用来扫描条码\",\n        \"loginTotpStep3\": \"输入该应用提供的一次性代码并点击提交来完成配置。\",\n        \"loginTotpStep3DeviceName\": \"请提供一个设备名称以方便管理您的OTP设备\",\n        \"loginTotpManualStep2\": \"打开应用并输入密钥：\",\n        \"loginTotpManualStep3\": \"如果应用程序允许设置，请使用以下配置值：\",\n        \"loginTotpUnableToScan\": \"无法扫描？\",\n        \"loginTotpScanBarcode\": \"扫描条码？\",\n        \"loginCredential\": \"凭证\",\n        \"loginOtpOneTime\": \"一次性代码\",\n        \"loginTotpType\": \"类型\",\n        \"loginTotpAlgorithm\": \"算法\",\n        \"loginTotpDigits\": \"位数\",\n        \"loginTotpInterval\": \"间隔\",\n        \"loginTotpCounter\": \"计数\",\n        \"loginTotpDeviceName\": \"设备名称\",\n        \"loginTotp.totp\": \"基于时间\",\n        \"loginTotp.hotp\": \"给予计数器\",\n        \"totpAppFreeOTPName\": \"FreeOTP\",\n        \"totpAppGoogleName\": \"Google Authenticator\",\n        \"totpAppMicrosoftAuthenticatorName\": \"Microsoft Authenticator\",\n        \"loginChooseAuthenticator\": \"选择登录方式\",\n        \"oauthGrantRequest\": \"您是否授予这些访问权限?\",\n        \"inResource\": \"in\",\n        \"oauth2DeviceVerificationTitle\": \"设备登录\",\n        \"verifyOAuth2DeviceUserCode\": \"输入设备提供的代码，然后单击提交\",\n        \"oauth2DeviceInvalidUserCodeMessage\": \"错误代码，请重试。\",\n        \"oauth2DeviceExpiredUserCodeMessage\": \"代码已过期。请返回您的设备并尝试重新连接。\",\n        \"oauth2DeviceVerificationCompleteHeader\": \"设备登录成功\",\n        \"oauth2DeviceVerificationCompleteMessage\": \"您可以关闭此浏览器窗口并返回您的设备。\",\n        \"oauth2DeviceVerificationFailedHeader\": \"设备登录失败。\",\n        \"oauth2DeviceVerificationFailedMessage\": \"您可以关闭此浏览器窗口，然后返回到您的设备并尝试重新连接。\",\n        \"oauth2DeviceConsentDeniedMessage\": \"连接设备的同意被拒绝。\",\n        \"oauth2DeviceAuthorizationGrantDisabledMessage\": \"不允许此客户端启动 OAuth 2.0 设备授权授予。该流程已对此客户端禁用。\",\n        \"emailVerifyInstruction1\": \"一封包含验证邮箱具体步骤的邮件已经发送到您的邮箱。\",\n        \"emailVerifyInstruction2\": \"邮箱没有收到验证码?\",\n        \"emailVerifyInstruction3\": \"重新发送电子邮件\",\n        \"emailLinkIdpTitle\": \"链接 {0}\",\n        \"emailLinkIdp1\": \"一封包含链接账户 {0} 和账户 {1} 到账户 {2} 的邮件已经发送到您的邮箱。\",\n        \"emailLinkIdp2\": \"邮箱没有收到验证码邮件?\",\n        \"emailLinkIdp3\": \"重新发送电子邮件\",\n        \"emailLinkIdp4\": \"如果您已经在不同的浏览器中验证了电子邮件\",\n        \"emailLinkIdp5\": \"来继续.\",\n        \"backToLogin\": \"&laquo; 回到登录\",\n        \"emailInstruction\": \"输入您的用户名或邮箱，我们会发送一封带有设置新密码步骤的邮件到您的邮箱。\",\n        \"emailInstructionUsername\": \"输入您的用户名，我们将向您发送如何创建新密码的说明。\",\n        \"copyCodeInstruction\": \"请复制这段验证码并粘贴到您的应用：\",\n        \"pageExpiredTitle\": \"页面已过期\",\n        \"pageExpiredMsg1\": \"来重启登录流程\",\n        \"pageExpiredMsg2\": \"来继续登录流程\",\n        \"personalInfo\": \"个人信息\\:\",\n        \"role_admin\": \"管理员\",\n        \"role_realm-admin\": \"域管理员\",\n        \"role_create-realm\": \"创建域\",\n        \"role_create-client\": \"创建客户端\",\n        \"role_view-realm\": \"查看域\",\n        \"role_view-users\": \"查看用户\",\n        \"role_view-applications\": \"查看应用\",\n        \"role_view-clients\": \"查看客户端\",\n        \"role_view-events\": \"查看时间\",\n        \"role_view-identity-providers\": \"查看身份提供者\",\n        \"role_manage-realm\": \"管理域\",\n        \"role_manage-users\": \"管理用户\",\n        \"role_manage-applications\": \"管理应用\",\n        \"role_manage-identity-providers\": \"管理身份提供者\",\n        \"role_manage-clients\": \"管理客户\",\n        \"role_manage-events\": \"管理事件\",\n        \"role_view-profile\": \"查看用户信息\",\n        \"role_manage-account\": \"管理账户\",\n        \"role_manage-account-links\": \"管理账户链接\",\n        \"role_read-token\": \"读取令牌\",\n        \"role_offline-access\": \"离线访问\",\n        \"client_account\": \"账户\",\n        \"client_account-console\": \"账户控制台\",\n        \"client_security-admin-console\": \"安全管理控制台\",\n        \"client_admin-cli\": \"管理命令行工具\",\n        \"client_realm-management\": \"域管理\",\n        \"client_broker\": \"经纪人\",\n        \"requiredFields\": \"必填字段\",\n        \"invalidUserMessage\": \"无效的用户名或密码。\",\n        \"invalidUsernameMessage\": \"无效的用户名。\",\n        \"invalidUsernameOrEmailMessage\": \"无效的用户名或电子邮箱。\",\n        \"invalidPasswordMessage\": \"无效的密码.\",\n        \"invalidEmailMessage\": \"无效的电子邮件地址\",\n        \"accountDisabledMessage\": \"账户已被禁用，请联系您的管理员。\",\n        \"accountTemporarilyDisabledMessage\": \"账户被临时禁用，请联系管理员或稍后再试。\",\n        \"expiredCodeMessage\": \"登录超时，请重新登录。\",\n        \"expiredActionMessage\": \"操作已过期。请登录后继续。\",\n        \"expiredActionTokenNoSessionMessage\": \"操作已过期。\",\n        \"expiredActionTokenSessionExistsMessage\": \"操作已过期。请重新开始。\",\n        \"sessionLimitExceeded\": \"已有过多会话。\",\n        \"missingFirstNameMessage\": \"请输入名。\",\n        \"missingLastNameMessage\": \"请输入姓。\",\n        \"missingEmailMessage\": \"请输入电子邮箱.\",\n        \"missingUsernameMessage\": \"请输入用户名。\",\n        \"missingPasswordMessage\": \"请输入密码。\",\n        \"missingTotpMessage\": \"请输入验证码\",\n        \"missingTotpDeviceNameMessage\": \"请指定设备名称。\",\n        \"notMatchPasswordMessage\": \"密码不匹配。\",\n        \"error-invalid-value\": \"无效值。\",\n        \"error-invalid-blank\": \"请输入值。\",\n        \"error-empty\": \"请输入值。\",\n        \"error-invalid-length\": \"长度必须在 {1} 和 {2} 之间。\",\n        \"error-invalid-length-too-short\": \"最小长度为 {1}。\",\n        \"error-invalid-length-too-long\": \" 最大长度为 {2}。\",\n        \"error-invalid-email\": \"无效电子邮件地址。\",\n        \"error-invalid-number\": \"无效号码。\",\n        \"error-number-out-of-range\": \"号码必须介于 {1} 和 {2} 之间。\",\n        \"error-number-out-of-range-too-small\": \" 数字的最小值必须是 {1}。\",\n        \"error-number-out-of-range-too-big\": \" 数值的最大值必须为 {2}。\",\n        \"error-pattern-no-match\": \"无效值。\",\n        \"error-invalid-uri\": \"无效 URL。\",\n        \"error-invalid-uri-scheme\": \"无效 URL 方案。\",\n        \"error-invalid-uri-fragment\": \"无效 URL 片段。\",\n        \"error-user-attribute-required\": \"请指定此字段。\",\n        \"error-invalid-date\": \"无效日期。\",\n        \"error-user-attribute-read-only\": \"此字段只读。\",\n        \"error-username-invalid-character\": \"值包含无效字符。\",\n        \"error-person-name-invalid-character\": \"值包含无效字符。\",\n        \"error-reset-otp-missing-id\": \"请选择 OTP 配置。\",\n        \"invalidPasswordExistingMessage\": \"无效的旧密码\",\n        \"invalidPasswordBlacklistedMessage\": \"无效密码：该密码已经被拉黑。\",\n        \"invalidPasswordConfirmMessage\": \"确认密码不相同\",\n        \"invalidTotpMessage\": \"无效的验证码\",\n        \"usernameExistsMessage\": \"用户名已被占用\",\n        \"emailExistsMessage\": \"电子邮件已存在。\",\n        \"federatedIdentityExistsMessage\": \"用户 {0} {1} 已存在. 请登录账户管理界面链接账户.\",\n        \"federatedIdentityUnavailableMessage\": \"使用身份提供者 {1} 进行身份验证的用户 {0} 不存在。请联系管理员。\",\n        \"federatedIdentityUnmatchedEssentialClaimMessage\": \"身份提供者签发的 ID 令牌与配置的基本要求不匹配。请联系管理员。\",\n        \"confirmLinkIdpTitle\": \"账户已存在\",\n        \"federatedIdentityConfirmLinkMessage\": \"用户{0} {1} 已存在. 怎么继续?\",\n        \"federatedIdentityConfirmReauthenticateMessage\": \"以 {0} 登录来将 {1} 连接到您的账户\",\n        \"nestedFirstBrokerFlowMessage\": \"{0} 用户 {1} 与任何已知用户都没有关联。\",\n        \"confirmLinkIdpReviewProfile\": \"审查您的信息\",\n        \"confirmLinkIdpContinue\": \"添加到已知账户\",\n        \"configureTotpMessage\": \"您需要设置移动验证码来激活您的账户。\",\n        \"configureBackupCodesMessage\": \"您需要设置备份代码来激活您的账户。\",\n        \"updateProfileMessage\": \"您需要更新您的用户资料来激活您的账户。\",\n        \"updatePasswordMessage\": \"您需要更新您的密码来激活您的账户。\",\n        \"updateEmailMessage\": \"您需要更新您的电子邮箱地址来激活您的账户。\",\n        \"resetPasswordMessage\": \"您需要修改您的密码。\",\n        \"verifyEmailMessage\": \"您需要验证您的电子邮箱来激活您的账户\",\n        \"linkIdpMessage\": \"您需要验证您的电子邮箱来连接到账户{0}.\",\n        \"emailSentMessage\": \"您很快会收到一封关于接下来操作的邮件。\",\n        \"emailSendErrorMessage\": \"无法发送邮件，请稍后再试\",\n        \"accountUpdatedMessage\": \"您的账户已经更新。\",\n        \"accountPasswordUpdatedMessage\": \"您的密码已经被更新。\",\n        \"delegationCompleteHeader\": \"登录成功\",\n        \"delegationCompleteMessage\": \"您可以关闭浏览器窗口，返回控制台应用程序。\",\n        \"delegationFailedHeader\": \"登录失败\",\n        \"delegationFailedMessage\": \"您可以关闭此浏览器窗口，返回控制台应用程序并尝试重新登录。\",\n        \"noAccessMessage\": \"无权限\",\n        \"invalidPasswordMinLengthMessage\": \"无效的密码：最短长度 {0}.\",\n        \"invalidPasswordMaxLengthMessage\": \"无效的密码：最大长度 {0}.\",\n        \"invalidPasswordMinDigitsMessage\": \"无效的密码： 至少包含{0} 个数字\",\n        \"invalidPasswordMinLowerCaseCharsMessage\": \"无效的密码：至少包含 {0} 小写字母.\",\n        \"invalidPasswordMinUpperCaseCharsMessage\": \"无效的密码：至少包含 {0} 大写字母.\",\n        \"invalidPasswordMinSpecialCharsMessage\": \"无效的密码：至少包含 {0} 特殊字符.\",\n        \"invalidPasswordNotUsernameMessage\": \"无效的密码： 不能与用户名相同.\",\n        \"invalidPasswordNotEmailMessage\": \"无效的密码：不能与电子邮箱地址相同。\",\n        \"invalidPasswordRegexPatternMessage\": \"无效的密码： 无法与正则表达式匹配.\",\n        \"invalidPasswordHistoryMessage\": \"无效的密码： 不能与前 {0} 个旧密码相同.\",\n        \"invalidPasswordGenericMessage\": \"无效的密码：新密码不符合密码规则。\",\n        \"failedToProcessResponseMessage\": \"无法处理回复\",\n        \"httpsRequiredMessage\": \"需要HTTPS\",\n        \"realmNotEnabledMessage\": \"域未启用\",\n        \"invalidRequestMessage\": \"非法的请求\",\n        \"successLogout\": \"您已被登出\",\n        \"failedLogout\": \"无法登出\",\n        \"unknownLoginRequesterMessage\": \"未知的登录请求发起方\",\n        \"loginRequesterNotEnabledMessage\": \"登录请求发起方未启用\",\n        \"bearerOnlyMessage\": \"Bearer-only 的应用不允许通过浏览器登录\",\n        \"standardFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用标准流程。\",\n        \"implicitFlowDisabledMessage\": \"客户端不允许发起指定返回类型的浏览器登录. 此客户端已禁用隐式流程。\",\n        \"invalidRedirectUriMessage\": \"无效的跳转链接\",\n        \"unsupportedNameIdFormatMessage\": \"不支持的 NameIDFormat\",\n        \"invalidRequesterMessage\": \"无效的发起者\",\n        \"registrationNotAllowedMessage\": \"不允许注册\",\n        \"resetCredentialNotAllowedMessage\": \"不允许重置凭证\",\n        \"permissionNotApprovedMessage\": \"许可没有批准\",\n        \"noRelayStateInResponseMessage\": \"身份提供者没有返回中继状态信息\",\n        \"insufficientPermissionMessage\": \"权限不足以链接新的身份\",\n        \"couldNotProceedWithAuthenticationRequestMessage\": \"无法与身份提供者处理认证请求\",\n        \"couldNotObtainTokenMessage\": \"未从身份提供者获得令牌\",\n        \"unexpectedErrorRetrievingTokenMessage\": \"从身份提供者获得令牌时遇到未知错误\",\n        \"unexpectedErrorHandlingResponseMessage\": \"从身份提供者获得回复时遇到未知错误\",\n        \"identityProviderAuthenticationFailedMessage\": \"认证失败，无法通过身份提供者认证\",\n        \"couldNotSendAuthenticationRequestMessage\": \"无法向身份提供方发送认证请求\",\n        \"unexpectedErrorHandlingRequestMessage\": \"在处理发向认证提供方的请求时，出现未知错误。\",\n        \"invalidAccessCodeMessage\": \"无效的访问代码\",\n        \"sessionNotActiveMessage\": \"会话不在活动状态\",\n        \"invalidCodeMessage\": \"发生错误，请通过应用程序重新登录。\",\n        \"cookieNotFoundMessage\": \"未找到 cookie。请确保浏览器已启用 cookie。\",\n        \"insufficientLevelOfAuthentication\": \"未满足所请求的身份验证级别。\",\n        \"identityProviderUnexpectedErrorMessage\": \"与身份提供程序进行身份验证时出现意外错误\",\n        \"identityProviderMissingStateMessage\": \"身份提供程序的响应中缺少状态参数。\",\n        \"identityProviderMissingCodeOrErrorMessage\": \"身份提供程序的响应中缺少代码或错误参数。\",\n        \"identityProviderInvalidResponseMessage\": \"身份提供程序的无效响应。\",\n        \"identityProviderInvalidSignatureMessage\": \"身份提供程序响应中的无效签名。\",\n        \"identityProviderNotFoundMessage\": \"找不到具有标识符的身份提供程序。\",\n        \"identityProviderLinkSuccess\": \"您已成功验证电子邮件。请回到原来的浏览器继续登录。\",\n        \"staleCodeMessage\": \"此页面已失效，请返回应用程序并重新登录\",\n        \"realmSupportsNoCredentialsMessage\": \"域不支持任何凭证类型。\",\n        \"credentialSetupRequired\": \"无法登录，需要设置凭证。\",\n        \"identityProviderNotUniqueMessage\": \"该域支持多个身份提供程序。无法确定应使用哪个身份提供程序进行身份验证。\",\n        \"emailVerifiedMessage\": \"您的电子邮件地址已通过验证。\",\n        \"emailVerifiedAlreadyMessage\": \"您的电子邮件地址已被验证通过。\",\n        \"staleEmailVerificationLink\": \"您点击的链接是旧的过期链接，已经不再有效。 也许您已经验证了您的电子邮件。\",\n        \"identityProviderAlreadyLinkedMessage\": \"{0} 返回的联合身份已链接到另一个用户。\",\n        \"confirmAccountLinking\": \"确认将身份提供者 {1} 的账户 {0} 与您的账户链接。\",\n        \"confirmEmailAddressVerification\": \"确认电子邮件地址 {0} 的有效性。\",\n        \"confirmExecutionOfActions\": \"执行以下操作\",\n        \"locale_ar\": \"عربي\",\n        \"locale_ca\": \"Català\",\n        \"locale_cs\": \"Čeština\",\n        \"locale_da\": \"Dansk\",\n        \"locale_de\": \"Deutsch\",\n        \"locale_en\": \"English\",\n        \"locale_es\": \"Español\",\n        \"locale_fi\": \"Suomi\",\n        \"locale_fr\": \"Français\",\n        \"locale_hu\": \"Magyar\",\n        \"locale_it\": \"Italiano\",\n        \"locale_ja\": \"日本語\",\n        \"locale_lt\": \"Lietuvių\",\n        \"locale_lv\": \"Latviešu\",\n        \"locale_nl\": \"Nederlands\",\n        \"locale_no\": \"Norsk\",\n        \"locale_pl\": \"Polski\",\n        \"locale_pt_BR\": \"Português (Brasil)\",\n        \"locale_ru\": \"Русский\",\n        \"locale_sk\": \"Slovenčina\",\n        \"locale_sv\": \"Svenska\",\n        \"locale_th\": \"ไทย\",\n        \"locale_tr\": \"Türkçe\",\n        \"locale_zh-CN\": \"中文简体\",\n        \"backToApplication\": \"&laquo; 回到应用\",\n        \"missingParameterMessage\": \"缺少参数 \\: {0}\",\n        \"clientNotFoundMessage\": \"客户端未找到\",\n        \"clientDisabledMessage\": \"客户端已禁用\",\n        \"invalidParameterMessage\": \"无效的参数 \\: {0}\",\n        \"alreadyLoggedIn\": \"您已经登录。\",\n        \"differentUserAuthenticated\": \"您已经以不同用户 ''{0}'' 的身份在此会话中进行了身份验证。请先注销。\",\n        \"brokerLinkingSessionExpired\": \"已请求与经纪人帐户链接，但当前会话不再有效。\",\n        \"proceedWithAction\": \"&raquo; 点击此处继续\",\n        \"acrNotFulfilled\": \"未满足身份验证要求\",\n        \"requiredAction.CONFIGURE_TOTP\": \"配置OTP\",\n        \"requiredAction.TERMS_AND_CONDITIONS\": \"条款和条件\",\n        \"requiredAction.UPDATE_PASSWORD\": \"更新密码\",\n        \"requiredAction.UPDATE_PROFILE\": \"更新个人资料\",\n        \"requiredAction.VERIFY_EMAIL\": \"验证电子邮箱\",\n        \"requiredAction.CONFIGURE_RECOVERY_AUTHN_CODES\": \"生成恢复代码\",\n        \"requiredAction.webauthn-register-passwordless\": \"Webauthn注册免密码\",\n        \"invalidTokenRequiredActions\": \"链接中包含的必需操作无效\",\n        \"doX509Login\": \"您将被登录为\\：\",\n        \"clientCertificate\": \"X509客户端证书\\：\",\n        \"noCertificate\": \"[No Certificate]\",\n        \"pageNotFound\": \"页面未找到\",\n        \"internalServerError\": \"发生内部服务器错误\",\n        \"console-username\": \"用户名：\",\n        \"console-password\": \"密码：\",\n        \"console-otp\": \"一次性密码：\",\n        \"console-new-password\": \"新密码：\",\n        \"console-confirm-password\": \"确认密码：\",\n        \"console-update-password\": \"需要更新您的密码。\",\n        \"console-verify-email\": \"您需要验证您的电子邮件地址。我们已向 {0} 发送了一封包含验证码的电子邮件。请将此代码输入下面的输入框中。\",\n        \"console-email-code\": \"电子邮件验证码：\",\n        \"console-accept-terms\": \"接受条款？[y/n]：\",\n        \"console-accept\": \"y\",\n        \"openshift.scope.user_info\": \"用户信息\",\n        \"openshift.scope.user_check-access\": \"用户访问信息\",\n        \"openshift.scope.user_full\": \"完全访问\",\n        \"openshift.scope.list-projects\": \"列出项目\",\n        \"saml.post-form.title\": \"身份验证重定向\",\n        \"saml.post-form.message\": \"重定向中，请稍候。\",\n        \"saml.post-form.js-disabled\": \"JavaScript已被禁用。我们强烈建议启用它。点击下面的按钮继续。\",\n        \"saml.artifactResolutionServiceInvalidResponse\": \"无法解析构造。\",\n        \"otp-display-name\": \"验证器应用程序\",\n        \"otp-help-text\": \"从验证器应用输入验证码。\",\n        \"otp-reset-description\": \"应删除哪个OTP配置？\",\n        \"password-display-name\": \"密码\",\n        \"password-help-text\": \"通过输入密码登录。\",\n        \"auth-username-form-display-name\": \"用户名\",\n        \"auth-username-form-help-text\": \"输入用户名已开始登录\",\n        \"auth-username-password-form-display-name\": \"用户名和密码\",\n        \"auth-username-password-form-help-text\": \"输入用户名和密码以登录。\",\n        \"auth-recovery-authn-code-form-display-name\": \"恢复代码\",\n        \"auth-recovery-authn-code-form-help-text\": \"输入先前生成的恢复代码。\",\n        \"auth-recovery-code-info-message\": \"输入指定的恢复代码。\",\n        \"auth-recovery-code-prompt\": \"恢复代码 #{0}\",\n        \"auth-recovery-code-header\": \"使用恢复代码登录\",\n        \"recovery-codes-error-invalid\": \"无效的代码\",\n        \"recovery-code-config-header\": \"恢复代码\",\n        \"recovery-code-config-warning-title\": \"离开此页面后，这些恢复代码将不再显示\",\n        \"recovery-code-config-warning-message\": \"确保打印、下载或将它们复制到密码管理器，并将其保存在安全的地方。取消此设置将从您的帐户中删除这些恢复代码。\",\n        \"recovery-codes-print\": \"打印\",\n        \"recovery-codes-download\": \"下载\",\n        \"recovery-codes-copy\": \"复制\",\n        \"recovery-codes-copied\": \"已复制\",\n        \"recovery-codes-confirmation-message\": \"我已将这些代码保存在安全的地方\",\n        \"recovery-codes-action-complete\": \"完成设置\",\n        \"recovery-codes-action-cancel\": \"取消设置\",\n        \"recovery-codes-download-file-header\": \"将这些恢复代码保存在安全的地方。\",\n        \"recovery-codes-download-file-description\": \"恢复代码是一次性验证码，如果您无法访问您的验证器，可以使用它们登录到您的帐户。\",\n        \"recovery-codes-download-file-date\": \"这些代码生成于\",\n        \"recovery-codes-label-default\": \"恢复代码\",\n        \"webauthn-display-name\": \"安全密钥\",\n        \"webauthn-help-text\": \"使用您的安全密钥登录。\",\n        \"webauthn-passwordless-display-name\": \"安全密钥\",\n        \"webauthn-passwordless-help-text\": \"使用您的安全密钥进行无密码登录。\",\n        \"webauthn-login-title\": \"安全密钥登录\",\n        \"webauthn-registration-title\": \"安全密钥注册\",\n        \"webauthn-available-authenticators\": \"可用的安全密钥\",\n        \"webauthn-unsupported-browser-text\": \"此浏览器不支持 WebAuthn。请尝试其他浏览器或联系管理员。\",\n        \"webauthn-doAuthenticate\": \"使用安全密钥登录\",\n        \"webauthn-createdAt-label\": \"创建于\",\n        \"webauthn-error-title\": \"安全密钥错误\",\n        \"webauthn-error-registration\": \"注册您的安全密钥失败。<br/> {0}\",\n        \"webauthn-error-api-get\": \"通过安全密钥进行身份验证失败。<br/> {0}\",\n        \"webauthn-error-different-user\": \"首次经过身份验证的用户不是通过安全密钥经过身份验证的用户。\",\n        \"webauthn-error-auth-verification\": \"安全密钥身份验证结果无效。<br/> {0}\",\n        \"webauthn-error-register-verification\": \"安全密钥注册结果无效。<br/> {0}\",\n        \"webauthn-error-user-not-found\": \"通过安全密钥进行身份验证的用户未知。\",\n        \"identity-provider-redirector\": \"连接到另一个身份提供者\",\n        \"identity-provider-login-label\": \"或使用以下方式登录\",\n        \"idp-email-verification-display-name\": \"电子邮件验证\",\n        \"idp-email-verification-help-text\": \"通过验证您的电子邮件来链接您的帐户。\",\n        \"idp-username-password-form-display-name\": \"用户名和密码\",\n        \"idp-username-password-form-help-text\": \"通过登录来链接您的帐户。\",\n        \"finalDeletionConfirmation\": \"如果将您的帐户删除，将无法恢复。如果要保留您的帐户，请点击取消。\",\n        \"irreversibleAction\": \"此操作不可逆转\",\n        \"deleteAccountConfirm\": \"删除帐户确认\",\n        \"deletingImplies\": \"删除您的帐户意味着：\",\n        \"errasingData\": \"删除您的所有数据\",\n        \"loggingOutImmediately\": \"立即将您注销\",\n        \"accountUnusable\": \"此帐户将无法再次使用应用程序\",\n        \"userDeletedSuccessfully\": \"用户删除成功\",\n        \"access-denied\": \"访问被拒绝\",\n        \"access-denied-when-idp-auth\": \"使用 {0} 进行身份验证时被拒绝访问\",\n        \"frontchannel-logout.title\": \"正在注销\",\n        \"frontchannel-logout.message\": \"您正在从以下应用程序注销\",\n        \"logoutConfirmTitle\": \"注销\",\n        \"logoutConfirmHeader\": \"您确定要注销吗？\",\n        \"doLogout\": \"注销\",\n        \"readOnlyUsernameMessage\": \"由于用户名是只读的，您无法更新用户名。\"\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\n\nimport { cn } from \"lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","\"use client\";\nimport { cn } from \"lib/utils\";\nimport React, { useEffect, useRef } from \"react\";\nimport { createNoise3D } from \"simplex-noise\";\n\nexport const WavyBackground = ({\n                                   children,\n                                   className,\n                                   containerClassName,\n                                   colors,\n                                   waveWidth,\n                                   backgroundFill,\n                                   blur = 10,\n                                   speed = \"fast\",\n                                   waveOpacity = 0.5,\n                                   ...props\n                               }: {\n    children?: any;\n    className?: string;\n    containerClassName?: string;\n    colors?: string[];\n    waveWidth?: number;\n    backgroundFill?: string;\n    blur?: number;\n    speed?: \"slow\" | \"fast\";\n    waveOpacity?: number;\n    [key: string]: any;\n}) => {\n    const noise = createNoise3D();\n    let w: number,\n        h: number,\n        nt: number,\n        i: number,\n        x: number,\n        ctx: any,\n        canvas: any;\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const getSpeed = () => {\n        switch (speed) {\n            case \"slow\":\n                return 0.001;\n            case \"fast\":\n                return 0.002;\n            default:\n                return 0.001;\n        }\n    };\n\n    const init = () => {\n        canvas = canvasRef.current;\n        ctx = canvas.getContext(\"2d\");\n        w = ctx.canvas.width = window.innerWidth;\n        h = ctx.canvas.height = window.innerHeight;\n        ctx.filter = `blur(${blur}px)`;\n        nt = 0;\n        window.onresize = function () {\n            w = ctx.canvas.width = window.innerWidth;\n            h = ctx.canvas.height = window.innerHeight;\n            ctx.filter = `blur(${blur}px)`;\n        };\n        render();\n    };\n\n    const waveColors = colors ?? [\n        \"#38bdf8\",\n        \"#818cf8\",\n        \"#c084fc\",\n        \"#e879f9\",\n        \"#22d3ee\",\n    ];\n    const drawWave = (n: number) => {\n        nt += getSpeed();\n        for (i = 0; i < n; i++) {\n            ctx.beginPath();\n            ctx.lineWidth = waveWidth || 50;\n            ctx.strokeStyle = waveColors[i % waveColors.length];\n            for (x = 0; x < w; x += 5) {\n                var y = noise(x / 800, 0.3 * i, nt) * 100;\n                ctx.lineTo(x, y + h * 0.5); // adjust for height, currently at 50% of the container\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n    };\n\n    let animationId: number;\n    const render = () => {\n        ctx.fillStyle = backgroundFill || \"white\";\n        ctx.globalAlpha = waveOpacity || 0.5;\n        ctx.fillRect(0, 0, w, h);\n        drawWave(5);\n        animationId = requestAnimationFrame(render);\n    };\n\n    useEffect(() => {\n        init();\n        return () => {\n            cancelAnimationFrame(animationId);\n        };\n    }, []);\n\n    return (\n        <div\n            className={cn(\n                \"h-screen flex flex-col items-center justify-center w-full\",\n                containerClassName\n            )}\n        >\n            <canvas\n                className=\"absolute inset-0 z-0\"\n                ref={canvasRef}\n                id=\"canvas\"\n            ></canvas>\n            <div className={cn(\"relative z-10\", className)} {...props}>\n                {children}\n            </div>\n        </div>\n    );\n};\n","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport {useState} from \"react\";\nimport {assert} from \"keycloakify/tools/assert\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {usePrepareTemplate} from \"keycloakify/lib/usePrepareTemplate\";\nimport {type TemplateProps} from \"keycloakify/login/TemplateProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"./kcContext\";\nimport type {I18n} from \"./i18n\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger\n} from \"components/ui/dropdown-menu\";\nimport {Button, buttonVariants} from \"components/ui/button\";\nimport {cn} from \"lib/utils\";\nimport {Alert, AlertDescription, AlertTitle} from \"../components/ui/alert\";\nimport {ArrowLeftIcon, CaretLeftIcon, ExclamationTriangleIcon, PersonIcon} from \"@radix-ui/react-icons\";\nimport {Card, CardContent, CardTitle} from \"../components/ui/card\";\nimport {Boxes} from \"../components/ui/background-boxes\";\nimport {Meteors} from \"../components/ui/meteors\";\nimport {WavyBackground} from \"../components/ui/wavy-background\";\nimport {BackgroundBeams} from \"../components/ui/background-beams\";\nimport {Tooltip, TooltipContent, TooltipProvider, TooltipTrigger} from \"../components/ui/tooltip\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag} = i18n;\n\n    const {realm, locale, messagesPerField, auth, url, message, isAppInitiatedAction} = kcContext;\n\n    const {isReady} = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            // `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n            // `${url.resourcesPath}/css/login.css`\n        ],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": getClassName(\"kcBodyClass\")\n    });\n\n\n    if (!isReady) {\n        return null;\n    }\n\n    return (\n        <div>\n            <div\n                className=\"h-screen relative w-full overflow-hidden flex flex-col items-center justify-center\">\n                <WavyBackground className={\"w-full\"} speed={\"slow\"} colors={[\"#d8f3dc\", \"#74c69d\", \"#1b4332\"]}>\n                    {/*<BackgroundBeams/>*/}\n                    {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                        <DropdownMenu>\n                            <DropdownMenuTrigger className={cn(\n                                \"z-10\",\n                                buttonVariants({variant: \"ghost\"}),\n                                \"absolute right-4 top-4 md:right-8 md:top-8\"\n                            )}> {labelBySupportedLanguageTag[currentLanguageTag]}</DropdownMenuTrigger>\n                            <DropdownMenuContent>\n                                {locale.supported.map(({languageTag}) => (\n                                    <DropdownMenuItem\n                                        onClick={() => changeLocale(languageTag)}>  {labelBySupportedLanguageTag[languageTag]}</DropdownMenuItem>\n                                ))}\n                            </DropdownMenuContent>\n                        </DropdownMenu>\n                    )}\n                    <div className=\"absolute right-4 top-4 md:left-8 md:top-8 flex items-center z-20\">\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"mr-2 h-6 w-6\"\n                        >\n                            <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\"/>\n                        </svg>\n                        {msg(\"loginTitleHtml\", realm.displayNameHtml)}\n                    </div>\n                    <div\n                        className=\"container relative h-screen flex items-center justify-center md:grid lg:max-w-none lg:px-0 z-20\">\n                        <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 items-center\">\n                            <Card id=\"kc-content\" className={\"z-20 px-8 min-w-80\"}>\n                                {auth !== undefined && auth.showUsername && !auth.showResetCredentials && (\n                                    <div className={\" relative w-full top-6 h-0\"}><Button variant={\"outline\"}\n                                                                                          onClick={() => window.location.href = url.loginRestartFlowUrl}>\n                                        <ArrowLeftIcon/></Button></div>\n                                )}\n                                <CardContent id=\"kc-content-wrapper\"\n                                             className={\"flex flex-col p-0 min-w-[450px] items-center\"}>\n                                    {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                                    <div className={'flex justify-center'}>\n                                        <h1 className={\"text-2xl font-semibold tracking-tight text-center mt-6 mb-3\"}\n                                            id=\"kc-page-title\">{headerNode}</h1>\n                                    </div>\n\n                                    {auth !== undefined && auth.showUsername && (\n                                        <>\n                                            <div\n                                                className={\"mt-3 mb-3 w-[350px] bg-slate-500 flex items-center shadow-md text-white rounded-lg p-2 \"}>\n                                                <PersonIcon className={\"mr-1\"}/>\n                                                <span\n                                                    className={\"font text-white flex ml-1 \"}>\n                                               {auth?.attemptedUsername}</span>\n                                                {auth.showResetCredentials && (\n                                                    <a id=\"reset-login\" href={url.loginRestartFlowUrl}\n                                                       className={\"text-sm items-center relative w-auto text-slate-300 inline-block hover:underline ml-1\"}>\n                                                        (Not You?)\n                                                    </a>\n                                                )}\n                                            </div>\n\n                                        </>\n                                    )}\n                                    {displayMessage && message !== undefined && (messagesPerField.existsError(\"username\") && messagesPerField.existsError(\"password\")) && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                                        <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                            {message.type === \"success\" &&\n                                                <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                            {message.type === \"warning\" &&\n                                                <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                            {message.type === \"error\" &&\n                                                <Alert variant=\"destructive\" className={\"mb-2 w-[350px] shadow-md\"}>\n                                                    <AlertTitle className={\"flex items-center gap-1\"}>\n                                                        <ExclamationTriangleIcon\n                                                            className=\"h-4 w-4\"/>{msg('errorTitle')}</AlertTitle>\n                                                    <AlertDescription>\n                                                        {message.summary}\n                                                    </AlertDescription>\n                                                </Alert>\n                                            }\n                                            {message.type === \"info\" &&\n                                                <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                        </div>\n                                    )}\n                                    {children}\n                                    {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent ? (\n                                        <form\n                                            id=\"kc-select-try-another-way-form\"\n                                            action={url.loginAction}\n                                            method=\"post\"\n                                        >\n\n                                            <div>\n                                                <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\"/>\n                                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                                <Button\n                                                    id=\"try-another-way\"\n                                                    onClick={() => {\n                                                        document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                        return false;\n                                                    }}\n                                                    variant={\"link\"}\n                                                    className={``}\n                                                >\n                                                    {msg(\"doTryAnotherWay\")}\n                                                </Button>\n                                            </div>\n\n                                        </form>\n                                    ) : <div className={\"mb-3\"}/>}\n                                    {displayInfo && (\n                                        <>\n                                            {infoNode}\n                                        </>\n                                    )}\n                                </CardContent>\n                            </Card>\n                        </div>\n                    </div>\n                </WavyBackground>\n            </div>\n        </div>\n    )\n        ;\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\n\nexport default function LoginResetPassword(props: PageProps<Extract<KcContext, {\n    pageId: \"login-reset-password.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, realm, auth} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(`${msgStr(\"emailForgotTitle\")} - ${kcContext.realm.displayName}`)\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayMessage={false}\n            headerNode={msg(\"emailForgotTitle\")}\n            infoNode={msg(\"emailInstruction\")}\n        >\n            <div className=\"lg:p-8 lg:pb-4 flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {/*<div id=\"kc-form\" className={clsx(realm.password && social.providers !== undefined && getClassName(\"kcContentWrapperClass\"))}>*/}\n                    {/*    <div*/}\n                    <form id=\"kc-reset-password-form\" className={\"grid gap-3 items-center\"} action={url.loginAction}\n                          method=\"post\">\n                        <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n                            <Label htmlFor=\"autoCompleteHelper\"> {!realm.loginWithEmailAllowed\n                                ? msg(\"username\")\n                                : !realm.registrationEmailAsUsername\n                                    ? msg(\"usernameOrEmail\")\n                                    : msg(\"email\")}</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                autoFocus\n                                defaultValue={auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined}\n                            />\n                        </div>\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                            <Button\n                                className={\"w-full\"}\n                                type=\"submit\">\n                                {msgStr(\"doSubmit\")}\n                            </Button>\n                        </div>\n\n                    </form>\n\n\n                    <div className={\"text-sm mt-3 hover:underline text-slate-500\"}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}\n","import {useState, type FormEventHandler} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Input} from \"components/ui/input\";\nimport {Button, buttonVariants} from \"../../components/ui/button\";\nimport {Checkbox} from \"../../components/ui/checkbox\";\nimport {cn} from \"../../lib/utils\";\nimport {Label} from \"../../components/ui/label\";\nimport {Separator} from \"../../components/ui/separator\";\nimport {GitHubLogoIcon} from '@radix-ui/react-icons'\nimport {\n    IconBrandBitbucket,\n    IconBrandFacebookFilled, IconBrandGithub, IconBrandGitlab,\n    IconBrandGoogle, IconBrandInstagram, IconBrandLinkedin, IconBrandOpenSource, IconBrandPaypal,\n    IconBrandStackoverflow,\n    IconBrandTwitter,\n    IconBrandWindows\n} from \"@tabler/icons-react\";\nimport {useTitle} from \"react-use\";\n\nconst my_custom_param = new URL(window.location.href).searchParams.get(\"my_custom_param\");\n\nif (my_custom_param !== null) {\n    console.log(\"my_custom_param:\", my_custom_param);\n}\nconst prividerIdIconMap = {\n    \"microsoft\": <IconBrandWindows/>,\n    \"google\": <IconBrandGoogle/>,\n    \"facebook\": <IconBrandFacebookFilled/>,\n    \"twitter\": <IconBrandTwitter/>,\n    \"stackoverflow\": <IconBrandStackoverflow/>,\n    \"gitlab\": <IconBrandGitlab/>,\n    \"paypal\": <IconBrandPaypal/>,\n    \"instagram\": <IconBrandInstagram/>,\n    \"linkedin\": <IconBrandLinkedin/>,\n    \"github\": <IconBrandGithub/>,\n    \"bitbucket\": <IconBrandBitbucket/>,\n    \"openshift\": <IconBrandOpenSource/>\n}\n\nexport default function LoginUsername(props: PageProps<Extract<KcContext, { pageId: \"login-username.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {social, realm, url, usernameHidden, login, auth, registrationDisabled} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(i18n.msgStr(\"loginTitle\", kcContext.realm.displayName))\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        //NOTE: Even if we login with email Keycloak expect username and password in\n        //the POST request.\n        formElement.querySelector(\"input[name='email']\")?.setAttribute(\"name\", \"username\");\n\n        formElement.submit();\n    });\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            displayInfo={social.displayInfo}\n            displayWide={realm.password && social.providers !== undefined}\n            headerNode={msg(\"doLogIn\")}\n            infoNode={\n                realm.password &&\n                realm.registrationAllowed &&\n                !registrationDisabled && (\n                    <div id=\"kc-registration\" className={\"justify-center w-full items-center text-center mb-3\"}>\n                        <Separator className={\"mb-1 w-full mt-1\"}/>\n                        <span className={\"text-slate-500 text-sm\"}>\n                            {msg(\"noAccount\")} {' '}\n                            <a tabIndex={6} href={url.registrationUrl} className={\"text-slate-950\"}>\n                                {msg(\"doRegister\")}\n                            </a>\n                        </span>\n                    </div>\n                )\n            }\n        >\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    {realm.password && (\n                        <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"\n                              className={\"flex flex-col gap-3 items-center w-full min-w-[350px]\"}>\n                            <div className={\"w-full flex flex-col items-center justify-center\"}>\n                                {!usernameHidden &&\n                                    (() => {\n                                        const label = !realm.loginWithEmailAllowed\n                                            ? \"username\"\n                                            : realm.registrationEmailAsUsername\n                                                ? \"email\"\n                                                : \"usernameOrEmail\";\n\n                                        const autoCompleteHelper: typeof label = label === \"usernameOrEmail\" ? \"username\" : label;\n\n                                        return (\n                                            <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n                                                <Label htmlFor={autoCompleteHelper}\n                                                       className={getClassName(\"kcLabelClass\")}>\n                                                    {msg(label)}\n                                                </Label>\n                                                <Input\n                                                    tabIndex={1}\n                                                    id={autoCompleteHelper}\n                                                    className={getClassName(\"kcInputClass\")}\n                                                    //NOTE: This is used by Google Chrome auto fill so we use it to tell\n                                                    //the browser how to pre fill the form but before submit we put it back\n                                                    //to username because it is what keycloak expects.\n                                                    name={autoCompleteHelper}\n                                                    defaultValue={login.username ?? \"\"}\n                                                    type=\"text\"\n                                                    autoFocus={true}\n                                                    autoComplete=\"off\"\n                                                />\n                                            </div>\n                                        );\n                                    })()}\n                            </div>\n                            <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                                <div id=\"kc-form-options\">\n                                    {realm.rememberMe && !usernameHidden && (\n                                        <div className=\"flex items-center space-x-2\">\n                                            <Checkbox\n                                                tabIndex={3}\n                                                id=\"rememberMe\"\n                                                name=\"rememberMe\"\n                                                defaultChecked={login.rememberMe === \"on\"}\n                                            />\n                                            <label\n                                                htmlFor=\"rememberMe\"\n                                                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                                            >\n                                                {msg(\"rememberMe\")}\n                                            </label>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                            <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                                <Button\n                                    tabIndex={4}\n                                    name=\"login\"\n                                    id=\"kc-login\"\n                                    type=\"submit\"\n                                    className={\"min-w-[200px]\"}\n                                    disabled={isLoginButtonDisabled}\n                                >\n                                    {msgStr(\"doLogIn\")}\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </div>\n                {realm.password && social.providers !== undefined && (\n                    <div\n                        id=\"kc-social-providers\"\n                        className={'flex gap-4 w-auto'}\n                    >\n                        <Separator orientation=\"vertical\"/>\n                        <div\n                            className={\"grid flex-col flex-wrap grid-cols-2 gap-2 w-[320px]\"}\n                        >\n                            {social.providers.map(p => (\n                                <Button onClick={() => window.location.href = p.loginUrl} id={`zocial-${p.alias}`}\n                                        key={p.providerId}\n                                        className={`${buttonVariants({variant: \"secondary\"})} w-[160px] flex justify-start gap-2`}>\n                                    {/*@ts-ignore*/}\n                                    {prividerIdIconMap[p.providerId]}\n                                    <span>{p.displayName}</span>\n                                </Button>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n\n        </Template>\n    );\n}\n","import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { FormEventHandler } from \"react\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\nexport default function LoginPassword(props: PageProps<Extract<KcContext, { \"pageId\": \"login-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { realm, url, login } = kcContext;\n\n    const { msg, msgStr } = i18n;\n    useTitle(i18n.msgStr(\"loginTitle\", kcContext.realm.displayName))\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        formElement.submit();\n    });\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"doLogIn\")}>\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] `}>\n                    <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\"  className={\"grid gap-3 items-center\"}>\n                        <div className={getClassName(\"kcFormGroupClass\")}>\n                            <Label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"password\")}\n                            </Label>\n                            <Input\n                                tabIndex={2}\n                                id=\"password\"\n                                className={getClassName(\"kcInputClass\")}\n                                name=\"password\"\n                                type=\"password\"\n                                autoFocus={true}\n                                autoComplete=\"on\"\n                                defaultValue={login.password ?? \"\"}\n                            />\n                            {realm.resetPasswordAllowed && (\n                                <span className={\"text-sm mt-1 text-slate-500 mb-3\"}>\n                                            <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                                {msg(\"doForgotPassword\")}\n                                            </a>\n                                        </span>\n                            )}\n                        </div>\n                        <div id=\"kc-form-buttons\" >\n                            <Button\n                                tabIndex={4}\n                                className={\"w-full\"}\n                                name=\"login\"\n                                id=\"kc-login\"\n                                type=\"submit\"\n                                disabled={isLoginButtonDisabled}\n                            >\n                                {msgStr(\"doLogIn\")}\n                            </Button>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </Template>\n    );\n}","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <Cross2Icon className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import React, {ReactNode, useEffect, useRef, useState} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {base64url} from \"rfc4648\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {assert} from \"tsafe/assert\";\nimport {is} from \"tsafe/is\";\nimport {typeGuard} from \"tsafe/typeGuard\";\nimport {Button} from \"../../components/ui/button\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogDescription,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle\n} from \"../../components/ui/dialog\";\nimport {Label} from \"../../components/ui/label\";\nimport {Input} from \"../../components/ui/input\";\nimport {useTitle} from \"react-use\";\n\n\n\nexport default function WebauthnRegister(props: PageProps<Extract<KcContext, {\n    pageId: \"webauthn-register.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {\n        url,\n        attestationConveyancePrefrence,\n        authenticatorAttachment,\n        challenge,\n        createTimeout,\n        excludeCredentialsId,\n        requireResidentKey,\n        userid,\n        username,\n        signatureAlgorithms,\n        userVerificationRequirement,\n        rpEntityName,\n        rpId,\n        isSetRetry,\n        isAppInitiatedAction\n    } = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(`${msgStr(\"webauthn-registration-title\")} - ${kcContext.realm.displayName}`)\n    const [clientDataJSON, setClientDataJSON] = useState(\"\");\n    const [attestationObject, setAttestationObject] = useState(\"\");\n    const [publicKeyCredentialId, setPublicKeyCredentialId] = useState(\"\");\n    const [authenticatorLabel, setAuthenticatorLabel] = useState(\"\");\n    const [transports, setTransports] = useState<string[] | string>(\"\");\n    const [error, setError] = useState(\"\");\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [isReadyToSubmit, setIsReadyToSubmit] = useState(false);\n\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n\n    const registerSecurityKey = useConstCallback(async () => {\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(\"WebAuthn is not supported in this browser.\");\n            if (formElementRef.current) {\n                formElementRef.current.submit();\n            }\n            return;\n        }\n\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = getPubKeyCredParams(signatureAlgorithms);\n        let rp: { name: string; id?: string } = {name: rpEntityName, id: rpId};\n        let publicKey: PublicKeyCredentialCreationOptions = {\n            challenge: base64url.parse(challenge, {loose: true}),\n            rp: rp,\n            user: {\n                id: base64url.parse(userid, {loose: true}),\n                name: username,\n                displayName: username\n            },\n            pubKeyCredParams: pubKeyCredParams as PublicKeyCredentialParameters[],\n            attestation:\n                attestationConveyancePrefrence !== \"not specified\" ? (attestationConveyancePrefrence as AttestationConveyancePreference) : undefined\n        };\n        let authenticatorSelection = {};\n        let isAuthenticatorSelectionSet = false;\n\n        if (authenticatorAttachment !== \"not specified\") {\n            authenticatorSelection = {authenticatorAttachment: authenticatorAttachment};\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (requireResidentKey !== \"not specified\") {\n            if (requireResidentKey === \"Yes\") {\n                authenticatorSelection = {...authenticatorSelection, requireResidentKey: true};\n            } else {\n                authenticatorSelection = {...authenticatorSelection, requireResidentKey: false};\n            }\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (userVerificationRequirement !== \"not specified\") {\n            authenticatorSelection = {...authenticatorSelection, userVerification: userVerificationRequirement};\n            isAuthenticatorSelectionSet = true;\n        }\n\n        if (isAuthenticatorSelectionSet) {\n            publicKey = {...publicKey, authenticatorSelection: authenticatorSelection};\n        }\n\n        if (createTimeout !== 0) {\n            publicKey = {...publicKey, timeout: createTimeout * 1000};\n        }\n        let excludeCredentials = getExcludeCredentials(excludeCredentialsId);\n        if (excludeCredentials && excludeCredentials.length !== 0) {\n            publicKey = {...publicKey, excludeCredentials: excludeCredentials};\n        }\n        try {\n            const result = await navigator.credentials.create({publicKey});\n\n            if (!result || result.type !== \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n\n            const response: AuthenticatorAttestationResponse = result.response as unknown as AuthenticatorAttestationResponse;\n\n            const clientDataJSON = response.clientDataJSON;\n            const attestationObject = response.attestationObject;\n\n            assert(\n                typeGuard<AuthenticatorAttestationResponse>(response, response.attestationObject instanceof ArrayBuffer),\n                \"response not an AuthenticatorAttestationResponse\"\n            );\n\n            setClientDataJSON(base64url.stringify(new Uint8Array(clientDataJSON), {\"pad\": false}));\n            setAttestationObject(base64url.stringify(new Uint8Array(attestationObject), {pad: false}));\n            setPublicKeyCredentialId(base64url.stringify(new Uint8Array(result.rawId), {pad: false}));\n\n            //@ts-ignore\n            if (typeof response.getTransports === \"function\") {\n                //@ts-ignore\n                let transports = response.getTransports();\n                if (transports) {\n                    setTransports(getTransportsAsString(transports));\n                }\n            } else {\n                console.log(\"Your browser is not able to recognize supported transport media for the authenticator.\");\n            }\n\n\n            setDialogOpen(true);\n        } catch (err) {\n            setError(String(err));\n            setIsReadyToSubmit(true);\n        }\n\n    });\n    const onFinishNameInput = () => {\n        if (!Boolean(authenticatorLabel)) {\n            setAuthenticatorLabel(msgStr(\"setAuthenticatorNamePlaceHolder\"))\n        }\n        setDialogOpen(false)\n        setIsReadyToSubmit(true);\n    }\n    const getPubKeyCredParams = (sigAlgList: number[]): PublicKeyCredentialParameters[] => {\n        let pubKeyCredParams: PublicKeyCredentialParameters[] = [];\n        if (signatureAlgorithms.length === 0) {\n            let alg: COSEAlgorithmIdentifier = -7;\n            let type: PublicKeyCredentialType = \"public-key\";\n            let object: PublicKeyCredentialParameters = {type, alg};\n            pubKeyCredParams.push(object);\n            return pubKeyCredParams;\n        }\n        for (let sigAlg of sigAlgList) {\n            pubKeyCredParams.push({type: \"public-key\", alg: sigAlg});\n        }\n        return pubKeyCredParams;\n    };\n\n    const getExcludeCredentials = (excludeCredentialIds: string) => {\n        let excludeCredentials: PublicKeyCredentialDescriptor[] = [];\n        if (!excludeCredentialIds) {\n            return excludeCredentials;\n        }\n        let excludeCredentialIdsList = excludeCredentialIds.split(\",\");\n        for (let excludeCredentialId of excludeCredentialIdsList) {\n            excludeCredentials.push({type: \"public-key\", id: base64url.parse(excludeCredentialId, {loose: true})});\n        }\n    };\n\n    const getTransportsAsString = (transportsList: string | string[]): string => {\n        if (transportsList === \"\" || transportsList.constructor !== Array) return \"\";\n\n        let transportsString = \"\";\n\n        for (let i = 0; i < transportsList.length; i++) {\n            transportsString += transportsList[i] + \",\";\n        }\n\n        return transportsString.slice(0, -1);\n    };\n\n    useEffect(() => {\n        if (isReadyToSubmit) {\n            submitForm();\n            setIsReadyToSubmit(false); // Reset the flag after submission\n        }\n    }, [isReadyToSubmit]);\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            headerNode={\n                <>\n                    <span className={getClassName(\"kcWebAuthnDefaultIcon\")} style={{marginRight: \"5px\"}}></span>\n                    {msg(\"webauthn-registration-title\")}\n                </>\n            }\n        >\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px] gap-2 mb-2`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form\n                        action={url.loginAction}\n                        ref={formElementRef}\n                        method=\"post\"\n                    >\n                        <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\" value={clientDataJSON}/>\n                        <input type=\"hidden\" id=\"attestationObject\" name=\"attestationObject\" value={attestationObject}/>\n                        <input type=\"hidden\" id=\"publicKeyCredentialId\" name=\"publicKeyCredentialId\"\n                               value={publicKeyCredentialId}/>\n                        <input type=\"hidden\" id=\"authenticatorLabel\" name=\"authenticatorLabel\"\n                               value={authenticatorLabel}/>\n                        <input type=\"hidden\" id=\"transports\" name=\"transports\" value={transports}/>\n                        <input type=\"hidden\" id=\"error\" name=\"error\" value={error}/>\n                    </form>\n                    <Button\n                        type=\"button\"\n                        onClick={registerSecurityKey}\n                        id=\"registerWebAuthn\"\n                    >\n                        {msgStr(\"doRegister\")}\n                    </Button>\n                    {!isSetRetry && isAppInitiatedAction && (\n                        <form action={url.loginAction}>\n                            <Button\n                                type=\"submit\"\n                                id=\"cancelWebAuthnAIA\"\n                                name=\"cancel-aia\"\n                                value=\"true\"\n                                variant={\"ghost\"}\n                                className={\"w-full\"}\n                            >\n                                {msg(\"doCancel\")}\n                            </Button>\n                        </form>\n                    )}\n                </div>\n                <Dialog open={dialogOpen}>\n                    <DialogContent>\n                        <DialogHeader>\n                            <DialogTitle>{msgStr(\"setAuthenticatorNameTitle\")}</DialogTitle>\n                            <DialogDescription>\n                                {msgStr(\"setAuthenticatorNameDescription\")}\n                            </DialogDescription>\n                        </DialogHeader>\n                        <div className=\"grid gap-4 py-4\">\n                            <div className=\"grid grid-cols-4 items-center gap-4\">\n                                <Input id=\"name\" className=\"col-span-3\"\n                                       placeholder={msgStr('setAuthenticatorNamePlaceHolder')}\n                                       value={authenticatorLabel} onChange={(event) => {\n                                    setAuthenticatorLabel(event.target.value)\n                                }}/>\n                            </div>\n                        </div>\n                        <DialogFooter>\n                            <Button onClick={onFinishNameInput}>Confirm</Button>\n                        </DialogFooter>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        </Template>\n    );\n}\n","import {useEffect, useRef, useState} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport type {MessageKey} from \"keycloakify/login/i18n/i18n\";\nimport {base64url} from \"rfc4648\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {assert} from \"tsafe/assert\";\nimport {is} from \"tsafe/is\";\nimport {typeGuard} from \"tsafe/typeGuard\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\nexport default function WebauthnAuthenticate(props: PageProps<Extract<KcContext, {\n    pageId: \"webauthn-authenticate.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {url} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(i18n.msgStr(\"loginTitle\", kcContext.realm.displayName))\n    const {authenticators, challenge, shouldDisplayAuthenticators, userVerification, rpId} = kcContext;\n    const createTimeout = Number(kcContext.createTimeout);\n    const isUserIdentified = kcContext.isUserIdentified == \"true\";\n\n    const formElementRef = useRef<HTMLFormElement>(null);\n\n    const [error, setError] = useState(\"\");\n    const submitForm = async (): Promise<void> => {\n        const formElement = formElementRef.current;\n\n        if (formElement === null) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            return submitForm();\n        }\n\n        formElement.submit();\n    };\n    const [webauthnResult, setWebauthnResult] = useState({} as any)\n    useEffect(() => {\n        if (error != null && webauthnResult.authenticatorData) {\n            console.log(webauthnResult)\n            submitForm()\n        }\n    }, [webauthnResult])\n    const webAuthnAuthenticate = useConstCallback(async () => {\n        debugger\n        // const allowCredentials = authenticators.authenticators.map(\n        //     authenticator =>\n        //         ({\n        //             id: base64url.parse(authenticator.credentialId, {loose: true}),\n        //             type: \"public-key\"\n        //         } as PublicKeyCredentialDescriptor)\n        // );\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(msgStr(\"webauthn-unsupported-browser-text\"));\n            submitForm();\n            return;\n        }\n\n\n        const publicKey: PublicKeyCredentialRequestOptions = {\n            rpId,\n            challenge: base64url.parse(challenge, {loose: true})\n        };\n\n        if (createTimeout !== 0) {\n            publicKey.timeout = createTimeout * 1000;\n        }\n\n        if (userVerification !== \"not specified\") {\n            publicKey.userVerification = userVerification;\n        }\n\n        try {\n            const result = await navigator.credentials.get({publicKey});\n            if (!result || result.type != \"public-key\") {\n                return;\n            }\n            assert(is<PublicKeyCredential>(result));\n            if (!(\"authenticatorData\" in result.response)) {\n                return;\n            }\n            const response = result.response;\n\n            const clientDataJSON = response.clientDataJSON;\n\n\n            assert(\n                //@ts-ignore\n                typeGuard<AuthenticatorAssertionResponse>(response, \"signature\" in response && response.authenticatorData instanceof ArrayBuffer),\n                \"response not an AuthenticatorAssertionResponse\"\n            );\n\n            const authenticatorData = response.authenticatorData;\n            const signature = response.signature;\n            setWebauthnResult({\n                clientDataJSON: base64url.stringify(new Uint8Array(clientDataJSON), {\"pad\": false}),\n                authenticatorData: base64url.stringify(new Uint8Array(authenticatorData), {\"pad\": false}),\n                signature: base64url.stringify(new Uint8Array(signature), {\"pad\": false}),\n                credentialId: result.id,\n                userHandle: base64url.stringify(new Uint8Array(response.userHandle!), {\"pad\": false})\n            })\n        } catch (err) {\n            setError(String(err));\n        }\n    });\n\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"webauthn-login-title\")} >\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[350px]`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form id=\"webauth\" action={url.loginAction} ref={formElementRef} method=\"post\">\n                        <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\"\n                               value={webauthnResult.clientDataJSON}/>\n                        <input type=\"hidden\" id=\"authenticatorData\" name=\"authenticatorData\"\n                               value={webauthnResult.authenticatorData}/>\n                        <input type=\"hidden\" id=\"signature\" name=\"signature\" value={webauthnResult.signature}/>\n                        <input type=\"hidden\" id=\"credentialId\" name=\"credentialId\" value={webauthnResult.credentialId}/>\n                        <input type=\"hidden\" id=\"userHandle\" name=\"userHandle\" value={webauthnResult.userHandle}/>\n                        <input type=\"hidden\" id=\"error\" name=\"error\" value={webauthnResult.error}/>\n                    </form>\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        {authenticators &&\n                            (() => (\n                                <form id=\"authn_select\" className={getClassName(\"kcFormClass\")}>\n                                    {authenticators.authenticators.map(authenticator => (\n                                        <input type=\"hidden\" name=\"authn_use_chk\" value={authenticator.credentialId}\n                                               key={authenticator.credentialId}/>\n                                    ))}\n                                </form>\n                            ))()}\n                        {authenticators &&\n                            shouldDisplayAuthenticators &&\n                            (() => (\n                                <>\n                                    {authenticators.authenticators.length > 1 && (\n                                        <p className={getClassName(\"kcSelectAuthListItemTitle\")}>{msg(\"webauthn-available-authenticators\")}</p>\n                                    )}\n                                    <div className={getClassName(\"kcFormClass\")}>\n                                        {authenticators.authenticators.map(authenticator => (\n                                            <div id=\"kc-webauthn-authenticator\"\n                                                 className={getClassName(\"kcSelectAuthListItemClass\")}>\n                                                <div className={getClassName(\"kcSelectAuthListItemIconClass\")}>\n                                                    <i\n                                                        className={clsx(\n                                                            (() => {\n                                                                const className = getClassName(authenticator.transports.iconClass as any);\n                                                                return className.includes(\" \")\n                                                                    ? className\n                                                                    : [className, getClassName(\"kcWebAuthnDefaultIcon\")];\n                                                            })(),\n                                                            getClassName(\"kcSelectAuthListItemIconPropertyClass\")\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemBodyClass\")}>\n                                                    <div\n                                                        id=\"kc-webauthn-authenticator-label\"\n                                                        className={getClassName(\"kcSelectAuthListItemHeadingClass\")}\n                                                    >\n                                                        {authenticator.label}\n                                                    </div>\n\n                                                    {authenticator.transports && authenticator.transports.displayNameProperties.length && (\n                                                        <div\n                                                            id=\"kc-webauthn-authenticator-transport\"\n                                                            className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}\n                                                        >\n                                                            {authenticator.transports.displayNameProperties.map(\n                                                                (transport: MessageKey, index: number) => (\n                                                                    <>\n                                                                        <span>{msg(transport)}</span>\n                                                                        {index < authenticator.transports.displayNameProperties.length - 1 && (\n                                                                            <span>{\", \"}</span>\n                                                                        )}\n                                                                    </>\n                                                                )\n                                                            )}\n                                                        </div>\n                                                    )}\n\n                                                    <div\n                                                        className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}>\n                                                    <span\n                                                        id=\"kc-webauthn-authenticator-created-label\">{msg(\"webauthn-createdAt-label\")}</span>\n                                                        <span\n                                                            id=\"kc-webauthn-authenticator-created\">{authenticator.createdAt}</span>\n                                                    </div>\n                                                </div>\n                                                <div className={getClassName(\"kcSelectAuthListItemFillClass\")}/>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </>\n                            ))()}\n                        <div id=\"kc-form-buttons\">\n                            <Button\n                                id=\"authenticateWebAuthnButton\"\n                                type=\"button\"\n                                onClick={webAuthnAuthenticate}\n                                autoFocus={true}\n                                className={\"w-full\"}\n                            >\n                                {msgStr(\"webauthn-doAuthenticate\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"keycloakify/login/kcContext\";\nimport type {I18n} from \"keycloakify/login/i18n\";\nimport {MouseEvent, useRef} from \"react\";\nimport {useConstCallback} from \"keycloakify/tools/useConstCallback\";\nimport {Card, CardContent, CardTitle} from \"../../components/ui/card\";\nimport {IconPassword, IconKey, IconNumbers, IconLock, IconUser} from '@tabler/icons-react'\nimport {useTitle} from \"react-use\";\n\n\nconst IconMap = {\n    \"kcAuthenticatorPasswordClass\": <IconPassword/>,\n    \"kcAuthenticatorOTPClass\": <IconNumbers/>,\n    kcAuthenticatorWebAuthnClass: <IconKey/>,\n    kcAuthenticatorWebAuthnPasswordlessClass: <IconKey/>,\n    \"kcAuthenticatorDefaultClass\": <IconUser/>\n\n}\nexport default function SelectAuthenticator(props: PageProps<Extract<KcContext, {\n    pageId: \"select-authenticator.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n    const {url, auth} = kcContext;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n    const {msg, msgStr} = i18n;\n    useTitle(`${msgStr(\"selectAnOption\")} - ${kcContext.realm.displayName}`)\n\n    const selectCredentialsForm = useRef<HTMLFormElement>(null);\n    const authExecIdInput = useRef<HTMLInputElement>(null);\n\n    const submitForm = useConstCallback(() => {\n        selectCredentialsForm.current?.submit();\n    });\n\n    const onSelectedAuthenticator = useConstCallback((event: MouseEvent<HTMLDivElement>) => {\n        const divElement = event.currentTarget;\n        const authExecId = divElement.dataset.authExecId;\n\n        if (!authExecIdInput.current || !authExecId) {\n            return;\n        }\n\n        authExecIdInput.current.value = authExecId;\n        submitForm();\n    });\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"loginChooseAuthenticator\")}>\n            <div className=\"flex gap-4 mb-3\">\n                <div className={`mx-auto flex w-full flex-col justify-center sm:w-[450px] `}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form\n                        id=\"kc-select-credential-form\"\n                        className={getClassName(\"kcFormClass\")}\n                        ref={selectCredentialsForm}\n                        action={url.loginAction}\n                        method=\"post\"\n                    >\n                        <div className={\"flex flex-col gap-2\"}>\n                            {auth.authenticationSelections.map((authenticationSelection, index) => (\n                                <Card key={index} className={'p-3 hover:bg-slate-100 cursor-pointer transition-colors'}\n                                      onClick={onSelectedAuthenticator}\n                                      data-auth-exec-id={authenticationSelection.authExecId}>\n                                    <CardTitle className={\"flex items-center gap-2\"}>\n                                        <>\n                                            {/*@ts-ignore*/}\n                                            {IconMap[authenticationSelection.iconCssClass]}{msg(authenticationSelection.displayName)}\n                                        </>\n                                    </CardTitle>\n                                    <CardContent className={\"p-0\"}>\n                                        {msg(authenticationSelection.helpText)}\n                                    </CardContent>\n                                </Card>\n                            ))}\n                            <input type=\"hidden\" id=\"authexec-hidden-input\" name=\"authenticationExecution\"\n                                   ref={authExecIdInput}/>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {useTitle} from \"react-use\";\nimport {Button} from \"../../components/ui/button\";\nimport {Alert, AlertDescription, AlertTitle} from \"../../components/ui/alert\";\nimport {IconFaceIdError} from \"@tabler/icons-react\";\n\nexport default function Error(props: PageProps<Extract<KcContext, { pageId: \"error.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {message, client} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(`${msgStr(\"doRegister\")} - ${kcContext.realm.displayName}`)\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"errorTitle\")}>\n            <div id=\"kc-error-message\" className={\"w-full flex flex-col gap-2 min-w-[450px]\"}>\n                <Alert className=\"shadow-md\" variant={\"destructive\"}>\n                    <AlertTitle className={\"flex gap-1 items-center\"}>\n                        <IconFaceIdError/> {msgStr(\"errorTitle\")}\n                    </AlertTitle>\n                    <AlertDescription>\n                        {message.summary}\n                    </AlertDescription>\n                </Alert>\n                {client !== undefined && client.baseUrl !== undefined && (\n                    <>\n\n                        <Button id=\"backToApplication\"\n                            //@ts-ignore\n                                onClick={() => window.location.href = client!.baseUrl}>\n                            {msg(\"backToApplication\")}\n                        </Button>\n                    </>\n                )}\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Alert, AlertDescription, AlertTitle} from \"../../components/ui/alert\";\nimport {ExclamationTriangleIcon} from \"@radix-ui/react-icons\";\nimport {Button} from \"../../components/ui/button\";\nimport {useTitle} from \"react-use\";\n\nexport default function WebauthnError(props: PageProps<Extract<KcContext, { pageId: \"webauthn-error.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {message, client} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(msgStr(\"webauthn-error-title\") + kcContext.realm.displayName)\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"errorTitle\")}>\n            <div className={`mx-auto flex w-full flex-col justify-center sm:w-[450px] gap-2 mb-2 items-center`}\n                 id=\"kc-form-wrapper\"\n                // className={clsx(\n                //     realm.password &&\n                //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                // )}\n            >\n                <Alert variant=\"destructive\" className={\"mb-2 w-full shadow-md\"}>\n                    <ExclamationTriangleIcon className=\"h-4 w-4\"/>\n                    {/*@ts-ignore*/}\n                    <AlertDescription dangerouslySetInnerHTML={{__html: message.summary}}>\n                    </AlertDescription>\n                </Alert>\n\n                <form id=\"kc-error-credential-form\"\n                      action={kcContext.url.loginAction}\n                      method=\"post\">\n                    <input type=\"hidden\" id=\"executionValue\" name=\"authenticationExecution\" value={\"retry\"}/>\n                    <input type=\"hidden\" id=\"isSetRetry\" name=\"isSetRetry\" value={kcContext.execution}/>\n                    <input type=\"hidden\" id=\"try-again\" name=\"try-again\"/>\n                    <Button className={\"min-w-[200px]\"} type={\"submit\"}>\n                        {msg(\"doTryAgain\")}\n                    </Button>\n                </form>\n\n\n                {kcContext.isAppInitiatedAction &&\n                    <form action={kcContext.url.loginAction}\n                          method=\"post\">\n                        <Button type=\"submit\"\n                                className={\"min-w-[200px]\"}\n                                variant={\"ghost\"}\n                                id=\"cancelWebAuthnAIA\" name=\"cancel-aia\" value=\"true\">{msg(\"doCancel\")}\n                        </Button>\n                    </form>\n                }\n                {/*{client !== undefined && client.baseUrl !== undefined && (*/}\n                {/*    <p>*/}\n                {/*        <a id=\"backToApplication\" href={client.baseUrl}>*/}\n                {/*            {msg(\"backToApplication\")}*/}\n                {/*        </a>*/}\n                {/*    </p>*/}\n                {/*)}*/}\n            </div>\n        </Template>\n    );\n}","import {clsx} from \"keycloakify/tools/clsx\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {MessageKey} from \"keycloakify/login/i18n/i18n\";\nimport {Input} from \"../../components/ui/input\";\nimport {Button} from \"../../components/ui/button\";\nimport {Label} from \"../../components/ui/label\";\nimport {Separator} from \"../../components/ui/separator\";\nimport {useTitle} from \"react-use\";\n\nexport default function LoginConfigTotp(props: PageProps<Extract<KcContext, {\n    pageId: \"login-config-totp.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, isAppInitiatedAction, totp, mode, messagesPerField} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    useTitle(`${msgStr(\"loginTotpTitle\")} - ${kcContext.realm.displayName}`)\n\n    const algToKeyUriAlg: Record<(typeof kcContext)[\"totp\"][\"policy\"][\"algorithm\"], string> = {\n        \"HmacSHA1\": \"SHA1\",\n        \"HmacSHA256\": \"SHA256\",\n        \"HmacSHA512\": \"SHA512\"\n    };\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"loginTotpTitle\")}>\n            <div className={\"flex\"}>\n                <div className={\"flex flex-col gap-2\"}>\n                    <p className={\"max-w-[350px]\"}>{msg(\"loginTotpStep1\")}</p>\n                    <ul id=\"kc-totp-supported-apps\" className={\"text-sm pl-6\"}>\n                        {totp.supportedApplications.filter(item => Boolean(item.trim())).map(app => (\n                            <li className={\"list-disc\"}>{msg(app as MessageKey)}</li>\n                        ))}\n                    </ul>\n                    {mode && mode === \"manual\" ? (\n                        <>\n                            <p>{msg(\"loginTotpManualStep2\")}</p>\n                            <pre id=\"kc-totp-secret-key\"\n                                 className={\"bg-slate-900 rounded-lg p-2 text-white shadow-md\"}>{totp.totpSecretEncoded}</pre>\n                            <p>\n                                <Button onClick={() => window.location.href = totp.qrUrl} id=\"mode-barcode\">\n                                    {msg(\"loginTotpScanBarcode\")}\n                                </Button>\n                            </p>\n\n                            <p>{msg(\"loginTotpManualStep3\")}</p>\n                            <p className={\"border-2 p-2 border-slate-600\"}>\n                                <ul className={\"text-sm\"}>\n                                    <li id=\"kc-totp-type\">\n                                        {msg(\"loginTotpType\")}: {msg(`loginTotp.${totp.policy.type}`)}\n                                    </li>\n                                    <li id=\"kc-totp-algorithm\">\n                                        {msg(\"loginTotpAlgorithm\")}: {algToKeyUriAlg?.[totp.policy.algorithm] ?? totp.policy.algorithm}\n                                    </li>\n                                    <li id=\"kc-totp-digits\">\n                                        {msg(\"loginTotpDigits\")}: {totp.policy.digits}\n                                    </li>\n                                    {totp.policy.type === \"totp\" ? (\n                                        <li id=\"kc-totp-period\">\n                                            {msg(\"loginTotpInterval\")}: {totp.policy.period}\n                                        </li>\n                                    ) : (\n                                        <li id=\"kc-totp-counter\">\n                                            {msg(\"loginTotpCounter\")}: {totp.policy.initialCounter}\n                                        </li>\n                                    )}\n                                </ul>\n                            </p>\n\n                        </>\n                    ) : (\n                        <>\n                            <p>{msg(\"loginTotpStep2\")}</p>\n                            <img id=\"kc-totp-secret-qr-code\" src={`data:image/png;base64, ${totp.totpSecretQrCode}`}\n                                 alt=\"Figure: Barcode\" className={\"border-8 w-64 shadow-lg\"}/>\n                            <Button variant={\"link\"} onClick={() => {\n                                window.location.href = totp.manualUrl\n                            }} id=\"mode-manual\">\n                                {msg(\"loginTotpUnableToScan\")}\n                            </Button>\n                        </>\n                    )}\n\n\n                </div>\n                <Separator orientation={\"vertical\"} className={\"mx-10 h-auto\"}/>\n                <div className={\"flex items-center\"}>\n                    <form action={url.loginAction} className={\"flex flex-col gap-4\"} id=\"kc-totp-settings-form\"\n                          method=\"post\">\n                        <div className={getClassName(\"kcFormGroupClass\")}>\n                            <div className={getClassName(\"kcInputWrapperClass\")}>\n                                <p className={\"text-sm\"}>{msg(\"loginTotpStep3\")}</p>\n                                <Label htmlFor=\"totp\" className={getClassName(\"kcLabelClass\")}>\n                                    {msg(\"authenticatorCode\")} <span className=\"text-red-500\">*</span>\n                                </Label>\n                                <Input\n                                    type=\"text\"\n                                    id=\"totp\"\n                                    name=\"totp\"\n                                    autoComplete=\"off\"\n                                    className={getClassName(\"kcInputClass\")}\n                                    aria-invalid={messagesPerField.existsError(\"totp\")}\n                                />\n\n                                {messagesPerField.existsError(\"totp\") && (\n                                    <span id=\"input-error-otp-code\" className={getClassName(\"kcInputErrorMessageClass\")}\n                                          aria-live=\"polite\">\n                                    {messagesPerField.get(\"totp\")}\n                                </span>\n                                )}\n                            </div>\n                            <input type=\"hidden\" id=\"totpSecret\" name=\"totpSecret\" value={totp.totpSecret}/>\n                            {mode && <input type=\"hidden\" id=\"mode\" value={mode}/>}\n                        </div>\n\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n\n                            <p className={\"text-sm\"}>{msg(\"loginTotpStep3DeviceName\")}</p>\n                            <Label htmlFor=\"userLabel\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"loginTotpDeviceName\")} {totp.otpCredentials.length >= 1 &&\n                                <span className=\"text-red-500\">*</span>}\n                            </Label>\n                            <Input\n                                type=\"text\"\n                                id=\"userLabel\"\n                                name=\"userLabel\"\n                                autoComplete=\"off\"\n                                className={getClassName(\"kcInputClass\")}\n                                aria-invalid={messagesPerField.existsError(\"userLabel\")}\n                            />\n                            {messagesPerField.existsError(\"userLabel\") && (\n                                <span id=\"input-error-otp-label\"\n                                      className={getClassName(\"kcInputErrorMessageClass\")}\n                                      aria-live=\"polite\">\n                                    {messagesPerField.get(\"userLabel\")}\n                                </span>\n                            )}\n                        </div>\n\n                        {isAppInitiatedAction ? (\n                            <div className={'flex flex-col gap-2'}>\n                                <Button\n                                    type=\"submit\"\n                                    className={clsx(\n                                        getClassName(\"kcButtonClass\"),\n                                        getClassName(\"kcButtonPrimaryClass\"),\n                                        getClassName(\"kcButtonLargeClass\")\n                                    )}\n                                    id=\"saveTOTPBtn\"\n                                >\n                                    {msgStr(\"doSubmit\")}\n                                </Button>\n                                <Button\n                                    type=\"submit\"\n                                    variant={\"ghost\"}\n                                    className={clsx(\n                                        getClassName(\"kcButtonClass\"),\n                                        getClassName(\"kcButtonDefaultClass\"),\n                                        getClassName(\"kcButtonLargeClass\"),\n                                        getClassName(\"kcButtonLargeClass\")\n                                    )}\n                                    id=\"cancelTOTPBtn\"\n                                    name=\"cancel-aia\"\n                                    value=\"true\"\n                                >\n                                    {msg(\"doCancel\")}\n                                </Button>\n                            </div>\n                        ) : (\n                            <input\n                                type=\"submit\"\n                                className={clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\"))}\n                                id=\"saveTOTPBtn\"\n                                value={msgStr(\"doSubmit\")}\n                            />\n                        )}\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}","import {clsx} from \"keycloakify/tools/clsx\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {useTitle} from \"react-use\";\nimport {Input} from \"../../components/ui/input\";\nimport {Label} from \"../../components/ui/label\";\nimport {Checkbox} from \"../../components/ui/checkbox\";\nimport {Button} from \"../../components/ui/button\";\n\nexport default function LoginUpdatePassword(props: PageProps<Extract<KcContext, {\n    pageId: \"login-update-password.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {msg, msgStr} = i18n;\n    useTitle(`${msgStr(\"updatePasswordTitle\")} - ${kcContext.realm.displayName}`)\n    const {url, messagesPerField, isAppInitiatedAction, username} = kcContext;\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"updatePasswordTitle\")}>\n            {/*    <div*/}\n            <div className=\"flex gap-4 w-full\">\n                <div className={`mx-auto flex w-full flex-col justify-center`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form id=\"kc-passwd-update-form\" className={\"flex gap-3 flex-col items-center w-full\"}\n                          action={url.loginAction}\n                          method=\"post\">\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            value={username}\n                            readOnly={true}\n                            autoComplete=\"username\"\n                            style={{display: \"none\"}}\n                        />\n                        <Input type=\"password\" id=\"password\" name=\"password\" autoComplete=\"current-password\"\n                               style={{display: \"none\"}}/>\n\n                        <div\n                            className={\"w-full\"}\n                        >\n                            <Label htmlFor=\"password-new\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"passwordNew\")}\n                            </Label>\n\n\n                            <Input\n                                type=\"password\"\n                                id=\"password-new\"\n                                name=\"password-new\"\n                                autoFocus\n                                autoComplete=\"new-password\"\n                                className={getClassName(\"kcInputClass\")}\n                            />\n\n                        </div>\n\n                        <div\n                            className={\"w-full\"}\n                        >\n\n                            <Label htmlFor=\"password-confirm\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"passwordConfirm\")}\n                            </Label>\n\n\n                            <Input\n                                type=\"password\"\n                                id=\"password-confirm\"\n                                name=\"password-confirm\"\n                                autoComplete=\"new-password\"\n                                className={getClassName(\"kcInputClass\")}\n                            />\n\n                        </div>\n\n\n                        <div className=\"flex items-center space-x-2\">\n                            <Checkbox defaultChecked id=\"logout-sessions\" name=\"logout-sessions\"/>\n                            <label\n                                htmlFor=\"logout-sessions\"\n                                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                            >\n                                {msgStr(\"logoutOtherSessions\")}\n                            </label>\n                        </div>\n\n\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                            {isAppInitiatedAction ? (\n                                <div className={\"flex gap-2 flex-col\"}>\n                                    <Button\n\n                                        type=\"submit\"\n                                        className={\"min-w-[200px]\"}\n                                    >\n                                        {msgStr(\"doSubmit\")}\n                                    </Button>\n                                    <Button\n                                        variant={\"ghost\"}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                        className={\"min-w-[200px]\"}\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </Button>\n                                </div>\n                            ) : (\n                                <Button\n\n                                    type=\"submit\"\n                                    className={\"min-w-[200px]\"}\n                                >\n                                    {msgStr(\"doSubmit\")}\n                                </Button>\n                            )}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}","import * as React from \"react\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\n\nimport { cn } from \"lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <CheckIcon className=\"h-3.5 w-3.5 fill-primary\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","import {useEffect, useState} from \"react\";\nimport {headInsert} from \"keycloakify/tools/headInsert\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Button} from \"../../components/ui/button\";\nimport {Input} from \"../../components/ui/input\";\nimport {RadioGroup, RadioGroupItem} from \"../../components/ui/radio-group\";\nimport {Label} from \"../../components/ui/label\";\n\nexport default function LoginOtp(props: PageProps<Extract<KcContext, { pageId: \"login-otp.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {otpLogin, url} = kcContext;\n\n    const {msg, msgStr} = i18n;\n    const [selectedCredentialId, setCredentialId] = useState(otpLogin.userOtpCredentials[0].id ?? \"\");\n    useEffect(() => {\n        let isCleanedUp = false;\n\n        const {prLoaded, remove} = headInsert({\n            \"type\": \"javascript\",\n            \"src\": `${kcContext.url.resourcesCommonPath}/node_modules/jquery/dist/jquery.min.js`\n        });\n\n        (async () => {\n            await prLoaded;\n\n            if (isCleanedUp) {\n                return;\n            }\n\n            evaluateInlineScript();\n        })();\n\n        return () => {\n            isCleanedUp = true;\n            remove();\n        };\n    }, []);\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"loginOtpOneTime\")}>\n            <div className=\"flex gap-4\">\n                <div className={`mx-auto flex w-full flex-col justify-center`}\n                     id=\"kc-form-wrapper\"\n                    // className={clsx(\n                    //     realm.password &&\n                    //     social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                    // )}\n                >\n                    <form id=\"kc-otp-login-form\" className={\"flex flex-col gap-3 items-center w-full min-w-[350px]\"}\n                          action={url.loginAction}\n                          method=\"post\">\n                        {otpLogin.userOtpCredentials.length > 1 && (\n                            <>\n                                <p className={\"text-sm text-left w-full\"}>\n                                    {msgStr(\"otp-display-name\")}\n                                </p>\n                                <RadioGroup defaultValue={otpLogin.userOtpCredentials[0].id}\n                                            className={\"items-start w-full\"} name=\"selectedCredentialId\">\n                                    {otpLogin.userOtpCredentials.map(otpCredential => (\n                                        <div className=\"flex items-center space-x-2\">\n                                            <RadioGroupItem value={otpCredential.id} id=\"option-one\"/>\n                                            <Label htmlFor=\"option-one\">{otpCredential.userLabel}</Label>\n                                        </div>\n                                    ))}\n\n                                </RadioGroup>\n                            </>\n                        )}\n\n                        <div className={\"w-full\"}>\n\n                            <Label htmlFor=\"otp\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"loginOtpOneTime\")}\n                            </Label>\n\n\n                            <Input id=\"otp\" name=\"otp\" autoComplete=\"off\" type=\"text\"\n                                   className={getClassName(\"kcInputClass\")} autoFocus/>\n\n                        </div>\n\n\n                        <div id=\"kc-form-buttons\">\n                            <Button\n                                name=\"login\"\n                                id=\"kc-login\"\n                                type=\"submit\"\n                                className={\"min-w-[200px]\"}\n                            >\n                                {msgStr(\"doLogIn\")}\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}\n\ndeclare const $: any;\n\nfunction evaluateInlineScript() {\n    $(document).ready(function () {\n        // Card Single Select\n        $(\".card-pf-view-single-select\").click(function (this: any) {\n            if ($(this).hasClass(\"active\")) {\n                $(this).removeClass(\"active\");\n                $(this).children().removeAttr(\"name\");\n            } else {\n                $(\".card-pf-view-single-select\").removeClass(\"active\");\n                $(\".card-pf-view-single-select\").children().removeAttr(\"name\");\n                $(this).addClass(\"active\");\n                $(this).children().attr(\"name\", \"selectedCredentialId\");\n            }\n        });\n\n        var defaultCred = $(\".card-pf-view-single-select\")[0];\n        if (defaultCred) {\n            defaultCred.click();\n        }\n    });\n}","import {useEffect, useState} from \"react\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {CircleLoader, ClockLoader} from \"react-spinners\";\n\nexport default function SamlPostForm(props: PageProps<Extract<KcContext, { pageId: \"saml-post-form.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {msgStr, msg} = i18n;\n\n    const {samlPost} = kcContext;\n\n    const [htmlFormElement, setHtmlFormElement] = useState<HTMLFormElement | null>(null);\n\n    useEffect(() => {\n        if (htmlFormElement === null) {\n            return;\n        }\n\n        // Storybook\n        if (samlPost.url === \"\") {\n            // alert(\"In a real Keycloak the user would be redirected immediately\");\n            return;\n        }\n\n        htmlFormElement.submit();\n    }, [htmlFormElement]);\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"saml.post-form.title\")}>\n            <div className={\"flex flex-col items-center justify-center gap-2\"}>\n                <CircleLoader className={\"text-red-500\"}/>{msg(\"saml.post-form.message\")}\n            </div>\n            <form name=\"saml-post-binding\" method=\"post\" action={samlPost.url} ref={setHtmlFormElement}>\n                {samlPost.SAMLRequest && <input type=\"hidden\" name=\"SAMLRequest\" value={samlPost.SAMLRequest}/>}\n                {samlPost.SAMLResponse && <input type=\"hidden\" name=\"SAMLResponse\" value={samlPost.SAMLResponse}/>}\n                {samlPost.relayState && <input type=\"hidden\" name=\"RelayState\" value={samlPost.relayState}/>}\n                <noscript>\n                    <p>{msg(\"saml.post-form.js-disabled\")}</p>\n                    <input type=\"submit\" value={msgStr(\"doContinue\")}/>\n                </noscript>\n            </form>\n        </Template>\n    );\n}","import {clsx} from \"keycloakify/tools/clsx\";\nimport {I18n} from \"../i18n\";\nimport {KcContext} from \"../kcContext\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\n\nimport {PinField} from \"react-pin-field\";\nimport {Input} from \"../../components/ui/input\";\nimport {Button} from \"../../components/ui/button\";\nimport {Label} from \"../../components/ui/label\";\nimport {PageProps} from \"keycloakify/login\";\n\nexport default function LoginDeviceVerifyUserCode(props: PageProps<Extract<KcContext, {\n    pageId: \"login-oauth2-device-verify-user-code.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, classes, Template} = props;\n    const {url} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"oauth2DeviceVerificationTitle\")}>\n            <form\n                id=\"kc-user-verify-device-user-code-form\"\n                className={\"flex flex-col gap-2 min-w-[450px]\"}\n                action={url.oauth2DeviceVerificationAction}\n                method=\"post\"\n            >\n                <div className=\"flex items-center flex-col gap-1.5\">\n                    <Label htmlFor=\"device-user-code\">\n                        {msg(\"verifyOAuth2DeviceUserCode\")}\n                    </Label>\n                    <Input\n                        id=\"device-user-code\"\n                        name=\"device_user_code\"\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        className={getClassName(\"kcInputClass\")}\n                        autoFocus\n                    />\n                </div>\n\n\n                <Button\n                    className={clsx(\n                        getClassName(\"kcButtonClass\"),\n                        getClassName(\"kcButtonPrimaryClass\"),\n                        getClassName(\"kcButtonLargeClass\")\n                    )}\n                    type=\"submit\"\n\n                >\n                    {msgStr(\"doSubmit\")}\n                </Button>\n            </form>\n        </Template>\n    );\n}","import {clsx} from \"keycloakify/tools/clsx\";\nimport {KcContext} from \"../kcContext\";\nimport {I18n} from \"../i18n\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport {Button} from \"../../components/ui/button\";\nimport {PageProps} from \"keycloakify/login\";\n\nexport default function LoginOauthGrant(props: PageProps<Extract<KcContext, {\n    pageId: \"login-oauth-grant.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, classes, Template} = props;\n    const {url, oauth, client} = kcContext;\n\n    const {msg, msgStr, advancedMsg, advancedMsgStr} = i18n;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    return (\n        <Template\n            {...{kcContext, i18n, doUseDefaultCss, classes}}\n            headerNode={msg(\"oauthGrantTitle\", client.name ? advancedMsgStr(client.name) : client.clientId)}\n        >\n            <div id=\"kc-oauth\" className=\"flex flex-col gap-2 w-full items-center\">\n                <h2>{msg(\"oauthGrantRequest\")}</h2>\n                <div className={\"border-2 bg-slate-900 text-white w-full shadow-md rounded-xl\"}>\n                    <ul className={\"list-disc p-2 pl-6\"}>\n                        {oauth.clientScopesRequested.map((clientScope: any) => (\n                            <li key={clientScope.consentScreenText}>\n                                <span>{advancedMsg(clientScope.consentScreenText)}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <form className={\"w-full items-center flex flex-col gap-2\"} action={url.oauthAction} method=\"POST\">\n                    <input type=\"hidden\" name=\"code\" value={oauth.code}/>\n\n                    <Button\n\n                        name=\"accept\"\n                        id=\"kc-login\"\n                        type=\"submit\"\n                        className={\"min-w-[200px]\"}\n                    >\n                        {msgStr(\"doYes\")}\n                    </Button>\n                    <Button\n                        variant={\"ghost\"}\n                        name=\"cancel\"\n                        id=\"kc-cancel\"\n                        className={\"min-w-[200px]\"}\n                        type=\"submit\">\n                        {msgStr(\"doNo\")}\n                    </Button>\n\n\n                </form>\n            </div>\n        </Template>\n    );\n}","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Button} from \"../../components/ui/button\";\n\nexport default function LoginPageExpired(props: PageProps<Extract<KcContext, {\n    pageId: \"login-page-expired.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {url} = kcContext;\n\n    const {msg} = i18n;\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"pageExpiredTitle\")}>\n            <div className={\"flex flex-col gap-2 w-full\"}>\n                <div className={\"flex gap-2 items-center w-full\"}>\n\n                    <Button id=\"loginRestartLink\" className={\"w-full\"}\n                            onClick={() => window.location.href = url.loginRestartFlowUrl}>\n                        {msg(\"pageExpiredMsg1\")}\n                    </Button>\n                </div>\n\n                <div className={\"flex gap-2 items-center\"}>\n\n                    <Button id=\"loginContinueLink\" variant={\"ghost\"} className={\"w-full\"}\n                            onClick={() => window.location.href = url.loginAction}>\n                        {msg(\"pageExpiredMsg2\")}\n                    </Button>\n                </div>\n            </div>\n        </Template>\n    );\n}","import { useEffect, useRef, useState } from \"react\";\n\ninterface IProps {\n  mss: number;\n}\ntype Fnc = () => void;\nconst noop = () => {};\n\nconst useCountDown = (props: Partial<IProps>) => {\n  const { mss } = props;\n  const [time, setTime] = useState(mss || 0);\n  const tickRef = useRef<Fnc>(noop);\n\n  const tick = () => {\n    if (time > 0) {\n      setTime(time - 1);\n    }\n  };\n\n  useEffect(() => {\n    tickRef.current = tick;\n  });\n\n  useEffect(() => {\n    const timerId = setInterval(() => tickRef.current(), 1000);\n    console.log(\"timerId\", timerId);\n\n    return () => clearInterval(timerId);\n  }, []);\n\n  return [time];\n};\n\nexport default useCountDown;\n","import type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Alert, AlertDescription, AlertTitle} from \"../../components/ui/alert\";\nimport {Button} from \"../../components/ui/button\";\nimport {IconCircleCheck} from \"@tabler/icons-react\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {useInterval} from \"react-use\";\nimport useCountDown from \"../../hooks/useCountDown\";\n\nexport default function LoginVerifyEmail(props: PageProps<Extract<KcContext, {\n    pageId: \"login-verify-email.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {msg} = i18n;\n\n    const {url, user} = kcContext;\n    const [time] = useCountDown({mss: 60});\n\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"emailVerifyTitle\")}>\n            <div className={\"flex flex-col item-center justify-center gap-2\"}>\n                <Alert className={\"bg-green-200 shadow-md\"}>\n                    <AlertTitle className={\"flex gap-1 items-center\"}>\n                        <IconCircleCheck/>{msg(\"emailVerifyInstruction1\", user?.email ?? \"\")}\n                    </AlertTitle>\n\n                </Alert>\n                <div className=\"flex items-center justify-center w-full text-sm\">\n                    <div>\n                        {msg(\"emailVerifyInstruction2\")}\n                        <Button onClick={() => window.location.href = url.loginAction} variant={\"link\"}\n                                disabled={time > 0} className={\"whitespace-pre\"}>\n                            {msg(\"emailVerifyInstruction3\")}{time > 0 && <span> ({time})</span>}\n\n                        </Button>\n                    </div>\n                </div>\n\n            </div>\n        </Template>\n    );\n}","import {clsx} from \"keycloakify/tools/clsx\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Button} from \"../../components/ui/button\";\n\nexport default function LoginIdpLinkConfirm(props: PageProps<Extract<KcContext, {\n    pageId: \"login-idp-link-confirm.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, idpAlias} = kcContext;\n\n    const {msg} = i18n;\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"confirmLinkIdpTitle\")}>\n            <form id=\"kc-register-form\" action={url.loginAction} method=\"post\" className={\"w-full flex flex-col gap-2\"}>\n                <Button\n                    type=\"submit\"\n                    className={clsx(\n                        getClassName(\"kcButtonClass\"),\n                        getClassName(\"kcButtonDefaultClass\"),\n                        getClassName(\"kcButtonBlockClass\"),\n                        getClassName(\"kcButtonLargeClass\")\n                    )}\n                    name=\"submitAction\"\n                    id=\"linkAccount\"\n                    value=\"linkAccount\"\n                >\n                    {msg(\"confirmLinkIdpContinue\", idpAlias)}\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant={\"ghost\"}\n                    name=\"submitAction\"\n                    id=\"updateProfile\"\n                    value=\"updateProfile\"\n                >\n                    {msg(\"confirmLinkIdpReviewProfile\")}\n                </Button>\n            </form>\n        </Template>\n    );\n}","import {useState} from \"react\";\nimport {clsx} from \"keycloakify/tools/clsx\";\n\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Button} from \"../../components/ui/button\";\nimport {UserProfileFormFields} from \"./shared/UserProfileFormFields\";\n\nexport default function IdpReviewUserProfile(props: PageProps<Extract<KcContext, {\n    pageId: \"idp-review-user-profile.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {msg, msgStr} = i18n;\n\n    const {url} = kcContext;\n\n    const [isFomSubmittable, setIsFomSubmittable] = useState(false);\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"loginIdpReviewProfileTitle\")}>\n            <form id=\"kc-idp-review-profile-form\" className={\"w-full flex flex-col gap-2\"} action={url.loginAction}\n                  method=\"post\">\n                <UserProfileFormFields\n                    kcContext={kcContext}\n                    onIsFormSubmittableValueChange={setIsFomSubmittable}\n                    i18n={i18n}\n                    getClassName={getClassName}\n                />\n\n                <Button\n                    type=\"submit\"\n                    disabled={!isFomSubmittable}\n                >\n                    {msgStr(\"doSubmit\")}\n                </Button>\n            </form>\n        </Template>\n    );\n}","import type {KcContext} from \"keycloakify/login/kcContext\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport type {I18n} from \"keycloakify/login/i18n\";\nimport {Alert, AlertTitle} from \"../../components/ui/alert\";\nimport {IconCircleCheck} from \"@tabler/icons-react\";\nimport useCountDown from \"../../hooks/useCountDown\";\nimport {Button} from \"../../components/ui/button\";\nimport {Separator} from \"../../components/ui/separator\";\n\nexport default function LoginIdpLinkEmail(props: PageProps<Extract<KcContext, {\n    pageId: \"login-idp-link-email.ftl\"\n}>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {url, realm, brokerContext, idpAlias} = kcContext;\n\n    const {msg} = i18n;\n    const [time] = useCountDown({mss: 60});\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} headerNode={msg(\"emailLinkIdpTitle\", idpAlias)}>\n            <div className={\"flex flex-col items-center justify-center gap-2\"}>\n                <Alert className={\"bg-green-200 shadow-md lg:max-w-[450px]\"}>\n                    <AlertTitle className={\"flex gap-1  leading-relaxed items-start\"}>\n                        <IconCircleCheck/> {msg(\"emailLinkIdp1\", idpAlias, brokerContext.username, realm.displayName)}\n                    </AlertTitle>\n                </Alert>\n                <div className=\"flex items-center justify-center w-full text-sm\">\n                    <div>\n                        {msg(\"emailVerifyInstruction2\")}\n                        <Button onClick={() => window.location.href = url.loginAction} variant={\"link\"}\n                                disabled={time > 0} className={\"whitespace-pre\"}>\n                            {msg(\"emailVerifyInstruction3\")} {time > 0 && <span> ({time})</span>}\n                        </Button>\n                    </div>\n                </div>\n                <Separator/>\n                <div className=\"flex items-center justify-center w-full text-sm\">\n                    <div>\n\n                        <Button onClick={() => window.location.href = url.loginAction} variant={\"link\"}\n                                className={\"px-1\"}>\n                            <span>{msg(\"emailLinkIdp4\")}, {msg(\"doClickHere\")}</span>\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}","import {clsx} from \"keycloakify/tools/clsx\";\nimport type {PageProps} from \"keycloakify/login/pages/PageProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"../kcContext\";\nimport type {I18n} from \"../i18n\";\nimport {Button} from \"../../components/ui/button\";\nimport {IconQuestionMark} from \"@tabler/icons-react\";\n\nexport default function LogoutConfirm(props: PageProps<Extract<KcContext, { pageId: \"logout-confirm.ftl\" }>, I18n>) {\n    const {kcContext, i18n, doUseDefaultCss, Template, classes} = props;\n\n    const {getClassName} = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const {url, client, logoutConfirm} = kcContext;\n\n    const {msg, msgStr} = i18n;\n\n\n    return (\n        <Template {...{kcContext, i18n, doUseDefaultCss, classes}} displayMessage={false}\n                  headerNode={msg(\"logoutConfirmTitle\")}>\n            <div id=\"kc-logout-confirm\" className={\"w-full flex flex-col items-center\"}>\n                <h2 className=\"mb-2 border-slate-900 border-2 py-2 px-24  rounded-lg shadow-md\">\n                  {msg(\"logoutConfirmHeader\")}</h2>\n                <form className=\"w-full flex flex-col items-center justify-center gap-2\"\n                      action={url.logoutConfirmAction} method=\"POST\">\n                    <input type=\"hidden\" name=\"session_code\" value={logoutConfirm.code}/>\n                    <Button\n                        tabIndex={4}\n                        name=\"confirmLogout\"\n                        id=\"kc-logout\"\n                        type=\"submit\"\n                        className={\"min-w-[200px]\"}\n                        variant={\"destructive\"}\n                    >\n                        {msgStr(\"doLogout\")}\n                    </Button>\n                    {!logoutConfirm.skipLink && client.baseUrl && (\n                        <>\n                            {/*@ts-ignore*/}\n                            <Button variant={\"ghost\"} onClick={() => window.location.href = client.baseUrl}\n                                    className={\"min-w-[200px]\"}>\n                                {msg(\"backToApplication\")}\n                            </Button>\n                        </>\n                    )}\n                </form>\n            </div>\n        </Template>\n    );\n}","import {lazy, Suspense} from \"react\";\nimport Fallback, {type PageProps} from \"keycloakify/login\";\nimport type {KcContext} from \"./kcContext\";\nimport {useI18n} from \"./i18n\";\nimport Template from \"./Template\";\nimport LoginResetPassword from \"./pages/LoginResetPassword\";\nimport LoginUsername from \"./pages/LoginUsername\";\nimport LoginPassword from \"./pages/LoginPassword\";\nimport WebauthnRegister from \"./pages/WebauthnRegister\";\nimport WebauthnAuthenticate from \"./pages/WebauthnAuthenticate\";\nimport SelectAuthenticator from \"./pages/SelectAuthenticator\";\nimport Error from \"./pages/Error\";\nimport WebauthnError from \"./pages/WebauthnError\";\nimport LoginConfigTotp from \"./pages/LoginConfigTotp\";\nimport LoginUpdatePassword from \"./pages/LoginUpdatePassword\";\nimport LoginOtp from \"./pages/LoginOtp\";\nimport SamlPostForm from \"./pages/SamlPostForm\";\nimport LoginDeviceVerifyUserCode from \"./pages/LoginDeviceVerifyUserCode\";\nimport LoginOauthGrant from \"./pages/LoginOauthGrant\";\nimport LoginPageExpired from \"./pages/LoginPageExpired\";\nimport LoginVerifyEmail from \"./pages/LoginVerifyEmail\";\nimport LoginIdpLinkConfirm from \"./pages/LoginIdpLinkConfirm\";\nimport IdpReviewUserProfile from \"./pages/IdpReviewUserProfile\";\nimport LoginIdpLinkEmail from \"./pages/LoginIdpLinkEmail\";\nimport LogoutConfirm from \"./pages/LogoutConfirm\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"./pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const {kcContext} = props;\n\n    const i18n = useI18n({kcContext});\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n    console.log(kcContext)\n    console.log(JSON.stringify(kcContext))\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\":\n                        return <Login {...{kcContext, i18n, Template, classes}} doUseDefaultCss={false}/>;\n                    case \"login-username.ftl\":\n                        return <LoginUsername {...{kcContext, i18n, Template, classes}} doUseDefaultCss={false}/>;\n                    case \"login-password.ftl\":\n                        return <LoginPassword {...{kcContext, i18n, Template, classes}} doUseDefaultCss={false}/>;\n                    case \"login-reset-password.ftl\":\n                        return <LoginResetPassword {...{kcContext, i18n, Template, classes}} doUseDefaultCss={false}/>;\n                    case \"register.ftl\":\n                        return <Register {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case \"register-user-profile.ftl\":\n                        return <RegisterUserProfile {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>\n                    case \"terms.ftl\":\n                        return <Terms {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    // Removes those pages in you project. They are included to show you how to implement keycloak pages\n                    // that are not yes implemented by Keycloakify. \n                    // See: https://docs.keycloakify.dev/limitations#some-pages-still-have-the-default-theme.-why\n                    case \"my-extra-page-1.ftl\":\n                        return <MyExtraPage1 {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case \"my-extra-page-2.ftl\":\n                        return <MyExtraPage2 {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    // This is just an example to show you what is possible. You likely don't want to keep this as is. \n                    case 'webauthn-authenticate.ftl':\n                        return <WebauthnAuthenticate {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case 'select-authenticator.ftl':\n                        return <SelectAuthenticator {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case 'webauthn-register.ftl':\n                        return <WebauthnRegister {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case 'webauthn-error.ftl':\n                        return <WebauthnError {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case 'login-config-totp.ftl':\n                        return <LoginConfigTotp {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case 'login-update-password.ftl':\n                        return <LoginUpdatePassword {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case 'login-otp.ftl':\n                        return <LoginOtp {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case 'error.ftl':\n                        return <Error {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case \"info.ftl\":\n                        return (\n                            <Info {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>);\n                    case \"saml-post-form.ftl\":\n                        return <SamlPostForm {...{kcContext, i18n, Template, classes}} doUseDefaultCss={true}/>;\n                    case \"login-oauth2-device-verify-user-code.ftl\":\n                        return <LoginDeviceVerifyUserCode {...{kcContext, i18n, Template, classes}}\n                                                          doUseDefaultCss={true}/>;\n                    case \"login-oauth-grant.ftl\":\n                        return <LoginOauthGrant {...{kcContext, i18n, Template, classes}}\n                                                doUseDefaultCss={true}/>;\n                    case \"login-page-expired.ftl\":\n                        return <LoginPageExpired {...{kcContext, i18n, Template, classes}}\n                                                 doUseDefaultCss={true}/>;\n                    case \"login-verify-email.ftl\":\n                        return <LoginVerifyEmail {...{kcContext, i18n, Template, classes}}\n                                                 doUseDefaultCss={true}/>;\n                    case \"login-idp-link-confirm.ftl\":\n                        return <LoginIdpLinkConfirm {...{kcContext, i18n, Template, classes}}\n                                                    doUseDefaultCss={true}/>;\n                    case \"idp-review-user-profile.ftl\":\n                        return <IdpReviewUserProfile {...{kcContext, i18n, Template, classes}}\n                                                     doUseDefaultCss={true}/>;\n                    case \"login-idp-link-email.ftl\":\n                        return <LoginIdpLinkEmail {...{kcContext, i18n, Template, classes}}\n                                                  doUseDefaultCss={true}/>;\n                    case \"logout-confirm.ftl\":\n                        return <LogoutConfirm {...{kcContext, i18n, Template, classes}}\n                                                  doUseDefaultCss={true}/>;\n                    default:\n                        return <Fallback {...{kcContext, i18n, classes}} Template={Template} doUseDefaultCss={true}/>;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n","import * as React from \"react\"\nimport {\n  CaretSortIcon,\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from \"@radix-ui/react-icons\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\n\nimport { cn } from \"lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <CaretSortIcon className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUpIcon />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDownIcon />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import {useEffect, Fragment} from \"react\";\nimport type {ClassKey} from \"keycloakify/login/TemplateProps\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {useFormValidation} from \"keycloakify/login/lib/useFormValidation\";\nimport type {Attribute} from \"keycloakify/login/kcContext/KcContext\";\nimport type {I18n} from \"../../i18n\";\nimport {Input} from \"../../../components/ui/input\";\nimport {Label} from \"../../../components/ui/label\";\nimport {Select, SelectContent, SelectItem, SelectTrigger, SelectValue} from \"../../../components/ui/select\";\n\nexport type UserProfileFormFieldsProps = {\n    kcContext: Parameters<typeof useFormValidation>[0][\"kcContext\"];\n    i18n: I18n;\n    getClassName: (classKey: ClassKey) => string;\n    onIsFormSubmittableValueChange: (isFormSubmittable: boolean) => void;\n    BeforeField?: (props: { attribute: Attribute }) => JSX.Element | null;\n    AfterField?: (props: { attribute: Attribute }) => JSX.Element | null;\n};\n\nexport function UserProfileFormFields(props: UserProfileFormFieldsProps) {\n    const {kcContext, onIsFormSubmittableValueChange, i18n, getClassName, BeforeField, AfterField} = props;\n\n    const {advancedMsg, msg} = i18n;\n\n    const {\n        formValidationState: {fieldStateByAttributeName, isFormSubmittable},\n        formValidationDispatch,\n        attributesWithPassword\n    } = useFormValidation({\n        kcContext,\n        i18n\n    });\n\n    useEffect(() => {\n        onIsFormSubmittableValueChange(isFormSubmittable);\n    }, [isFormSubmittable]);\n\n    let currentGroup = \"\";\n\n    return (\n        <>\n            {attributesWithPassword.map((attribute, i) => {\n                const {group = \"\", groupDisplayHeader = \"\", groupDisplayDescription = \"\"} = attribute;\n\n                const {value, displayableErrors} = fieldStateByAttributeName[attribute.name];\n\n                const formGroupClassName = clsx(\n                    getClassName(\"kcFormGroupClass\"),\n                    displayableErrors.length !== 0 && getClassName(\"kcFormGroupErrorClass\")\n                );\n\n                return (\n                    <Fragment key={i}>\n                        {group !== currentGroup && (currentGroup = group) !== \"\" && (\n                            <div className={formGroupClassName}>\n                                <div className={getClassName(\"kcContentWrapperClass\")}>\n                                    <label id={`header-${group}`} className={getClassName(\"kcFormGroupHeader\")}>\n                                        {advancedMsg(groupDisplayHeader) || currentGroup}\n                                    </label>\n                                </div>\n                                {groupDisplayDescription !== \"\" && (\n                                    <div className={getClassName(\"kcLabelWrapperClass\")}>\n                                        <label id={`description-${group}`} className={getClassName(\"kcLabelClass\")}>\n                                            {advancedMsg(groupDisplayDescription)}\n                                        </label>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n\n                        {BeforeField && <BeforeField attribute={attribute}/>}\n\n                        <div className={formGroupClassName}>\n                            <div className={getClassName(\"kcLabelWrapperClass\")}>\n                                <Label htmlFor={attribute.name} className={getClassName(\"kcLabelClass\")}>\n                                    {advancedMsg(attribute.displayName ?? \"\")}\n                                </Label>\n                                {attribute.required && <span className={\"text-red-500\"}> *</span>}\n                            </div>\n                            <div className={getClassName(\"kcInputWrapperClass\")}>\n                                {(() => {\n                                    const {options} = attribute.validators;\n                                    if (options !== undefined) {\n                                        return (\n                                            <Select\n                                                name={attribute.name}\n\n                                                onValueChange={event =>\n                                                    formValidationDispatch({\n                                                        \"action\": \"update value\",\n                                                        \"name\": attribute.name,\n                                                        \"newValue\": value\n                                                    })\n                                                }\n                                                value={value}\n                                            >\n\n                                                <SelectTrigger id={attribute.name}>\n                                                    <SelectValue>{value || msg(\"selectAnOption\")}</SelectValue>\n                                                </SelectTrigger>\n                                                <SelectContent>\n                                                    {options.options.map(option => (\n                                                        <SelectItem key={option} value={option}>\n                                                            {option}\n                                                        </SelectItem>\n                                                    ))}\n                                                </SelectContent>\n                                            </Select>\n                                        );\n                                    }\n\n                                    return (\n                                        <Input\n                                            type={(() => {\n                                                switch (attribute.name) {\n                                                    case \"password-confirm\":\n                                                    case \"password\":\n                                                        return \"password\";\n                                                    default:\n                                                        return \"text\";\n                                                }\n                                            })()}\n                                            id={attribute.name}\n                                            name={attribute.name}\n                                            value={value}\n                                            onChange={event =>\n                                                formValidationDispatch({\n                                                    \"action\": \"update value\",\n                                                    \"name\": attribute.name,\n                                                    \"newValue\": event.target.value\n                                                })\n                                            }\n                                            onBlur={() =>\n                                                formValidationDispatch({\n                                                    \"action\": \"focus lost\",\n                                                    \"name\": attribute.name\n                                                })\n                                            }\n                                            className={getClassName(\"kcInputClass\")}\n                                            aria-invalid={displayableErrors.length !== 0}\n                                            disabled={attribute.readOnly}\n                                            autoComplete={attribute.autocomplete}\n                                        />\n                                    );\n                                })()}\n                                {displayableErrors.length !== 0 &&\n                                    (() => {\n                                        const divId = `input-error-${attribute.name}`;\n\n                                        return (\n                                            <>\n                                                <style>{`#${divId} > span: { display: block; }`}</style>\n                                                <span\n                                                    id={divId}\n                                                    className={\"text-red-500 text-xs\"}\n                                                    style={{\n                                                        \"position\": displayableErrors.length === 1 ? \"absolute\" : undefined\n                                                    }}\n                                                    aria-live=\"polite\"\n                                                >\n                                                    {displayableErrors.map(({errorMessage}) => errorMessage)}\n                                                </span>\n                                            </>\n                                        );\n                                    })()}\n                            </div>\n                        </div>\n                        {AfterField && <AfterField attribute={attribute}/>}\n                    </Fragment>\n                );\n            })}\n        </>\n    );\n}"],"names":["alertVariants","cva","variants","variant","default","destructive","defaultVariants","Alert","React","_ref","ref","className","props","_jsx","role","cn","displayName","AlertTitle","_ref2","AlertDescription","_ref3","buttonVariants","outline","secondary","ghost","link","size","sm","lg","icon","Button","asChild","Comp","Slot","Checkbox","CheckboxPrimitive","children","CheckIcon","Input","type","labelVariants","Label","LabelPrimitive","Separator","orientation","decorative","SeparatorPrimitive","_len","arguments","length","inputs","Array","_key","twMerge","clsx","useI18n","createUseI18n","en","loginAs","notYou","zh_CN","setAuthenticatorNameTitle","setAuthenticatorNameDescription","setAuthenticatorNamePlaceHolder","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","inset","_jsxs","ChevronRightIcon","DropdownMenuContent","sideOffset","DropdownMenuItem","_ref4","_ref5","checked","_ref6","DotFilledIcon","_ref7","_ref8","Card","CardTitle","CardContent","WavyBackground","containerClassName","colors","waveWidth","backgroundFill","blur","speed","waveOpacity","noise","createNoise3D","w","h","nt","i","x","ctx","canvas","canvasRef","useRef","waveColors","drawWave","n","getSpeed","beginPath","lineWidth","strokeStyle","y","lineTo","stroke","closePath","animationId","render","fillStyle","globalAlpha","fillRect","requestAnimationFrame","useEffect","current","getContext","width","window","innerWidth","height","innerHeight","filter","concat","onresize","cancelAnimationFrame","id","Template","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","messagesPerField","auth","url","message","isAppInitiatedAction","isReady","usePrepareTemplate","internationalizationEnabled","assert","undefined","supported","map","languageTag","onClick","xmlns","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","d","displayNameHtml","showUsername","showResetCredentials","location","href","loginRestartFlowUrl","ArrowLeftIcon","_Fragment","PersonIcon","attemptedUsername","existsError","ExclamationTriangleIcon","summary","showTryAnotherWayLink","action","loginAction","method","name","value","document","forms","submit","my_custom_param","URL","searchParams","get","LoginResetPassword","msgStr","useTitle","htmlFor","loginWithEmailAllowed","registrationEmailAsUsername","autoFocus","defaultValue","loginUrl","console","log","prividerIdIconMap","IconBrandWindows","IconBrandGoogle","IconBrandFacebookFilled","IconBrandTwitter","IconBrandStackoverflow","IconBrandGitlab","IconBrandPaypal","IconBrandInstagram","IconBrandLinkedin","IconBrandGithub","IconBrandBitbucket","IconBrandOpenSource","LoginUsername","social","usernameHidden","login","registrationDisabled","isLoginButtonDisabled","setIsLoginButtonDisabled","useState","onSubmit","useConstCallback","e","_formElement$querySel","preventDefault","formElement","target","querySelector","setAttribute","password","providers","registrationAllowed","tabIndex","registrationUrl","_login$username","label","autoCompleteHelper","username","autoComplete","rememberMe","defaultChecked","disabled","p","alias","providerId","LoginPassword","_login$password","resetPasswordAllowed","loginResetCredentialsUrl","Dialog","DialogPrimitive","DialogPortal","DialogOverlay","DialogContent","Cross2Icon","DialogHeader","DialogFooter","DialogTitle","DialogDescription","WebauthnRegister","attestationConveyancePrefrence","authenticatorAttachment","challenge","createTimeout","excludeCredentialsId","requireResidentKey","userid","signatureAlgorithms","userVerificationRequirement","rpEntityName","rpId","isSetRetry","clientDataJSON","setClientDataJSON","attestationObject","setAttestationObject","publicKeyCredentialId","setPublicKeyCredentialId","authenticatorLabel","setAuthenticatorLabel","transports","setTransports","error","setError","dialogOpen","setDialogOpen","formElementRef","isReadyToSubmit","setIsReadyToSubmit","submitForm","async","Promise","resolve","setTimeout","registerSecurityKey","PublicKeyCredential","pubKeyCredParams","getPubKeyCredParams","rp","publicKey","base64url","loose","user","attestation","authenticatorSelection","isAuthenticatorSelectionSet","userVerification","timeout","excludeCredentials","getExcludeCredentials","result","navigator","credentials","create","is","response","typeGuard","ArrayBuffer","Uint8Array","pad","rawId","getTransports","getTransportsAsString","err","String","sigAlgList","object","alg","push","sigAlg","excludeCredentialIds","excludeCredentialIdsList","split","excludeCredentialId","transportsList","constructor","transportsString","slice","style","marginRight","open","placeholder","onChange","event","onFinishNameInput","Boolean","WebauthnAuthenticate","authenticators","shouldDisplayAuthenticators","Number","isUserIdentified","webauthnResult","setWebauthnResult","authenticatorData","webAuthnAuthenticate","signature","credentialId","userHandle","authenticator","iconClass","includes","displayNameProperties","transport","index","createdAt","IconMap","IconPassword","IconNumbers","kcAuthenticatorWebAuthnClass","IconKey","kcAuthenticatorWebAuthnPasswordlessClass","IconUser","SelectAuthenticator","selectCredentialsForm","authExecIdInput","_selectCredentialsFor","onSelectedAuthenticator","authExecId","currentTarget","dataset","authenticationSelections","authenticationSelection","iconCssClass","helpText","Error","client","IconFaceIdError","baseUrl","WebauthnError","dangerouslySetInnerHTML","__html","execution","LoginConfigTotp","_algToKeyUriAlg$totp$","totp","mode","algToKeyUriAlg","supportedApplications","item","trim","app","totpSecretEncoded","qrUrl","policy","algorithm","digits","period","initialCounter","src","totpSecretQrCode","alt","manualUrl","totpSecret","otpCredentials","LoginUpdatePassword","readOnly","display","RadioGroup","RadioGroupPrimitive","RadioGroupItem","LoginOtp","_otpLogin$userOtpCred","otpLogin","selectedCredentialId","setCredentialId","userOtpCredentials","isCleanedUp","prLoaded","remove","headInsert","resourcesCommonPath","$","ready","click","this","hasClass","removeClass","removeAttr","addClass","attr","defaultCred","otpCredential","userLabel","SamlPostForm","samlPost","htmlFormElement","setHtmlFormElement","CircleLoader","SAMLRequest","SAMLResponse","relayState","LoginDeviceVerifyUserCode","oauth2DeviceVerificationAction","LoginOauthGrant","oauth","advancedMsg","advancedMsgStr","clientId","clientScopesRequested","clientScope","consentScreenText","oauthAction","code","LoginPageExpired","noop","mss","time","setTime","tickRef","tick","timerId","setInterval","clearInterval","LoginVerifyEmail","_user$email","useCountDown","IconCircleCheck","email","LoginIdpLinkConfirm","idpAlias","IdpReviewUserProfile","isFomSubmittable","setIsFomSubmittable","UserProfileFormFields","onIsFormSubmittableValueChange","LoginIdpLinkEmail","brokerContext","LogoutConfirm","logoutConfirm","logoutConfirmAction","skipLink","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","KcApp","JSON","stringify","Suspense","pageId","Fallback","Select","SelectPrimitive","SelectValue","SelectTrigger","CaretSortIcon","SelectScrollUpButton","ChevronUpIcon","SelectScrollDownButton","ChevronDownIcon","SelectContent","position","SelectItem","BeforeField","AfterField","formValidationState","fieldStateByAttributeName","isFormSubmittable","formValidationDispatch","attributesWithPassword","useFormValidation","currentGroup","attribute","_attribute$displayNam","group","groupDisplayHeader","groupDisplayDescription","displayableErrors","formGroupClassName","Fragment","required","options","validators","onValueChange","option","onBlur","autocomplete","divId","errorMessage"],"sourceRoot":""}