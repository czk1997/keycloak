{"version":3,"file":"static/js/2821.a96fe8cc.chunk.js","mappings":"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","sources":["lib/utils.ts","login/i18n.ts","components/ui/dropdown-menu.tsx","components/ui/button.tsx","login/Template.tsx","login/KcApp.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import { createUseI18n } from \"keycloakify/login\";\n\nexport const { useI18n } = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    en: {\n        alphanumericalCharsOnly: \"Only alphanumerical characters\",\n        gender: \"Gender\",\n        // Here we overwrite the default english value for the message \"doForgotPassword\"\n        // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n        doForgotPassword: \"I forgot my password\",\n        invalidUserMessage: \"Invalid username or password. (this message was overwrite in the theme)\"\n    },\n    fr: {\n        /* spell-checker: disable */\n        alphanumericalCharsOnly: \"Caractère alphanumérique uniquement\",\n        gender: \"Genre\",\n        doForgotPassword: \"J'ai oublié mon mot de passe\",\n        invalidUserMessage: \"Nom d'utilisateur ou mot de passe invalide. (ce message a été écrasé dans le thème)\"\n        /* spell-checker: enable */\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {\n  CheckIcon,\n  ChevronRightIcon,\n  DotFilledIcon,\n} from \"@radix-ui/react-icons\"\n\nimport { cn } from \"lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport {useState} from \"react\";\nimport {assert} from \"keycloakify/tools/assert\";\nimport {clsx} from \"keycloakify/tools/clsx\";\nimport {usePrepareTemplate} from \"keycloakify/lib/usePrepareTemplate\";\nimport {type TemplateProps} from \"keycloakify/login/TemplateProps\";\nimport {useGetClassName} from \"keycloakify/login/lib/useGetClassName\";\nimport type {KcContext} from \"./kcContext\";\nimport type {I18n} from \"./i18n\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger\n} from \"components/ui/dropdown-menu\";\nimport {buttonVariants} from \"components/ui/button\";\nimport {cn} from \"lib/utils\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const {getClassName} = useGetClassName({doUseDefaultCss, classes});\n\n    const {msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag} = i18n;\n\n    const {realm, locale, auth, url, message, isAppInitiatedAction} = kcContext;\n\n    const {isReady} = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        \"styles\": [\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly.min.css`,\n            // `${url.resourcesCommonPath}/node_modules/patternfly/dist/css/patternfly-additions.min.css`,\n            // `${url.resourcesCommonPath}/lib/zocial/zocial.css`,\n            // `${url.resourcesPath}/css/login.css`\n        ],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": getClassName(\"kcBodyClass\")\n    });\n\n    useState(() => {\n        document.title = i18n.msgStr(\"loginTitle\", kcContext.realm.displayName);\n    });\n\n    if (!isReady) {\n        return null;\n    }\n\n    return (\n        <div\n            className=\"container relative hidden h-[800px] flex-col items-center justify-center md:grid lg:max-w-none lg:grid-cols-2 lg:px-0\">\n            {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n\n                <DropdownMenu>\n                    <DropdownMenuTrigger className={cn(\n                        buttonVariants({variant: \"ghost\"}),\n                        \"absolute right-4 top-4 md:right-8 md:top-8\"\n                    )}> {labelBySupportedLanguageTag[currentLanguageTag]}</DropdownMenuTrigger>\n                    <DropdownMenuContent>\n                        {locale.supported.map(({languageTag}) => (\n                            <DropdownMenuItem\n                                onClick={() => changeLocale(languageTag)}>  {labelBySupportedLanguageTag[languageTag]}</DropdownMenuItem>\n\n                        ))}\n                        <DropdownMenuItem>Profile</DropdownMenuItem>\n                        <DropdownMenuItem>Billing</DropdownMenuItem>\n                        <DropdownMenuItem>Team</DropdownMenuItem>\n                        <DropdownMenuItem>Subscription</DropdownMenuItem>\n                    </DropdownMenuContent>\n                </DropdownMenu>\n            )}\n            <div className=\"relative hidden h-full flex-col bg-muted p-10 text-white lg:flex dark:border-r\">\n                <div className=\"absolute inset-0 bg-zinc-900\"/>\n\n                <div className=\"relative z-20 flex items-center text-lg font-medium\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"mr-2 h-6 w-6\"\n                    >\n                        <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\"/>\n                    </svg>\n                    {msg(\"loginTitleHtml\", realm.displayNameHtml)}\n                </div>\n                <div className=\"relative z-20 mt-auto\">\n                    <blockquote className=\"space-y-2\">\n                        <p className=\"text-lg\">\n                            &ldquo;This library has saved me countless hours of work and\n                            helped me deliver stunning designs to my clients faster than\n                            ever before.&rdquo;\n                        </p>\n                        <footer className=\"text-sm\">Sofia Davis</footer>\n                    </blockquote>\n                </div>\n            </div>\n                <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]\">\n                    <div className=\"flex flex-col space-y-2 text-center\">\n                        {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n                            displayRequiredFields ? (\n                                <div className={getClassName(\"kcContentWrapperClass\")}>\n                                    <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                    <span className=\"subtitle\">\n                                        <span className=\"required\">*</span>\n                                        {msg(\"requiredFields\")}\n                                    </span>\n                                    </div>\n                                    <div className=\"col-md-10\">\n                                        <h1 id=\"kc-page-title\">{headerNode}</h1>\n                                    </div>\n                                </div>\n                            ) : (\n                                <h1 className={\"text-2xl font-semibold tracking-tight\"}\n                                    id=\"kc-page-title\">{headerNode}</h1>\n                            )\n                        ) : displayRequiredFields ? (\n                            <div className={getClassName(\"kcContentWrapperClass\")}>\n                                <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                <span className=\"subtitle\">\n                                    <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                                </span>\n                                </div>\n                                <div className=\"col-md-10\">\n                                    {showUsernameNode}\n                                    <div className={getClassName(\"kcFormGroupClass\")}>\n                                        <div id=\"kc-username\">\n                                            <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                            <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                                <div className=\"kc-login-tooltip\">\n                                                    <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                                    <span\n                                                        className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                                </div>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <>\n                                {showUsernameNode}\n                                <div className={getClassName(\"kcFormGroupClass\")}>\n                                    <div id=\"kc-username\">\n                                        <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                        <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                            <div className=\"kc-login-tooltip\">\n                                                <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                                <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                            </div>\n                                        </a>\n                                    </div>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                    <div id=\"kc-content\">\n                    <div id=\"kc-content-wrapper\">\n                        {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                        {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                            <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                {message.type === \"success\" &&\n                                    <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                {message.type === \"warning\" &&\n                                    <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                {message.type === \"error\" &&\n                                    <span className={getClassName(\"kcFeedbackErrorIcon\")}></span>}\n                                {message.type === \"info\" &&\n                                    <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                <span\n                                    className=\"kc-feedback-text\"\n                                    dangerouslySetInnerHTML={{\n                                        \"__html\": message.summary\n                                    }}\n                                />\n                            </div>\n                        )}\n                        {children}\n                        {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n                            <form\n                                id=\"kc-select-try-another-way-form\"\n                                action={url.loginAction}\n                                method=\"post\"\n                                className={clsx(displayWide && getClassName(\"kcContentWrapperClass\"))}\n                            >\n                                <div\n                                    className={clsx(\n                                        displayWide && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                                    )}\n                                >\n                                    <div className={getClassName(\"kcFormGroupClass\")}>\n                                        <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\"/>\n                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                        <a\n                                            href=\"#\"\n                                            id=\"try-another-way\"\n                                            onClick={() => {\n                                                document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                return false;\n                                            }}\n                                        >\n                                            {msg(\"doTryAnotherWay\")}\n                                        </a>\n                                    </div>\n                                </div>\n                            </form>\n                        )}\n                        {displayInfo && (\n                            <div id=\"kc-info\" className={getClassName(\"kcSignUpClass\")}>\n                                <div id=\"kc-info-wrapper\" className={getClassName(\"kcInfoAreaWrapperClass\")}>\n                                    {infoNode}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport Template from \"./Template\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={false} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // Removes those pages in you project. They are included to show you how to implement keycloak pages\n                    // that are not yes implemented by Keycloakify. \n                    // See: https://docs.keycloakify.dev/limitations#some-pages-still-have-the-default-theme.-why\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    // This is just an example to show you what is possible. You likely don't want to keep this as is. \n                    case \"info.ftl\": return (\n                        <Info\n                            {...{ kcContext, i18n, classes }}\n                            Template={lazy(() => import(\"keycloakify/login/Template\"))}\n                            doUseDefaultCss={true}\n                        />\n                    );\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n"],"names":["cn","_len","arguments","length","inputs","Array","_key","twMerge","clsx","useI18n","createUseI18n","en","alphanumericalCharsOnly","gender","doForgotPassword","invalidUserMessage","fr","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","React","_ref","ref","className","inset","children","props","_jsxs","_jsx","ChevronRightIcon","displayName","_ref2","DropdownMenuContent","_ref3","sideOffset","DropdownMenuItem","_ref4","_ref5","checked","CheckIcon","_ref6","DotFilledIcon","_ref7","_ref8","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Template","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","headerNode","showUsernameNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","isReady","usePrepareTemplate","useState","document","title","msgStr","internationalizationEnabled","assert","undefined","supported","map","languageTag","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayNameHtml","showUsername","showResetCredentials","id","attemptedUsername","href","loginRestartFlowUrl","_Fragment","type","concat","dangerouslySetInnerHTML","summary","showTryAnotherWayLink","action","loginAction","method","name","value","forms","submit","asChild","Comp","Slot","Login","lazy","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","KcApp","Suspense","pageId","Fallback"],"sourceRoot":""}